<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>18FPGA学习6：数字电路基础知识（下）</title>
    <link href="/2022/07/18/18FPGA%E5%AD%A6%E4%B9%A06%EF%BC%9A%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <url>/2022/07/18/18FPGA%E5%AD%A6%E4%B9%A06%EF%BC%9A%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="一、时序逻辑电路"><a href="#一、时序逻辑电路" class="headerlink" title="一、时序逻辑电路"></a>一、时序逻辑电路</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h3><p>时序电路有记忆功能，输出不仅与该时刻的输入有关，与之前的输入也有关系，也就是说时序逻辑电路有记忆功能。时序逻辑电路由两部分组成：组合电路和记忆电路。组合电路就是之前学得内容。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657980012704-a4456f57-3479-4e30-9918-cd3df1cf2fe0.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=222&id=ua1aaf27c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=291&originWidth=490&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15120&status=done&style=none&taskId=uf77f8cf1-b517-443d-b59e-5ac32986481&title=&width=373.3333333333333" alt="image.png"></p><h3 id="2-存储电路"><a href="#2-存储电路" class="headerlink" title="2.存储电路"></a>2.存储电路</h3><p>存储电路一般为双稳态电路，在没有外在激励下，保持一个稳态，当收到激励变为另一个稳态。因此称作双稳态。常见的存储电路有：<strong>锁存器和触发器</strong></p><h4 id="（1）锁存器"><a href="#（1）锁存器" class="headerlink" title="（1）锁存器"></a>（1）锁存器</h4><h5 id="①RS锁存器（或非门组成）"><a href="#①RS锁存器（或非门组成）" class="headerlink" title="①RS锁存器（或非门组成）"></a>①RS锁存器（或非门组成）</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657980195721-3344d671-e34a-4464-aa33-4daa635d46ff.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=195&id=u3f1bdc61&margin=%5Bobject%20Object%5D&name=image.png&originHeight=256&originWidth=549&originalType=binary&ratio=1&rotation=0&showTitle=false&size=30770&status=done&style=none&taskId=ue8e4368b-448a-4445-805c-abc57810547&title=&width=418.2857142857143" alt="image.png"></p><p><strong>置位：</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657980258225-99cbda08-c7da-447c-a591-db170d76af37.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=203&id=u13a48185&margin=%5Bobject%20Object%5D&name=image.png&originHeight=266&originWidth=606&originalType=binary&ratio=1&rotation=0&showTitle=false&size=38903&status=done&style=none&taskId=u3fd0bb18-0ac3-4558-836b-9d4d723f446&title=&width=461.7142857142857" alt="image.png"></p><p><strong>复位：</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657980322008-96b97e7f-6115-44c3-943a-d5b7d31299a8.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=211&id=u9d9e74cb&margin=%5Bobject%20Object%5D&name=image.png&originHeight=277&originWidth=604&originalType=binary&ratio=1&rotation=0&showTitle=false&size=36708&status=done&style=none&taskId=u5d0b99b8-7323-44e7-a600-3b1abf6ae87&title=&width=460.1904761904762" alt="image.png"></p><p>锁存器能够将电位状态锁住，比如对于复位这张图，如果将RD的值换为0（取消激励），则状态如下，注意RD在恢复为0之前，另一端的信号是仍然保持不变的（图中框住的地方），这也就是时序逻辑电路的特点。 </p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657980746900-aedcf94d-d122-4107-a658-14ab96a93b0a.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=194&id=u2f625c78&margin=%5Bobject%20Object%5D&name=image.png&originHeight=255&originWidth=595&originalType=binary&ratio=1&rotation=0&showTitle=false&size=33061&status=done&style=none&taskId=u2b75ad07-3474-481d-9b83-baeb42fb061&title=&width=453.3333333333333" alt="image.png"></p><p><font color=red>下面的情况不能发生，因为这种情况无法将电位状态锁住</font></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657980886675-e273087d-6b96-4a2a-b704-2a032cfeda71.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=190&id=u66046cdf&margin=%5Bobject%20Object%5D&name=image.png&originHeight=249&originWidth=570&originalType=binary&ratio=1&rotation=0&showTitle=false&size=37982&status=done&style=none&taskId=u98ef6aa0-083f-4247-a404-4ddf127e9f1&title=&width=434.2857142857143" alt="image.png"></p><p>因为当SD和RD变为0时是有先有后的，可能会出现错乱的情况，如下图所示，这两种状态都可能出现</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657981015404-4e08b596-8416-4535-aede-7d506ed95945.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=130&id=u7a9851a9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=170&originWidth=267&originalType=binary&ratio=1&rotation=0&showTitle=false&size=14486&status=done&style=none&taskId=ufd62a0a5-a298-4289-ac19-609c1b266e6&title=&width=203.42857142857142" alt="image.png"></p><h5 id="②RS锁存器（与非门组成）"><a href="#②RS锁存器（与非门组成）" class="headerlink" title="②RS锁存器（与非门组成）"></a>②RS锁存器（与非门组成）</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657981091159-66c28f22-4a92-4986-bd2f-624740065d06.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=180&id=u1390250e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=236&originWidth=331&originalType=binary&ratio=1&rotation=0&showTitle=false&size=16527&status=done&style=none&taskId=u3fb4aee5-c829-47b3-af78-fec11d9da1a&title=&width=252.1904761904762" alt="image.png"></p><h5 id="③描述方法"><a href="#③描述方法" class="headerlink" title="③描述方法"></a>③描述方法</h5><p><strong>特性表</strong>：反映输入变量、原状态、新状态之间关系的一种真值表<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657981276052-28354cc4-1b39-4d2f-899d-5b6382a66a1e.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=216&id=ubfd253bc&margin=%5Bobject%20Object%5D&name=image.png&originHeight=283&originWidth=435&originalType=binary&ratio=1&rotation=0&showTitle=false&size=53993&status=done&style=none&taskId=uca8a4264-d061-4f0b-8b5b-55e983f0bf2&title=&width=331.42857142857144" alt="image.png"></p><p><strong>特性方程：由特性表生成</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657981384728-a13bab1a-5a1d-46d6-8783-22a2b3cd8bcf.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=310&id=u4f454693&margin=%5Bobject%20Object%5D&name=image.png&originHeight=407&originWidth=875&originalType=binary&ratio=1&rotation=0&showTitle=false&size=97175&status=done&style=none&taskId=u83158a89-9b00-4562-af89-ed9eed3b630&title=&width=666.6666666666666" alt="image.png"></p><p><strong>状态图：</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657981405338-fa2cba32-e089-4aef-a371-58b7ebc97457.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=182&id=u1e00ccb2&margin=%5Bobject%20Object%5D&name=image.png&originHeight=239&originWidth=558&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34244&status=done&style=none&taskId=uc8796276-3683-4ab7-b330-fcc8eea6ce0&title=&width=425.14285714285717" alt="image.png"></p><p><strong>波形图：</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657981462132-c23946a8-0e5f-42e9-9363-22c01c273c53.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=299&id=u3ff6fe38&margin=%5Bobject%20Object%5D&name=image.png&originHeight=392&originWidth=545&originalType=binary&ratio=1&rotation=0&showTitle=false&size=85805&status=done&style=none&taskId=u8cfd7762-aebf-4728-a511-a5845576e46&title=&width=415.23809523809524" alt="image.png"></p><h5 id="④门控RS锁存器"><a href="#④门控RS锁存器" class="headerlink" title="④门控RS锁存器"></a>④门控RS锁存器</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657981836551-2e9c5510-2854-4511-80a7-0427f056af29.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=232&id=ud1fc2f32&margin=%5Bobject%20Object%5D&name=image.png&originHeight=304&originWidth=402&originalType=binary&ratio=1&rotation=0&showTitle=false&size=32049&status=done&style=none&taskId=u1a4b9535-6341-42c7-a636-2cbd6aa129b&title=&width=306.2857142857143" alt="image.png"></p><p>通过C实现门控</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657981870924-fc01d0e4-9891-478e-a034-51b41efbc443.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=229&id=u671015cb&margin=%5Bobject%20Object%5D&name=image.png&originHeight=300&originWidth=378&originalType=binary&ratio=1&rotation=0&showTitle=false&size=79965&status=done&style=none&taskId=u1444d1e9-2a15-4864-b094-0c5bcb6423a&title=&width=288" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657981923739-baee16b9-a272-4b1e-bd00-af118c30387c.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=290&id=u5359e701&margin=%5Bobject%20Object%5D&name=image.png&originHeight=380&originWidth=487&originalType=binary&ratio=1&rotation=0&showTitle=false&size=35090&status=done&style=none&taskId=uaa71a6d2-52d4-4a66-8bce-d9e6ae57c8a&title=&width=371.04761904761904" alt="image.png"></p><h5 id="⑤D锁存器"><a href="#⑤D锁存器" class="headerlink" title="⑤D锁存器"></a>⑤D锁存器</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657982216158-cca99443-2d87-4ec5-9d39-a3d4a7190b3e.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=269&id=u416e441d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=353&originWidth=401&originalType=binary&ratio=1&rotation=0&showTitle=false&size=56402&status=done&style=none&taskId=u27ccb599-8c77-4fd8-83fe-63341d81cd1&title=&width=305.5238095238095" alt="image.png"> </p><p>当C为0，Q的状态维持不变，当C为1，Q的状态和D相同</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657982257469-048f3e71-dde7-4ff7-9648-7adf6cf40906.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=211&id=u22560cb7&margin=%5Bobject%20Object%5D&name=image.png&originHeight=277&originWidth=814&originalType=binary&ratio=1&rotation=0&showTitle=false&size=50378&status=done&style=none&taskId=ua3c45e7f-a5cc-4884-9a00-3942f384eb7&title=&width=620.1904761904761" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657982347995-3d40154d-1ac9-400f-b2b3-708076ec67e8.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=213&id=u8b2a9b71&margin=%5Bobject%20Object%5D&name=image.png&originHeight=280&originWidth=774&originalType=binary&ratio=1&rotation=0&showTitle=false&size=46863&status=done&style=none&taskId=ub42242ec-e142-4e27-b277-3ee0cc2793b&title=&width=589.7142857142857" alt="image.png"><br>四种表示方法如下：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657982445222-39725b99-688b-4439-a93d-106e7c7abdbb.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=252&id=u145695a7&margin=%5Bobject%20Object%5D&name=image.png&originHeight=331&originWidth=407&originalType=binary&ratio=1&rotation=0&showTitle=false&size=46634&status=done&style=none&taskId=u6017e865-6b8a-4b70-8a67-2f8febef37a&title=&width=310.0952380952381" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657982460124-583f56c4-557b-403b-bca6-d429a3e18d69.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=57&id=u5e0005a1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=75&originWidth=190&originalType=binary&ratio=1&rotation=0&showTitle=false&size=3265&status=done&style=none&taskId=ue24882e7-da1b-4894-8244-3f0b71425d2&title=&width=144.76190476190476" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657982465406-6c032f9f-1617-4743-b4bd-770cea4cd014.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=146&id=u4a69b19c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=191&originWidth=562&originalType=binary&ratio=1&rotation=0&showTitle=false&size=28052&status=done&style=none&taskId=ue0346e6f-5ccf-4e7f-8c78-4f268650c16&title=&width=428.1904761904762" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657982528073-0cdfb078-89ae-4821-ba19-055b01a180dc.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=257&id=u2615e36e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=337&originWidth=626&originalType=binary&ratio=1&rotation=0&showTitle=false&size=61832&status=done&style=none&taskId=uffc560e7-1e6b-4092-9953-134d099686f&title=&width=476.95238095238096" alt="image.png"></p><h5 id="⑥空翻现象：当控制信号在一次有效状态期间，输出状态发生多次变化（空翻是一种有害现象）"><a href="#⑥空翻现象：当控制信号在一次有效状态期间，输出状态发生多次变化（空翻是一种有害现象）" class="headerlink" title="⑥空翻现象：当控制信号在一次有效状态期间，输出状态发生多次变化（空翻是一种有害现象）"></a>⑥空翻现象：当控制信号在一次有效状态期间，输出状态发生多次变化（空翻是一种有害现象）</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657982644426-754acf70-9f13-4531-8187-56326ca6592d.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=257&id=u4b3a6202&margin=%5Bobject%20Object%5D&name=image.png&originHeight=337&originWidth=570&originalType=binary&ratio=1&rotation=0&showTitle=false&size=40666&status=done&style=none&taskId=ua1e80d4d-b19a-42fe-ab9b-17811c6fdcf&title=&width=434.2857142857143" alt="image.png"></p><h4 id="（2）触发器"><a href="#（2）触发器" class="headerlink" title="（2）触发器"></a>（2）触发器</h4><h5 id="①主从D触发器（克服了空翻现象）"><a href="#①主从D触发器（克服了空翻现象）" class="headerlink" title="①主从D触发器（克服了空翻现象）"></a>①主从D触发器（克服了空翻现象）</h5><p>前半拍：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657982971883-ec793769-2bd0-4be1-a6c0-5e75a5675eff.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=149&id=u16d9e996&margin=%5Bobject%20Object%5D&name=image.png&originHeight=196&originWidth=740&originalType=binary&ratio=1&rotation=0&showTitle=false&size=36878&status=done&style=none&taskId=ufa9619dc-2cb6-4908-b554-711da49fa80&title=&width=563.8095238095239" alt="image.png"></p><p>后半拍：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657983017869-c0dd10a1-34fd-407b-92eb-88514c664ad3.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=162&id=uce391934&margin=%5Bobject%20Object%5D&name=image.png&originHeight=212&originWidth=919&originalType=binary&ratio=1&rotation=0&showTitle=false&size=43928&status=done&style=none&taskId=u066739be-76c3-45d2-92de-9cfcaacbdce&title=&width=700.1904761904761" alt="image.png"><br>可以看出，在一个节拍内，触发器的输出（Q)只会改变一次，这是由于当CLK为0时，只有F1有效，当CLK为1时，只有F2有效</p><h5 id="②波形图对比"><a href="#②波形图对比" class="headerlink" title="②波形图对比"></a>②波形图对比</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657983207013-af3632e1-fc1e-4768-80a6-9e84195e3434.png#clientId=u2d75c4ee-8e01-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=365&id=ubcb3f383&margin=%5Bobject%20Object%5D&name=image.png&originHeight=479&originWidth=1088&originalType=binary&ratio=1&rotation=0&showTitle=false&size=92763&status=done&style=none&taskId=ue3e6c7b7-73d0-4422-a5fc-4966b4d5eb3&title=&width=828.952380952381" alt="image.png"><br>D锁存器是电平触发，而主从D触发器的触发方式是：边沿触发</p><h3 id="3-寄存器和计数器"><a href="#3-寄存器和计数器" class="headerlink" title="3.寄存器和计数器"></a>3.寄存器和计数器</h3><h4 id="①寄存器"><a href="#①寄存器" class="headerlink" title="①寄存器"></a>①寄存器</h4><p>能够存储多位二进制数的时序电路叫做寄存器，有多个边缘触发器组成<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658136700041-d6f80caa-4f76-4755-853e-785d0edd886d.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=197&id=u3d359cac&margin=%5Bobject%20Object%5D&name=image.png&originHeight=259&originWidth=446&originalType=binary&ratio=1&rotation=0&showTitle=false&size=12863&status=done&style=none&taskId=u0208fb96-4bdf-48d9-a012-fb8ab869697&title=&width=339.8095238095238" alt="image.png"></p><p>电路特性表：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658136917284-6c5ceaef-56be-4add-83d5-05959de929e7.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=123&id=ufb26210e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=161&originWidth=633&originalType=binary&ratio=1&rotation=0&showTitle=false&size=61075&status=done&style=none&taskId=uc973354a-f040-4b40-bddc-ed7c6dcac91&title=&width=482.2857142857143" alt="image.png"></p><h4 id="②移位寄存器"><a href="#②移位寄存器" class="headerlink" title="②移位寄存器"></a>②移位寄存器</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658137167699-1d3543cc-8269-4107-a63b-3c244bf99184.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=244&id=u52aa97c9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=320&originWidth=708&originalType=binary&ratio=1&rotation=0&showTitle=false&size=62611&status=done&style=none&taskId=u43ecea39-0f51-44f6-9791-d6790aa7e34&title=&width=539.4285714285714" alt="image.png"></p><p>开始移位：Di上一刻的1倍传递给了D1，当给了它上升沿之后，Q1输出1，因此第二个灯亮起</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658137237234-19c407c3-7e16-46ba-b61e-cc829606c0de.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=230&id=u3bcb742b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=312&originWidth=721&originalType=binary&ratio=1&rotation=0&showTitle=false&size=63552&status=done&style=none&taskId=u2b8c0ee8-6f1a-49f0-96d6-cad64bbb631&title=&width=532.3333740234375" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658137440391-69c36216-0167-49aa-8f4e-d3b9d8995ffa.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=123&id=u5fb73e56&margin=%5Bobject%20Object%5D&name=image.png&originHeight=150&originWidth=475&originalType=binary&ratio=1&rotation=0&showTitle=false&size=16693&status=done&style=none&taskId=ub268a1e7-d4f1-41ee-a00a-6e45a54823f&title=&width=388.9047546386719" alt="image.png"></p><h4 id="③-计数器"><a href="#③-计数器" class="headerlink" title="③ 计数器"></a>③ 计数器</h4><p>能够统计输入脉冲数量的寄存器就叫计数器。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658137510742-d2875624-7ddb-441a-a4ca-30a33763cd0d.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=243&id=u67486cf4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=319&originWidth=329&originalType=binary&ratio=1&rotation=0&showTitle=false&size=18451&status=done&style=none&taskId=uee8cf663-35ee-42e6-91be-0f7779ac459&title=&width=250.66666666666666" alt="image.png"></p><p>初始状态：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658138054737-21d2070e-f631-49bf-ba86-02eef328d992.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=415&id=u4ada0127&margin=%5Bobject%20Object%5D&name=image.png&originHeight=545&originWidth=633&originalType=binary&ratio=1&rotation=0&showTitle=false&size=91384&status=done&style=none&taskId=u982d4726-184c-4432-a4fe-0978f91c803&title=&width=482.2857142857143" alt="image.png"><br>上升沿到来，锁存器锁存并输出，并且这个输出就是下个时刻的输入<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658138162803-4670fb6f-fdf8-4312-8024-66763aa5b42d.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=421&id=u7e9971de&margin=%5Bobject%20Object%5D&name=image.png&originHeight=553&originWidth=964&originalType=binary&ratio=1&rotation=0&showTitle=false&size=107528&status=done&style=none&taskId=u8413f29e-f256-4bf0-a9fa-f7cf4c470fa&title=&width=734.4761904761905" alt="image.png"><br>再来一个上升沿就变成0010，然后依次是0011、0100……，从而实现每来一个上升沿，输出的值加一。（1111的下一个是0001）<br>特性表和状态图：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658138505036-487c9031-f761-4c8e-8b05-5596ab7989eb.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=327&id=u1bbef8f8&margin=%5Bobject%20Object%5D&name=image.png&originHeight=429&originWidth=997&originalType=binary&ratio=1&rotation=0&showTitle=false&size=109466&status=done&style=none&taskId=uea2f6b94-187d-4d14-82d8-9838f159718&title=&width=759.6190476190476" alt="image.png"><br>图中这个计数器又叫作模16同步加法计数器，同步指触发器共用一个脉冲信号，异步则指使用不同的脉冲信号。<br><strong>应用：</strong><br>秒表使用两个计数器实现，一个模10计数器用来显示个位，一个模6计数器用来显示十位。（图中画反了），计数器在连接上显示译码器。因为是个位线变化，十位后变化，因此他们的时钟信号（上升沿）是不一样的，个位一秒一个上升沿，十位十秒一个上升沿。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658138610673-c0ec0031-df13-4c7a-9e60-cd0dcc6cf47d.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=438&id=u7425a3d6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=575&originWidth=878&originalType=binary&ratio=1&rotation=0&showTitle=false&size=71020&status=done&style=none&taskId=u8381d3db-f0fb-4841-a4d3-db233ca21bc&title=&width=668.952380952381" alt="image.png"></p><h2 id="二、时序电路的设计与分析"><a href="#二、时序电路的设计与分析" class="headerlink" title="二、时序电路的设计与分析"></a>二、时序电路的设计与分析</h2><h3 id="1-时序电路分析"><a href="#1-时序电路分析" class="headerlink" title="1.时序电路分析"></a>1.时序电路分析</h3><ul><li>根据已知电路图写出对应的函数式</li><li>根据得到的函数式写出对应的特性表</li><li>根据得到的特性表画出对应的状态图</li><li>根据得到的状态图分析出对应的逻辑规律</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658139224738-f960a496-af14-46e3-b46c-b64fd7b8ed06.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=233&id=u538bcd11&margin=%5Bobject%20Object%5D&name=image.png&originHeight=306&originWidth=1083&originalType=binary&ratio=1&rotation=0&showTitle=false&size=52759&status=done&style=none&taskId=u9d52324a-6630-4956-a2d8-2610c88bbcf&title=&width=825.1428571428571" alt="image.png"></p><h4 id="（1）摩尔型电路的分析"><a href="#（1）摩尔型电路的分析" class="headerlink" title="（1）摩尔型电路的分析"></a>（1）摩尔型电路的分析</h4><h5 id="①写出函数式"><a href="#①写出函数式" class="headerlink" title="①写出函数式"></a>①写出函数式</h5><p>输入方程：写出图中所有的触发器的输入信号是什么<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658139492326-f4bac8b9-332d-4738-be6c-c0b620bd8c41.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=261&id=u966fa9df&margin=%5Bobject%20Object%5D&name=image.png&originHeight=342&originWidth=995&originalType=binary&ratio=1&rotation=0&showTitle=false&size=53311&status=done&style=none&taskId=u85f536b2-406f-4b25-bd76-909753a1d49&title=&width=758.0952380952381" alt="image.png"><br>特型方程：触发器新状态的函数表达式<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658139627451-80b1991f-fbac-44ee-b2db-fa123640fbbc.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=244&id=ud2dd3d4b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=320&originWidth=1037&originalType=binary&ratio=1&rotation=0&showTitle=false&size=46347&status=done&style=none&taskId=u39217ef3-70b2-466d-8c58-8fc24dab3aa&title=&width=790.0952380952381" alt="image.png"><br>输出方程：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658139661982-cf2c5b45-45a1-400c-91a4-0036d5f40e0f.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=242&id=u54f96dbc&margin=%5Bobject%20Object%5D&name=image.png&originHeight=318&originWidth=872&originalType=binary&ratio=1&rotation=0&showTitle=false&size=25348&status=done&style=none&taskId=udddc0f19-bc68-43ab-b149-4e7afee2ade&title=&width=664.3809523809524" alt="image.png"></p><h5 id="②写出特性表"><a href="#②写出特性表" class="headerlink" title="②写出特性表"></a>②写出特性表</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658139857233-063f73c7-446a-46af-87e6-96b64655b05e.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=291&id=u415e079a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=382&originWidth=596&originalType=binary&ratio=1&rotation=0&showTitle=false&size=60286&status=done&style=none&taskId=u0df0f13a-4a06-4b70-8bb6-20ee7ea0bf0&title=&width=454.0952380952381" alt="image.png"></p><h5 id="③画出状态图"><a href="#③画出状态图" class="headerlink" title="③画出状态图"></a>③画出状态图</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658139922149-5e3cc9eb-a5f1-4c63-821a-9369462b343e.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=251&id=ud8b48bc1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=329&originWidth=994&originalType=binary&ratio=1&rotation=0&showTitle=false&size=120385&status=done&style=none&taskId=u1742499f-8f25-4e64-868e-fe112f016df&title=&width=757.3333333333334" alt="image.png"></p><h4 id="（2）米里型电路的分析"><a href="#（2）米里型电路的分析" class="headerlink" title="（2）米里型电路的分析"></a>（2）米里型电路的分析</h4><h5 id="①-写出方程"><a href="#①-写出方程" class="headerlink" title="① 写出方程"></a>① 写出方程</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658140134369-b36f8275-6868-43eb-82bb-b08390843f59.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=235&id=u5393141d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=309&originWidth=997&originalType=binary&ratio=1&rotation=0&showTitle=false&size=59335&status=done&style=none&taskId=ud369f4a1-794f-47a0-a23c-f6c12219c63&title=&width=759.6190476190476" alt="image.png"></p><h5 id="②写出状态表"><a href="#②写出状态表" class="headerlink" title="②写出状态表"></a>②写出状态表</h5><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658140242165-a805164d-85be-4248-92f1-0000a0c1eb3b.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=232&id=u162052e5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=378&originWidth=680&originalType=binary&ratio=1&rotation=0&showTitle=false&size=91436&status=done&style=none&taskId=u069ae2a9-7a16-43b4-b5c4-255fabc3565&title=&width=418.09527587890625" alt="image.png"></p><h5 id="③-画出状态图"><a href="#③-画出状态图" class="headerlink" title="③ 画出状态图"></a>③ 画出状态图</h5><p> <img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658140277196-9617e7c4-1943-420b-a749-7a86e53a4d36.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=332&id=u3e21af87&margin=%5Bobject%20Object%5D&name=image.png&originHeight=436&originWidth=523&originalType=binary&ratio=1&rotation=0&showTitle=false&size=50821&status=done&style=none&taskId=u55588a70-4015-484a-9673-38026653a20&title=&width=398.4761904761905" alt="image.png"></p><h3 id="1-时序电路设计"><a href="#1-时序电路设计" class="headerlink" title="1.时序电路设计"></a>1.时序电路设计</h3><h4 id="1-功能需求"><a href="#1-功能需求" class="headerlink" title="1.功能需求"></a>1.功能需求</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658140424245-2d2d42ab-4d38-45a9-8dca-00224a1285af.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=202&id=u284654a8&margin=%5Bobject%20Object%5D&name=image.png&originHeight=265&originWidth=742&originalType=binary&ratio=1&rotation=0&showTitle=false&size=90947&status=done&style=none&taskId=u61558fc2-5b93-4524-9b96-4d429f4efaa&title=&width=565.3333333333334" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658140486637-72151080-ee79-48be-87ab-e4a4202af14a.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=114&id=uf2faf7a6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=150&originWidth=495&originalType=binary&ratio=1&rotation=0&showTitle=false&size=37310&status=done&style=none&taskId=ud8ff6080-3481-4357-81d7-bedb5fd0f3f&title=&width=377.14285714285717" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658140511537-8b7a5058-3082-43ae-9961-b9685e92c4b1.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=32&id=u3944885e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=42&originWidth=296&originalType=binary&ratio=1&rotation=0&showTitle=false&size=8709&status=done&style=none&taskId=u108b8b5c-5114-441d-9ebb-5b93fa6a1e8&title=&width=225.52380952380952" alt="image.png"></p><h4 id="2-变量设置"><a href="#2-变量设置" class="headerlink" title="2.变量设置"></a>2.变量设置</h4><ul><li>只要1个输入反和1个输出端</li><li>只有4中状态：<ul><li>没有投币的时候、已经投入一枚硬币的时候、已经连续投入两枚硬币的时候、已经连续投入三枚硬币的时候</li></ul></li><li>改电路至少需要两个D触发器（可以表示四种状态：00&#x2F;01&#x2F;10&#x2F;11）</li></ul><h4 id="3-画状态图"><a href="#3-画状态图" class="headerlink" title="3.画状态图"></a>3.画状态图</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658140820684-c57e17f4-1751-4032-9618-68e73ec13afc.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=295&id=u79ae3ecd&margin=%5Bobject%20Object%5D&name=image.png&originHeight=387&originWidth=515&originalType=binary&ratio=1&rotation=0&showTitle=false&size=57491&status=done&style=none&taskId=uf5e1257d-6459-40a3-a7bc-700ae2cc9c6&title=&width=392.3809523809524" alt="image.png"></p><h4 id="4-写出特性表"><a href="#4-写出特性表" class="headerlink" title="4.写出特性表"></a>4.写出特性表</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658140839563-33691d96-ff68-41bf-b629-dfcfd71b2f19.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=206&id=u2e72e2d0&margin=%5Bobject%20Object%5D&name=image.png&originHeight=271&originWidth=498&originalType=binary&ratio=1&rotation=0&showTitle=false&size=27308&status=done&style=none&taskId=u62fad7c4-2ee1-487f-8213-6565675c7ee&title=&width=379.42857142857144" alt="image.png"></p><h4 id="5-写出函数"><a href="#5-写出函数" class="headerlink" title="5.写出函数"></a>5.写出函数</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658140933505-0043c1e2-f3b9-4494-a4af-f5e9b2aed1d5.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=230&id=u414203ce&margin=%5Bobject%20Object%5D&name=image.png&originHeight=302&originWidth=946&originalType=binary&ratio=1&rotation=0&showTitle=false&size=59261&status=done&style=none&taskId=u4d1bd839-dcbe-478d-98e7-7296a94da4f&title=&width=720.7619047619048" alt="image.png"></p><h4 id="6-画出电路图"><a href="#6-画出电路图" class="headerlink" title="6.画出电路图"></a>6.画出电路图</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1658140947300-2a280866-6830-43e7-bf32-4c197b4d4fdf.png#clientId=ubf322f66-f312-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=286&id=u4a99d134&margin=%5Bobject%20Object%5D&name=image.png&originHeight=375&originWidth=780&originalType=binary&ratio=1&rotation=0&showTitle=false&size=43375&status=done&style=none&taskId=u5b783de8-1b18-44f0-84f4-3ea0430d751&title=&width=594.2857142857143" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>FPGA学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数字电路</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序学习1</title>
    <link href="/2022/07/15/17%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A01/"/>
    <url>/2022/07/15/17%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%AD%A6%E4%B9%A01/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="一、小程序简介"><a href="#一、小程序简介" class="headerlink" title="一、小程序简介"></a>一、小程序简介</h2><h3 id="1-小程序与普通网页的不同"><a href="#1-小程序与普通网页的不同" class="headerlink" title="1.小程序与普通网页的不同"></a>1.小程序与普通网页的不同</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657868896687-15aa3395-8a87-4d47-affe-8d85d3701eb9.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=285&id=u5b4f238d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=397&originWidth=849&originalType=binary&ratio=1&rotation=0&showTitle=false&size=123105&status=done&style=none&taskId=ufa3e0865-7e8d-433f-9df1-d4ba870d4c8&title=&width=608.857177734375" alt="image.png"></p><h2 id="二、第一个小程序"><a href="#二、第一个小程序" class="headerlink" title="二、第一个小程序"></a>二、第一个小程序</h2><h3 id="1-注册开发者账号"><a href="#1-注册开发者账号" class="headerlink" title="1.注册开发者账号"></a>1.注册开发者账号</h3><p>使用浏览器打开 <a href="">https://mp.weixin.qq.com/</a> 网址，点击右上角的“立即注册”即可进入到小程序开发账号，按照步骤：</p><ul><li>填写账号信息</li><li>邮箱激活</li><li>主体信息登记</li><li>获取小程序的AppID，这个在之后发布建立项目时需要（在网页版的小程序管理界面，进入地址仍为注册的地址）<ul><li><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657875413757-f251205e-a408-45a5-a2ea-51fdfbfea019.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=370&id=uc49cd448&margin=%5Bobject%20Object%5D&name=image.png&originHeight=486&originWidth=691&originalType=binary&ratio=1&rotation=0&showTitle=false&size=92819&status=done&style=none&taskId=u145db4cb-aac5-469b-bddc-7ae1f54e831&title=&width=526.4761904761905" alt="image.png"></li></ul></li></ul><h3 id="2-安装开发者工具"><a href="#2-安装开发者工具" class="headerlink" title="2.安装开发者工具"></a>2.安装开发者工具</h3><h4 id="①下载地址"><a href="#①下载地址" class="headerlink" title="①下载地址"></a>①下载地址</h4><p>推荐下载和安装最新的稳定版（Stable Build）的微信开发者工具，下载页面的链接如下：<br><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/stable.html">https://developers.weixin.qq.com/miniprogram/dev/devtools/stable.html </a><br> 下载好安装包后正常安装，注意更改默认地址，C盘空间不足的时可以放到其他盘符</p><h4 id="②相关配置"><a href="#②相关配置" class="headerlink" title="②相关配置"></a>②相关配置</h4><p>找到设置界面，更改外观和代理。外观根据自己喜好设置，代理选择第一个选项，下图中有展示<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657875717688-b84f96f8-142b-4a1c-8318-43f7c976c432.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=251&id=u722a97ac&margin=%5Bobject%20Object%5D&name=image.png&originHeight=330&originWidth=761&originalType=binary&ratio=1&rotation=0&showTitle=false&size=66989&status=done&style=none&taskId=u4198856d-bf7b-493e-a69b-ee387330c96&title=&width=579.8095238095239" alt="image.png"></p><h3 id="3-创建项目"><a href="#3-创建项目" class="headerlink" title="3.创建项目"></a>3.创建项目</h3><h4 id="第一步：点击-号按钮"><a href="#第一步：点击-号按钮" class="headerlink" title="第一步：点击+号按钮"></a>第一步：点击+号按钮</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657875841529-e0b3512e-4d8c-4fba-b0b9-e4e47d01e59e.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=345&id=ubd5ca73c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=453&originWidth=690&originalType=binary&ratio=1&rotation=0&showTitle=false&size=58686&status=done&style=none&taskId=ue5e0eb58-0078-439a-b144-a066754f015&title=&width=525.7142857142857" alt="image.png"></p><h4 id="第二步：填写项目信息（这里就需要填写之前的AppID）"><a href="#第二步：填写项目信息（这里就需要填写之前的AppID）" class="headerlink" title="第二步：填写项目信息（这里就需要填写之前的AppID）"></a>第二步：填写项目信息（这里就需要填写之前的AppID）</h4><p>按照图中的选型进行框选，后端服务要选择”不使用云服务“，语言选择JavaScript<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657875862688-d53c9267-4ead-4238-b9db-4ee04fa05b0a.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=364&id=u0d4e8418&margin=%5Bobject%20Object%5D&name=image.png&originHeight=478&originWidth=682&originalType=binary&ratio=1&rotation=0&showTitle=false&size=106646&status=done&style=none&taskId=u56d1732c-63fb-43a7-a6c3-3085e880f98&title=&width=519.6190476190476" alt="image.png"></p><h4 id="第三步：完成创建后，界面如图所示"><a href="#第三步：完成创建后，界面如图所示" class="headerlink" title="第三步：完成创建后，界面如图所示"></a>第三步：完成创建后，界面如图所示</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657875949294-1f6368d0-f681-4112-a10e-663c65a9194f.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=368&id=uaea582a4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=483&originWidth=724&originalType=binary&ratio=1&rotation=0&showTitle=false&size=97753&status=done&style=none&taskId=ud7aae92f-54cb-46e4-8078-503270812a7&title=&width=551.6190476190476" alt="image.png"></p><h3 id="4-界面组成"><a href="#4-界面组成" class="headerlink" title="4.界面组成"></a>4.界面组成</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657876315833-f7b37a8f-5fd9-42a3-bd25-ba0b4cb90ccd.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=742&id=u423896b3&margin=%5Bobject%20Object%5D&name=image.png&originHeight=974&originWidth=1454&originalType=binary&ratio=1&rotation=0&showTitle=false&size=145468&status=done&style=none&taskId=ua19f7e6a-c80b-4278-8d4d-69ecb62008b&title=&width=1107.8095238095239" alt="image.png"></p><h2 id="三、小程序代码的构成"><a href="#三、小程序代码的构成" class="headerlink" title="三、小程序代码的构成"></a>三、小程序代码的构成</h2><h3 id="1-项目结构"><a href="#1-项目结构" class="headerlink" title="1.项目结构"></a>1.项目结构</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657876383040-53a2200f-8eb4-472e-a341-689e9fa11b60.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=266&id=u42baf350&margin=%5Bobject%20Object%5D&name=image.png&originHeight=349&originWidth=828&originalType=binary&ratio=1&rotation=0&showTitle=false&size=111308&status=done&style=none&taskId=uc9967fc7-7e09-4c1f-a627-e36306e1291&title=&width=630.8571428571429" alt="image.png"></p><h3 id="2-小程序页面的组成部分（pages文件夹）"><a href="#2-小程序页面的组成部分（pages文件夹）" class="headerlink" title="2.小程序页面的组成部分（pages文件夹）"></a>2.小程序页面的组成部分（pages文件夹）</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657876432560-f4718a54-d077-4dd5-b174-50de03120b01.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=273&id=u6785c2d1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=358&originWidth=816&originalType=binary&ratio=1&rotation=0&showTitle=false&size=125875&status=done&style=none&taskId=u5565a5b5-9067-4b7a-b3d4-34cce189d18&title=&width=621.7142857142857" alt="image.png"></p><h3 id="3-JSON配置文件"><a href="#3-JSON配置文件" class="headerlink" title="3.JSON配置文件"></a>3.JSON配置文件</h3><h4 id="①JSON配置文件的作用"><a href="#①JSON配置文件的作用" class="headerlink" title="①JSON配置文件的作用"></a>①JSON配置文件的作用</h4><p>JSON 是一种数据格式，在实际开发中，JSON 总是以配置文件的形式出现。小程序项目中也不例外：通过不同的 .json 配置文件，可以对小程序项目进行不同级别的配置。<br><strong>小程序项目中有 4 种 json 配置文件，分别是：</strong></p><ol><li>项目根目录中的 app.json 配置文件</li><li>项目根目录中的 project.config.json 配置文件</li><li>项目根目录中的 sitemap.json 配置文件</li><li>每个页面文件夹中的 .json 配置文件</li></ol><h4 id="②app-json-文件"><a href="#②app-json-文件" class="headerlink" title="②app.json 文件"></a>②app.json 文件</h4><p> <img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657876769030-730e63df-93b8-4841-bc85-94560b7f59c7.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=279&id=uac325507&margin=%5Bobject%20Object%5D&name=image.png&originHeight=392&originWidth=837&originalType=binary&ratio=1&rotation=0&showTitle=false&size=158046&status=done&style=none&taskId=uc24d89ef-bb14-4c21-85cc-6ec76a59c9e&title=&width=596.7142944335938" alt="image.png"></p><h4 id="③project-config-json-文件"><a href="#③project-config-json-文件" class="headerlink" title="③project.config.json 文件"></a>③project.config.json 文件</h4><p> project.config.json 是项目配置文件，用来记录我们对小程序开发工具所做的个性化配置，例如：</p><ul><li>setting 中保存了编译相关的配置</li><li>projectname 中保存的是项目名称</li><li>appid 中保存的是小程序的账号 ID</li></ul><h4 id="④sitemap-json-文件"><a href="#④sitemap-json-文件" class="headerlink" title="④sitemap.json 文件"></a>④sitemap.json 文件</h4><p> 微信现已开放小程序内搜索，效果类似于 PC 网页的 SEO。sitemap.json 文件用来配置小程序页面是否允许微信索引。<br>当开发者允许微信索引时，微信会通过爬虫的形式，为小程序的页面内容建立索引。当用户的搜索关键字和页面的索引匹配成功的时候，小程序的页面将可能展示在搜索结果中。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657876941729-239f695e-65fa-4164-9e53-652959070111.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=189&id=u4934445f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=248&originWidth=817&originalType=binary&ratio=1&rotation=0&showTitle=false&size=76767&status=done&style=none&taskId=u4f123ece-ba43-4ec0-ad31-b2edd7114ee&title=&width=622.4761904761905" alt="image.png"><br>其中：<br>     allow表示允许，如果不允许应改为disallow<br>    *只适用于所有的页面</p><h4 id="⑤页面的json文件"><a href="#⑤页面的json文件" class="headerlink" title="⑤页面的json文件"></a>⑤页面的json文件</h4><p>小程序中的每一个页面，可以使用 .json 文件来对本页面的窗口外观进行配置，页面中的配置项会覆盖app.json 的 window 中相同的配置项。例如： </p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657877032334-a5bfd76e-3ced-45bf-9894-0b6f07e96a3a.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=374&id=u8e57844d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=799&originWidth=1460&originalType=binary&ratio=1&rotation=0&showTitle=false&size=106436&status=done&style=none&taskId=u51634df4-fc71-4b99-ba38-0de38e561c2&title=&width=684" alt="image.png"></p><h3 id="4-利用JSON文件实现一些简单操作"><a href="#4-利用JSON文件实现一些简单操作" class="headerlink" title="4.利用JSON文件实现一些简单操作"></a>4.利用JSON文件实现一些简单操作</h3><h4 id="①新建小程序页面"><a href="#①新建小程序页面" class="headerlink" title="①新建小程序页面"></a>①新建小程序页面</h4><p>只需要在 app.json -&gt; pages 中新增页面的存放路径，小程序开发者工具即可帮我们自动创建对应的页面文件，如图所示： </p><p> <img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657877139436-971cabb9-9838-4e43-adfa-8aa044d84b0e.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=404&id=ubacc5fc7&margin=%5Bobject%20Object%5D&name=image.png&originHeight=643&originWidth=988&originalType=binary&ratio=1&rotation=0&showTitle=false&size=95706&status=done&style=none&taskId=u7b44ac1c-d1e5-4e5f-9bd1-c5c7f5a6516&title=&width=620" alt="image.png"></p><h4 id="②修改项目首页"><a href="#②修改项目首页" class="headerlink" title="②修改项目首页"></a>②修改项目首页</h4><p>只需要调整 app.json -&gt; pages 数组中页面路径的前后顺序，即可修改项目的首页。小程序会把排在第一位的页面，当作项目首页进行渲染，如图所示： </p><p> <img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657877174648-fff67d17-945a-443f-8084-9b30bb77b630.png#clientId=u2acdeac0-f0fd-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=349&id=ua62f8561&margin=%5Bobject%20Object%5D&name=image.png&originHeight=801&originWidth=1458&originalType=binary&ratio=1&rotation=0&showTitle=false&size=115205&status=done&style=none&taskId=ua2a4a85f-4dd9-48cd-993f-8c90e51c53d&title=&width=635" alt="image.png"></p><h3 id="5-WXML模板"><a href="#5-WXML模板" class="headerlink" title="5.WXML模板"></a>5.WXML模板</h3><p>WXML（WeiXin Markup Language）是小程序框架设计的一套标签语言，用来构建小程序页面的结构，其作用类似于网页开发中的 HTML。<br><strong>WXML 和 HTML 的区别 ：</strong></p><ol><li><p>标签名称不同</p><ul><li>HTML （div, span, img, a）</li><li>WXML（view, text, image, navigator）</li></ul></li><li><p>属性节点不同</p><ul><li>&#96;&#96;&#96;<br><a href="#">超链接</a><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br>- ```<br>  <span class="hljs-tag">&lt;<span class="hljs-name">navigator</span> <span class="hljs-attr">url</span>=<span class="hljs-string">&quot;/pages/home/home&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">navigator</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>提供了类似于 Vue 中的模板语法</p><ul><li>数据绑定</li><li>列表渲染</li><li>条件渲染</li></ul></li></ol><h3 id="6-WXSS样式"><a href="#6-WXSS样式" class="headerlink" title="6.WXSS样式"></a>6.WXSS样式</h3><p>WXSS (WeiXin Style Sheets)是一套样式语言，用于描述 WXML 的组件样式，类似于网页开发中的 CSS。<br><strong>WXSS 和 CSS 的区别 ：</strong></p><ol><li>新增了 rpx 尺寸单位<ul><li>CSS 中需要手动进行像素单位换算，例如 rem</li><li>WXSS 在底层支持新的尺寸单位 rpx，在不同大小的屏幕上小程序会自动进行换算</li></ul></li><li>提供了全局的样式和局部样式<ul><li>项目根目录中的 app.wxss 会作用于所有小程序页面</li><li>局部页面的 .wxss 样式仅对当前页面生效</li></ul></li><li>WXSS 仅支持部分 CSS 选择器<ul><li>.class 和 #id</li><li>element</li><li>并集选择器、后代选择器</li><li>::after 和 ::before 等伪类选择器</li></ul></li></ol><h3 id="四、小程序的宿主环境（待补充）"><a href="#四、小程序的宿主环境（待补充）" class="headerlink" title="四、小程序的宿主环境（待补充）"></a>四、小程序的宿主环境（待补充）</h3><h3 id="五、协同工作与发布（待补充）"><a href="#五、协同工作与发布（待补充）" class="headerlink" title="五、协同工作与发布（待补充）"></a>五、协同工作与发布（待补充）</h3>]]></content>
    
    
    <categories>
      
      <category>微信小程序学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FPGA学习5：数字电路基础知识（上）</title>
    <link href="/2022/07/15/16FPGA%E5%AD%A6%E4%B9%A05%EF%BC%9A%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <url>/2022/07/15/16FPGA%E5%AD%A6%E4%B9%A05%EF%BC%9A%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="一、基础知识"><a href="#一、基础知识" class="headerlink" title="一、基础知识"></a>一、基础知识</h2><h3 id="1-数字信号与模拟信号"><a href="#1-数字信号与模拟信号" class="headerlink" title="1.数字信号与模拟信号"></a>1.数字信号与模拟信号</h3><p>数字量–&gt;数字信号：处理数字信号的电路叫做数字电路 （电压随时间不连续变化）</p><p><strong>注重</strong>输入输出的逻辑关系</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657852874832-7efdfd73-0532-4745-8556-bceb6ace7a09.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=104&id=u2e1c2531&margin=%5Bobject%20Object%5D&name=image.png&originHeight=184&originWidth=359&originalType=binary&ratio=1&rotation=0&showTitle=false&size=7285&status=done&style=none&taskId=u263d846c-64f5-45cf-8e01-28820683ec9&title=&width=203.5238037109375" alt="image.png"></p><p>物理量–&gt;模拟信号：处理模拟信号的电路叫做模拟电路（电压随时间连续变化）</p><p><strong>注重</strong>出入输出信号的大小关系和相位关系</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657852979520-69868a25-4b8d-422c-97a0-a443fc64f9d1.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=117&id=u20b30f58&margin=%5Bobject%20Object%5D&name=image.png&originHeight=211&originWidth=369&originalType=binary&ratio=1&rotation=0&showTitle=false&size=16323&status=done&style=none&taskId=u461e523d-3af0-49d2-b021-234ffead369&title=&width=205.14285278320312" alt="image.png"></p><h3 id="2-数制与编码"><a href="#2-数制与编码" class="headerlink" title="2.数制与编码"></a>2.数制与编码</h3><h4 id="①数制"><a href="#①数制" class="headerlink" title="①数制"></a>①数制</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657853150166-10827cc9-fe54-42d1-96ed-f5e3ad506c47.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=279&id=ub8ba0d0b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=366&originWidth=686&originalType=binary&ratio=1&rotation=0&showTitle=false&size=40531&status=done&style=none&taskId=u9c9b23b6-8aa0-4b87-bc0b-4b08dc1e5a2&title=&width=522.6666666666666" alt="image.png"></p><h4 id="②编码：代码与信息之间的对应过程就是编码"><a href="#②编码：代码与信息之间的对应过程就是编码" class="headerlink" title="②编码：代码与信息之间的对应过程就是编码"></a>②编码：代码与信息之间的对应过程就是编码</h4><p>常用的是BCD码：用四位二进制来表示一位十进制数，BCD码又分为以下几种：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657853310020-2fd04dac-101d-4933-bb41-fefb3f778e93.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=352&id=ub6afafed&margin=%5Bobject%20Object%5D&name=image.png&originHeight=462&originWidth=924&originalType=binary&ratio=1&rotation=0&showTitle=false&size=279827&status=done&style=none&taskId=ubc3746b7-6841-4c89-b8f1-2b51f8d3efc&title=&width=704" alt="image.png"></p><h3 id="3-逻辑代数"><a href="#3-逻辑代数" class="headerlink" title="3.逻辑代数"></a>3.逻辑代数</h3><h4 id="①运算"><a href="#①运算" class="headerlink" title="①运算"></a>①运算</h4><p>又叫作开关代数与布尔代数，根据一定的规律进行运算，只有0和1<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657853393545-e507f403-346c-4f7c-b6fd-92bdc0d917a0.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=312&id=uefe6da5c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=409&originWidth=796&originalType=binary&ratio=1&rotation=0&showTitle=false&size=48940&status=done&style=none&taskId=ue9753015-388d-471b-8a4b-e727407cbe1&title=&width=606.4761904761905" alt="image.png"></p><h4 id="②逻辑代数的表示方法"><a href="#②逻辑代数的表示方法" class="headerlink" title="②逻辑代数的表示方法"></a>②逻辑代数的表示方法</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657853577907-6b9dac56-8f87-4879-99be-664f1799fd07.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=130&id=u6911a33c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=221&originWidth=585&originalType=binary&ratio=1&rotation=0&showTitle=false&size=35860&status=done&style=none&taskId=u5e769467-180c-4245-9268-ca7b0e0be8f&title=&width=343.71429443359375" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657853603754-000be081-635a-4823-be8d-3fa7d4451189.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=240&id=uca4d236e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=417&originWidth=510&originalType=binary&ratio=1&rotation=0&showTitle=false&size=55237&status=done&style=none&taskId=u4d1991ab-7d6a-4c2c-bd4b-07ef25a0a66&title=&width=293.5714416503906" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657853626157-94e85f9b-a96e-4671-a38e-d1cc0be4a418.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=254&id=u613271fc&margin=%5Bobject%20Object%5D&name=image.png&originHeight=443&originWidth=574&originalType=binary&ratio=1&rotation=0&showTitle=false&size=44353&status=done&style=none&taskId=u84c5236e-98b9-4944-a1c1-c36b5e473e2&title=&width=329.3333435058594" alt="image.png"></p><h4 id="③逻辑函数的化简，利用这些规律进行化简"><a href="#③逻辑函数的化简，利用这些规律进行化简" class="headerlink" title="③逻辑函数的化简，利用这些规律进行化简"></a>③逻辑函数的化简，利用这些规律进行化简</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657853661049-b7e7fc68-8057-4015-84eb-eec2ffc89686.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=285&id=u8dc1f3f6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=501&originWidth=1033&originalType=binary&ratio=1&rotation=0&showTitle=false&size=220534&status=done&style=none&taskId=u3122d9a0-79d2-4f65-bed2-6df6ec0f569&title=&width=587.8095092773438" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657853757465-5a7a34d9-6a1e-4526-b6e1-086f82b65627.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=175&id=u0be5384b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=245&originWidth=680&originalType=binary&ratio=1&rotation=0&showTitle=false&size=43173&status=done&style=none&taskId=u118bd36a-7262-4ab9-bdfc-9a42ecb0820&title=&width=487.09527587890625" alt="image.png"></p><h2 id="二、组合逻辑电路"><a href="#二、组合逻辑电路" class="headerlink" title="二、组合逻辑电路"></a>二、组合逻辑电路</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h3><p>输出只与当时的输入有关，与之前有没有输入变量没有关系<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657853921579-49967014-281f-407c-bf29-11ad584751ee.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=131&id=u08e63a55&margin=%5Bobject%20Object%5D&name=image.png&originHeight=172&originWidth=465&originalType=binary&ratio=1&rotation=0&showTitle=false&size=20894&status=done&style=none&taskId=uaf45eb43-03d8-4c50-804f-b399bb48ec0&title=&width=354.2857142857143" alt="image.png"></p><h3 id="2-分析与设计"><a href="#2-分析与设计" class="headerlink" title="2.分析与设计"></a>2.分析与设计</h3><h4 id="①分析"><a href="#①分析" class="headerlink" title="①分析"></a>①分析</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657854038460-59bd59d6-2356-4930-b32a-e803ea73193d.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=42&id=ua8367f34&margin=%5Bobject%20Object%5D&name=image.png&originHeight=55&originWidth=696&originalType=binary&ratio=1&rotation=0&showTitle=false&size=27186&status=done&style=none&taskId=u569231f6-6883-4aee-b038-e3eabd987ce&title=&width=530.2857142857143" alt="image.png"><br><strong><font color='red'>例子：</font></strong></p><p><strong>第一步</strong>：从逻辑图到表达式<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657854209382-c267e488-c7b7-420d-a26f-61ca44400e59.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=223&id=u38119dd9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=293&originWidth=932&originalType=binary&ratio=1&rotation=0&showTitle=false&size=45949&status=done&style=none&taskId=u6b83fa3a-0025-429c-9499-50a37ddb823&title=&width=710.0952380952381" alt="image.png"><br><strong>第二步</strong>：画出真值表<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657854232637-aeea3f77-e66e-413d-ab1e-c34f19173086.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=171&id=u6dca42d9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=225&originWidth=852&originalType=binary&ratio=1&rotation=0&showTitle=false&size=38123&status=done&style=none&taskId=ue3d8a650-047a-46db-89e0-852e32f7af8&title=&width=649.1428571428571" alt="image.png"><br><strong>第三步</strong>：分析输入输出之间的逻辑关系<br>只有两个或者三个为1的时候结果才为1（少数服从多数）</p><h4 id="②设计"><a href="#②设计" class="headerlink" title="②设计"></a>②设计</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657854475281-e4c94266-5ddb-4c96-ace6-e55efc546242.png#clientId=u089bf9a0-488d-4&crop=0.0475&crop=0&crop=1&crop=1&from=paste&height=64&id=u56f85758&margin=%5Bobject%20Object%5D&name=image.png&originHeight=89&originWidth=785&originalType=binary&ratio=1&rotation=0&showTitle=false&size=26800&status=done&style=none&taskId=u24a54af6-b372-43b7-b7b3-d0a7f294232&title=&width=561" alt="image.png"><br>分析和设计的步骤正好相反</p><p><strong><font color='red'>例子：</font></strong></p><p><strong>第一步</strong>：确定逻辑功能，要求改变任意一个开关的状态，都能实现电灯状态的改变<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657854606625-7b03ebc2-b2b9-4a8e-94f9-8db5fcf3e615.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=132&id=u28d541a1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=193&originWidth=612&originalType=binary&ratio=1&rotation=0&showTitle=false&size=26024&status=done&style=none&taskId=uc2a3fbc8-814a-49b4-9985-6a97bd75d8e&title=&width=418.2857360839844" alt="image.png"></p><p><strong>第二步</strong>：列出真值表，根据真值表写出表达式（奇数个开关，灯灭；偶数个开关，灯亮）<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657854805954-c7232eb3-f499-4837-9169-20e75e4a4dbe.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=184&id=uc87ff3a5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=241&originWidth=862&originalType=binary&ratio=1&rotation=0&showTitle=false&size=31194&status=done&style=none&taskId=u61a1096e-2426-4663-930a-a4bfb1ebbd4&title=&width=656.7619047619048" alt="image.png"></p><p><strong>第三步</strong>：根据表达式画出逻辑图<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657854904396-5a12ebff-690b-48a6-88d6-ad67c5455274.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=227&id=u88c36848&margin=%5Bobject%20Object%5D&name=image.png&originHeight=298&originWidth=455&originalType=binary&ratio=1&rotation=0&showTitle=false&size=42918&status=done&style=none&taskId=uc5a3111b-e68b-41ad-a741-e911c29aa8e&title=&width=346.6666666666667" alt="image.png"></p><h3 id="3-竞争与冒险"><a href="#3-竞争与冒险" class="headerlink" title="3.竞争与冒险"></a>3.竞争与冒险</h3><h4 id="①竞争与冒险的简单介绍"><a href="#①竞争与冒险的简单介绍" class="headerlink" title="①竞争与冒险的简单介绍"></a>①竞争与冒险的简单介绍</h4><p><strong>产生原因</strong>：在理想的门电路之中是没有延迟时间的，而实际上是存在的<br><strong>竞争现象</strong>：A信号经过两个路径到达G2，到达的时间是不一样的。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657854979574-80063573-2a66-486c-91c6-f88758813bfb.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=104&id=u498b9c9e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=136&originWidth=407&originalType=binary&ratio=1&rotation=0&showTitle=false&size=13184&status=done&style=none&taskId=u91321622-a722-4833-94a6-d5f177e88d5&title=&width=310.0952380952381" alt="image.png"></p><p><strong>冒险现象</strong>：在存在竞争的电路里面，输出有时候在短时间内不符合设计（冒险是错误的输出）</p><p><strong>理想状态下的波形图：</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657855099712-f73ebfbd-9253-4656-8489-1ef81ca8be6b.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=123&id=uee7f587d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=193&originWidth=680&originalType=binary&ratio=1&rotation=0&showTitle=false&size=17232&status=done&style=none&taskId=u20b66976-c1d6-408e-8396-9c9528d1e0e&title=&width=435.0952453613281" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657855112251-76a0727e-7edf-44c0-beef-918afc63fe30.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=165&id=u8aeb04d5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=276&originWidth=611&originalType=binary&ratio=1&rotation=0&showTitle=false&size=16633&status=done&style=none&taskId=uff4cc881-a1f3-4b95-9490-6dcdc87691b&title=&width=364.5238037109375" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657855122833-206b8a54-48eb-466d-bcf0-59610ee64a2a.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=162&id=u9b034788&margin=%5Bobject%20Object%5D&name=image.png&originHeight=280&originWidth=713&originalType=binary&ratio=1&rotation=0&showTitle=false&size=23256&status=done&style=none&taskId=ua4cbf245-12f7-4c17-8092-b46ff8a3a0b&title=&width=412.23809814453125" alt="image.png"></p><p><strong>实际波形图对比：</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657855208306-23eb728d-ff96-4e7f-b6e4-6c0d3e5dfcfc.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=232&id=u16954a19&margin=%5Bobject%20Object%5D&name=image.png&originHeight=337&originWidth=736&originalType=binary&ratio=1&rotation=0&showTitle=false&size=43789&status=done&style=none&taskId=u960fa1c9-fc73-4ef5-adbc-78cb90e3153&title=&width=506.76190185546875" alt="image.png"></p><p><strong>两种常见的冒险类型：1冒险和0冒险</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657855384224-bbf93767-e93d-4a0c-8c67-20a9616b201e.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=379&id=u070d0e1f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=498&originWidth=527&originalType=binary&ratio=1&rotation=0&showTitle=false&size=51835&status=done&style=none&taskId=uffd3f64a-25b3-4af4-9028-061cd169466&title=&width=401.5238095238095" alt="image.png"></p><h4 id="②冒险的识别"><a href="#②冒险的识别" class="headerlink" title="②冒险的识别"></a>②冒险的识别</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657855569645-09e2962f-97d0-4e57-9b89-01bdec774525.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=143&id=uf4e98b22&margin=%5Bobject%20Object%5D&name=image.png&originHeight=188&originWidth=630&originalType=binary&ratio=1&rotation=0&showTitle=false&size=14116&status=done&style=none&taskId=u8ceb19be-d7c8-4d89-bf88-64cb3e1ef4f&title=&width=480" alt="image.png"></p><p><strong><font color='red'>例子：</font></strong></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657855597969-5b339ee6-20fe-4647-aa99-a21f3088a23c.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=50&id=ua97faab6&margin=%5Bobject%20Object%5D&name=image.png&originHeight=69&originWidth=296&originalType=binary&ratio=1&rotation=0&showTitle=false&size=5178&status=done&style=none&taskId=u02d329c8-bfdb-4e25-a6e0-a9d31603ed1&title=&width=212.52381896972656" alt="image.png"></p><p>A和B只出现过一次，且没有反变量，因此不存在冒险，而C和C非同时出现，因此C就具备竞争条件，可能产生冒险现象</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657855720189-7f067455-3987-4df1-a993-53759ac448d1.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=95&id=ub2791406&margin=%5Bobject%20Object%5D&name=image.png&originHeight=136&originWidth=320&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9288&status=done&style=none&taskId=ub9709937-155f-455c-9b95-1a36be935ea&title=&width=223.8095245361328" alt="image.png"></p><p>因此存在0冒险（一般就是带入法判断，给A和B赋特殊的值）</p><h4 id="③冒险的消除"><a href="#③冒险的消除" class="headerlink" title="③冒险的消除"></a>③冒险的消除</h4><p>修改逻辑设计：利用代数变化，在确保逻辑函数值（逻辑功能）不变的情况下对原逻辑式进行适当的修改</p><p><strong><font color='red'>例子：</font></strong></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657855962272-870abccb-535c-4542-94dc-349e733220e4.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=183&id=u845a39a1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=252&originWidth=438&originalType=binary&ratio=1&rotation=0&showTitle=false&size=28466&status=done&style=none&taskId=uca2c75ed-79db-465d-8ff1-ac6f162e52b&title=&width=318.71429443359375" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657855991459-b92a62fc-715f-48b3-8ab4-5707d16794b2.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=150&id=u3b2b1fbf&margin=%5Bobject%20Object%5D&name=image.png&originHeight=210&originWidth=760&originalType=binary&ratio=1&rotation=0&showTitle=false&size=24819&status=done&style=none&taskId=u99c4ad1d-15b0-4b1b-b44f-fafd33bc050&title=&width=543.047607421875" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657856010834-2e62eab1-4a55-461d-b202-7ca3f7dbc72b.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=234&id=uf8b93fbe&margin=%5Bobject%20Object%5D&name=image.png&originHeight=328&originWidth=692&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34839&status=done&style=none&taskId=u7d8950ed-6f17-4b31-832f-8a4d0186e64&title=&width=493.23809814453125" alt="image.png"></p><h3 id="4-常用的组合逻辑电路"><a href="#4-常用的组合逻辑电路" class="headerlink" title="4.常用的组合逻辑电路"></a>4.常用的组合逻辑电路</h3><p><strong>要有硬件思维</strong></p><h4 id="①编码器"><a href="#①编码器" class="headerlink" title="①编码器"></a>①编码器</h4><p> 建立代码与信息对应关系的过程称为编码，完成编码的电路就叫做编码器<br>以二进制编码器为例：n位二进制代码对2的n次方个信号进行编码的电路</p><p><strong><font color='blue'>8-3编码器（互斥版本）</font></strong></p><p><strong>第一步</strong>：对信号进行定义，并画出真值表<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657856731143-6ebf8c16-9a04-45b0-8d43-e95d764a4319.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=261&id=uce5ae691&margin=%5Bobject%20Object%5D&name=image.png&originHeight=343&originWidth=996&originalType=binary&ratio=1&rotation=0&showTitle=false&size=119319&status=done&style=none&taskId=u47e0f2ca-4b29-46c4-b6b5-54df5708a28&title=&width=758.8571428571429" alt="image.png"><br><strong>第二步</strong>：写出表达式<br>一个技巧是将输出为1锁对应的输入或起来<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657856772704-2fc54000-c5ea-4c60-8cdd-0f74d696d6aa.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=247&id=u65e6f1b9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=324&originWidth=814&originalType=binary&ratio=1&rotation=0&showTitle=false&size=89426&status=done&style=none&taskId=ucca464da-30a7-42b0-8818-b6b37c92bed&title=&width=620.1904761904761" alt="image.png"><br><strong>第三步</strong>：画出逻辑图<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657856847665-2496e0ed-94da-474d-a58d-f4eb0e7c00b8.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=207&id=ua684b89b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=272&originWidth=769&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34542&status=done&style=none&taskId=ued09751a-aaf8-4de3-a228-24038ff8261&title=&width=585.9047619047619" alt="image.png"><br><strong><font color='blue'>8-3优先编码器（非互斥版本）</font></strong></p><p><strong>（允许在某一时刻多个输入端位有效电平，但只对优先级最高的输入信号进行编码）</strong></p><p>这种设计比较复杂，一般的芯片会集成进去，比如下面的74LD148芯片。从示意图可以看出，优先级的实现是加入了EI使能输入端来实现的。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657857202061-9ebda970-900f-4c7f-97af-19d31b318846.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=389&id=u34ffc46c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=510&originWidth=1038&originalType=binary&ratio=1&rotation=0&showTitle=false&size=130436&status=done&style=none&taskId=u0f41939d-78bc-4eb4-91a8-324b83a9734&title=&width=790.8571428571429" alt="image.png"></p><h4 id="②译码器"><a href="#②译码器" class="headerlink" title="②译码器"></a>②译码器</h4><p>常见的是3-8译码器，工作的过程与编码器正好相反<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657857711265-d0dc21fb-7b21-4761-952f-09cb0c37a232.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=278&id=u3b4ec1c1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=365&originWidth=1083&originalType=binary&ratio=1&rotation=0&showTitle=false&size=159276&status=done&style=none&taskId=ue0f01f78-4bae-450c-87e3-e36d61c5245&title=&width=825.1428571428571" alt="image.png"><br><strong><font color='blue'>显示译码器</font></strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657857771934-e7f09caf-ed97-4c90-b8c9-fcbcdf85245c.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=374&id=ubc7de54c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=491&originWidth=938&originalType=binary&ratio=1&rotation=0&showTitle=false&size=239902&status=done&style=none&taskId=u7322f4d7-4c22-483b-9dca-547fa7855b4&title=&width=714.6666666666666" alt="image.png"></p><h4 id="③数据选择器"><a href="#③数据选择器" class="headerlink" title="③数据选择器"></a>③数据选择器</h4><p><strong><font color='blue'>8选1数据选择器</font></strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657857922269-9f9687ab-b046-443a-a086-4f4f3d9f56a3.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=328&id=ufa88a0ad&margin=%5Bobject%20Object%5D&name=image.png&originHeight=431&originWidth=951&originalType=binary&ratio=1&rotation=0&showTitle=false&size=130904&status=done&style=none&taskId=uf698278f-20cc-46bd-b8a8-7adca3ff116&title=&width=724.5714285714286" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657857931720-1ceffe08-35ce-4ea8-bf31-0f61be98f5d8.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=318&id=ue29b557b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=418&originWidth=978&originalType=binary&ratio=1&rotation=0&showTitle=false&size=131288&status=done&style=none&taskId=uaf9001e7-5bc5-492f-af70-03a05ac3493&title=&width=745.1428571428571" alt="image.png"></p><h4 id="④加法器"><a href="#④加法器" class="headerlink" title="④加法器"></a>④加法器</h4><p><strong><font color='blue'>半加器（不考虑低位的进位）</font></strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657858065917-45093abd-fe5f-4674-a226-23ba99fa3b0d.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=248&id=udfba90fb&margin=%5Bobject%20Object%5D&name=image.png&originHeight=325&originWidth=1027&originalType=binary&ratio=1&rotation=0&showTitle=false&size=51007&status=done&style=none&taskId=u5175237e-84e6-46ee-80f8-d219cfc2813&title=&width=782.4761904761905" alt="image.png"><br><strong><font color='blue'>全加器（考虑低位的进位）</font></strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657858140890-295d29b7-29f8-4551-afcc-5c5374fcec3e.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=120&id=u76925868&margin=%5Bobject%20Object%5D&name=image.png&originHeight=158&originWidth=493&originalType=binary&ratio=1&rotation=0&showTitle=false&size=25042&status=done&style=none&taskId=ua1ab6f2e-6c4b-4d1f-be04-c9ec69d2265&title=&width=375.6190476190476" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657858184320-01b471d0-2759-4e85-a732-a8c107ff1f5d.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=254&id=ubdda5183&margin=%5Bobject%20Object%5D&name=image.png&originHeight=333&originWidth=1090&originalType=binary&ratio=1&rotation=0&showTitle=false&size=118955&status=done&style=none&taskId=uab14a3c9-092f-447e-9f3f-9fd9bf2fc01&title=&width=830.4761904761905" alt="image.png"></p><h4 id="⑤数值比较器"><a href="#⑤数值比较器" class="headerlink" title="⑤数值比较器"></a>⑤数值比较器</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657857982153-1ca1f368-bfd6-4f08-a362-d25b2acf0c21.png#clientId=u089bf9a0-488d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=259&id=atkXL&margin=%5Bobject%20Object%5D&name=image.png&originHeight=340&originWidth=1046&originalType=binary&ratio=1&rotation=0&showTitle=false&size=61273&status=done&style=none&taskId=u08905a8b-f059-48a9-b934-41218991c47&title=&width=796.952380952381" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>FPGA学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数字电路</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FPGA学习4：FPGA完整设计流程</title>
    <link href="/2022/07/11/15FPGA%E5%AD%A6%E4%B9%A04%EF%BC%9A%E4%BB%A5%E7%82%B9%E4%BA%AELED%E7%81%AF%E4%B8%BA%E4%BE%8B%E8%AE%B2%E8%A7%A3FPGA%E5%AE%8C%E6%95%B4%E8%AE%BE%E8%AE%A1%E6%B5%81%E7%A8%8B/"/>
    <url>/2022/07/11/15FPGA%E5%AD%A6%E4%B9%A04%EF%BC%9A%E4%BB%A5%E7%82%B9%E4%BA%AELED%E7%81%AF%E4%B8%BA%E4%BE%8B%E8%AE%B2%E8%A7%A3FPGA%E5%AE%8C%E6%95%B4%E8%AE%BE%E8%AE%A1%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><blockquote><p>整个过程还是很复杂的，看完视频也不知道每一步这样做的意义是什么、记不住先后顺序，所以就先将步骤详细列出来，之后慢慢练习使用，应该会熟悉起来</p></blockquote><h2 id="一、设计流程"><a href="#一、设计流程" class="headerlink" title="一、设计流程"></a>一、设计流程</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657327637440-0c9ff105-a5aa-4897-818b-919bd93c324a.png#clientId=u98e190e8-5d11-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=264&id=ue184aacf&margin=%5Bobject%20Object%5D&name=image.png&originHeight=346&originWidth=500&originalType=binary&ratio=1&rotation=0&showTitle=false&size=81994&status=done&style=none&taskId=u29eaabef-a59e-44f4-97ec-3e03e46fd19&title=&width=380.95238095238096" alt="image.png"></p><ul><li>FPGA是并行执行，波形图可以表达这种关系，有助于代码编写。</li><li>将仿真波形与绘制的波形图进行对比。调整代码，直到仿真波形与绘制的波形一致。</li></ul><h2 id="二、项目工程文件体系–方便文件管理"><a href="#二、项目工程文件体系–方便文件管理" class="headerlink" title="二、项目工程文件体系–方便文件管理"></a>二、项目工程文件体系–方便文件管理</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657328195153-74f8065c-3b27-4bb0-82cd-2409437f009a.png#clientId=u98e190e8-5d11-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=147&id=WvWQS&margin=%5Bobject%20Object%5D&name=image.png&originHeight=193&originWidth=566&originalType=binary&ratio=1&rotation=0&showTitle=false&size=69480&status=done&style=none&taskId=u1fb7fa79-c51e-4236-9f6b-63adf09e8c7&title=&width=431.23809523809524" alt="image.png"></p><h2 id="三、点亮LED灯"><a href="#三、点亮LED灯" class="headerlink" title="三、点亮LED灯"></a>三、点亮LED灯</h2><h3 id="1-设计规划"><a href="#1-设计规划" class="headerlink" title="1.设计规划"></a>1.设计规划</h3><p>按键的原理图：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657328462710-fa7d681f-4df2-47cd-82b3-eb87d50ccb13.png#clientId=u98e190e8-5d11-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=136&id=u812cd53e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=168&originWidth=458&originalType=binary&ratio=1&rotation=0&showTitle=false&size=36224&status=done&style=none&taskId=ue0170204-c563-4b5e-99ea-a0396ad6225&title=&width=370.952392578125" alt="image.png"><br>LED灯的原理图：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657328473859-f5cec1f4-f77f-41a4-b6f3-05a032aba96e.png#clientId=u98e190e8-5d11-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=124&id=u3d403f3e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=173&originWidth=520&originalType=binary&ratio=1&rotation=0&showTitle=false&size=45159&status=done&style=none&taskId=u58404530-3454-4d04-87fa-0371b025aa1&title=&width=373.19049072265625" alt="image.png"></p><h3 id="2-波形绘制"><a href="#2-波形绘制" class="headerlink" title="2.波形绘制"></a>2.波形绘制</h3><p>新建一个visio文件，在这个里面进行绘图<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657328623171-e9feb6bb-6de8-4ce5-a74f-eae49789e0fc.png#clientId=u98e190e8-5d11-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=80&id=u502beb65&margin=%5Bobject%20Object%5D&name=image.png&originHeight=105&originWidth=322&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15572&status=done&style=none&taskId=u0e01468d-b5c6-46a7-baac-f857534143f&title=&width=245.33333333333334" alt="image.png"></p><p>这是之前导入的三个波形工具箱（以后用的时候再下载）<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657328680044-abc61f6d-efe0-4e06-b0d5-9098b09c1ee2.png#clientId=u98e190e8-5d11-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=61&id=ue5ed051b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=67&originWidth=106&originalType=binary&ratio=1&rotation=0&showTitle=false&size=8487&status=done&style=none&taskId=ub1b77aa2-32c6-4586-a22d-ac0af2190c4&title=&width=95.76190948486328" alt="image.png"></p><p><strong>模块框图：</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657329274973-e2560298-7fda-4e26-972b-2b8ca6579377.png#clientId=u98e190e8-5d11-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=139&id=ub41f081a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=183&originWidth=579&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9836&status=done&style=none&taskId=uff2e0449-6c10-4092-bcde-da059c5c35c&title=&width=441.14285714285717" alt="image.png"><br><strong>波形图：</strong><br>LED灯输入1点亮，输入0熄灭；按键是键入为1，不键入为0<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657329420644-575e284b-fa32-4c19-8527-a3582d88fb7d.png#clientId=u98e190e8-5d11-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=128&id=ue0c23030&margin=%5Bobject%20Object%5D&name=image.png&originHeight=168&originWidth=690&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9527&status=done&style=none&taskId=u7d77064e-6452-4313-acbb-451a900a196&title=&width=525.7142857142857" alt="image.png"><br>这个条形图说明，按键与LED灯的电平变化时相同的，当按键按下时，LED灯点亮，当按键松开时，LED灯熄灭</p><h3 id="3-编写代码"><a href="#3-编写代码" class="headerlink" title="3.编写代码"></a>3.编写代码</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657329758521-46a149c5-217b-40fb-b5b6-1cadded4c3ab.png#clientId=u98e190e8-5d11-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=111&id=ufb4b49a9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=146&originWidth=566&originalType=binary&ratio=1&rotation=0&showTitle=false&size=20545&status=done&style=none&taskId=ue3835a71-9c1e-4272-8ee1-70f84521bbb&title=&width=431.23809523809524" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657330175623-7f997c0e-165c-415f-9ffd-d160a1eab891.png#clientId=u98e190e8-5d11-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=277&id=u80af99a5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=411&originWidth=667&originalType=binary&ratio=1&rotation=0&showTitle=false&size=88632&status=done&style=none&taskId=uf00309d4-1118-4e85-9123-cecff68be89&title=&width=450.19049072265625" alt="image.png"></p><h3 id="4-代码编译"><a href="#4-代码编译" class="headerlink" title="4.代码编译"></a>4.代码编译</h3><h4 id="先要建立工程文件，然后才进行仿真"><a href="#先要建立工程文件，然后才进行仿真" class="headerlink" title="先要建立工程文件，然后才进行仿真"></a>先要建立工程文件，然后才进行仿真</h4><p>第一步：填写相关地址、名称<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657505627881-368ce543-9677-46fe-a638-07bd60be8ef1.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=328&id=u68241c5d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=431&originWidth=549&originalType=binary&ratio=1&rotation=0&showTitle=false&size=52668&status=done&style=none&taskId=u81979605-0bfa-42dc-8303-8bebc15ac89&title=&width=418.2857142857143" alt="image.png"><br>第二步：要求选择加载.v文件，选择不加载</p><p>第三步：是器件的选择<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657505735103-cd43ee00-722f-4b44-b202-9b1d55bf85f8.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=325&id=u6885a4a9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=426&originWidth=550&originalType=binary&ratio=1&rotation=0&showTitle=false&size=107724&status=done&style=none&taskId=u4618a320-ef6e-45b9-b79d-e3dc5624068&title=&width=419.04761904761904" alt="image.png"><br>第四步：将编写好的.v文件加载到工程文件中</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657505819987-4e81ec82-6b8f-42df-90e2-974b50eadb06.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=213&id=u2c0586be&margin=%5Bobject%20Object%5D&name=image.png&originHeight=280&originWidth=170&originalType=binary&ratio=1&rotation=0&showTitle=false&size=24649&status=done&style=none&taskId=u454e4529-f315-4ba5-9d1a-fb3a355b22a&title=&width=129.52380952380952" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657505853744-883b001f-f9d5-494c-93e8-0e5a2271c65b.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=298&id=u213efec5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=391&originWidth=491&originalType=binary&ratio=1&rotation=0&showTitle=false&size=69098&status=done&style=none&taskId=u3d677964-ca73-49f7-9293-a760e0d4641&title=&width=374.0952380952381" alt="image.png"></p><p>第五步：编译代码</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657505891061-7e82b39f-d782-4c02-ba21-77802bdf88fe.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=37&id=u0d938c65&margin=%5Bobject%20Object%5D&name=image.png&originHeight=49&originWidth=288&originalType=binary&ratio=1&rotation=0&showTitle=false&size=8624&status=done&style=none&taskId=u2d4e9507-340c-407a-89cc-8f20539f0ad&title=&width=219.42857142857142" alt="image.png"></p><h3 id="5-逻辑仿真"><a href="#5-逻辑仿真" class="headerlink" title="5.逻辑仿真"></a>5.逻辑仿真</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657505918809-a241e1ce-8502-45e5-be04-7af33abf96be.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=169&id=u2585f2e5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=222&originWidth=407&originalType=binary&ratio=1&rotation=0&showTitle=false&size=18281&status=done&style=none&taskId=ubc759ec7-d1c2-4f34-818f-baa997d8fa7&title=&width=310.0952380952381" alt="image.png"></p><h4 id="编写仿真文件："><a href="#编写仿真文件：" class="headerlink" title="编写仿真文件："></a>编写仿真文件：</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657505950762-4fcdbbf5-5e6e-4a37-88a0-b30a23c6f9ab.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=398&id=u6b3a14f5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=522&originWidth=594&originalType=binary&ratio=1&rotation=0&showTitle=false&size=243899&status=done&style=none&taskId=uc06877f9-bfeb-4604-bd86-83b882a0bd3&title=&width=452.57142857142856" alt="image.png"></p><h4 id="将测试文件加载到工程："><a href="#将测试文件加载到工程：" class="headerlink" title="将测试文件加载到工程："></a>将测试文件加载到工程：</h4><p>还是上面一样的文件添加方法</p><h4 id="进行仿真设置："><a href="#进行仿真设置：" class="headerlink" title="进行仿真设置："></a>进行仿真设置：</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506176738-00d02b34-a80a-4826-8c12-0adc17be2139.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=471&id=u7fd300f9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=680&originWidth=860&originalType=binary&ratio=1&rotation=0&showTitle=false&size=268597&status=done&style=none&taskId=uc4a82a37-31a0-4138-9793-15d70fe7fea&title=&width=595.2380981445312" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506209695-85b20b76-163e-498f-b6ec-5e588fe10f3f.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=248&id=uedfecb8e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=325&originWidth=720&originalType=binary&ratio=1&rotation=0&showTitle=false&size=47809&status=done&style=none&taskId=u4d38ebd2-99fe-43e8-b35c-0b71e38ed24&title=&width=548.5714285714286" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506340543-acb73e20-1fd1-4740-a9d4-0d5dacd4021a.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=364&id=ua0a791f2&margin=%5Bobject%20Object%5D&name=image.png&originHeight=478&originWidth=533&originalType=binary&ratio=1&rotation=0&showTitle=false&size=119799&status=done&style=none&taskId=u1f2dee2c-da17-4ec4-bf40-45de32ec6b8&title=&width=406.0952380952381" alt="image.png"></p><h4 id="开始仿真："><a href="#开始仿真：" class="headerlink" title="开始仿真："></a>开始仿真：</h4><p>点击这个地方<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506365683-7fd710f6-73e9-4fa7-b05e-16496fdf7a26.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=37&id=u544c2f74&margin=%5Bobject%20Object%5D&name=image.png&originHeight=48&originWidth=518&originalType=binary&ratio=1&rotation=0&showTitle=false&size=21721&status=done&style=none&taskId=u2c7307ec-6272-4f43-968c-8a8822923b3&title=&width=394.6666666666667" alt="image.png"><br>就自动调用modelsim，进行编译仿真<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506416224-ecd494ee-b3c7-43e0-98f7-1d18ef40baa1.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0.8222&crop=1&crop=1&from=paste&height=777&id=u216d4358&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1020&originWidth=715&originalType=binary&ratio=1&rotation=0&showTitle=false&size=143165&status=done&style=none&taskId=uce7d56b6-febe-405b-8303-32be0f2f12c&title=&width=545" alt="image.png"><br>在modelsim左下角这个位置可以进行波形查看<br>波形界面的一些功能：<br>1.清除波形<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506501111-d6e3ab4c-6bcc-4eeb-8410-4b604845473e.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=501&id=uc040cdb3&margin=%5Bobject%20Object%5D&name=image.png&originHeight=754&originWidth=743&originalType=binary&ratio=1&rotation=0&showTitle=false&size=100138&status=done&style=none&taskId=uda3a0754-aeb4-418b-bc69-5393e934df2&title=&width=494.09527587890625" alt="image.png"><br>2.进行仿真（左边那个是时间的设置）<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506551305-81f1a728-5568-4493-94db-52d21620071e.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=133&id=u0fab8f77&margin=%5Bobject%20Object%5D&name=image.png&originHeight=175&originWidth=614&originalType=binary&ratio=1&rotation=0&showTitle=false&size=42973&status=done&style=none&taskId=u700e00f9-8ecc-4d04-b88b-9331dbfa759&title=&width=467.8095238095238" alt="image.png"><br>3.波形的放大与缩小<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506603614-ac108baa-d349-45fa-99a2-66c8ef0f996d.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=133&id=u31d3ee79&margin=%5Bobject%20Object%5D&name=image.png&originHeight=175&originWidth=726&originalType=binary&ratio=1&rotation=0&showTitle=false&size=83173&status=done&style=none&taskId=ucd7063c1-359f-4e4f-9cac-cb92c622aba&title=&width=553.1428571428571" alt="image.png"><br>4.点击任意位置可以添加参考线，也会有一些对参考线的相关操作，用到可以回头再看这个视频</p><p>从仿真波形可以看出，LED灯的波形与按键的波形一致，仿真通过<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506724549-660eb49d-13a3-4470-9dab-30a01d15562d.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=75&id=u0f2685ad&margin=%5Bobject%20Object%5D&name=image.png&originHeight=98&originWidth=580&originalType=binary&ratio=1&rotation=0&showTitle=false&size=15557&status=done&style=none&taskId=u2acfe720-6150-4da9-9412-1387b7d910a&title=&width=441.9047619047619" alt="image.png"></p><h3 id="6-管脚绑定"><a href="#6-管脚绑定" class="headerlink" title="6.管脚绑定"></a>6.管脚绑定</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506799635-4c940789-46a4-455d-8963-81fc5d1ddd84.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=42&id=u6fab67a0&margin=%5Bobject%20Object%5D&name=image.png&originHeight=55&originWidth=298&originalType=binary&ratio=1&rotation=0&showTitle=false&size=16663&status=done&style=none&taskId=u63195e0e-8feb-4381-98e0-bdb5257dbdf&title=&width=227.04761904761904" alt="image.png"></p><p>在管脚绑定的下册会有一个列表<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506903884-11ba5d65-d639-4eea-aa94-5a5d4be82a33.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=0.6723&crop=1&from=paste&height=78&id=u26fa3b51&margin=%5Bobject%20Object%5D&name=image.png&originHeight=194&originWidth=1184&originalType=binary&ratio=1&rotation=0&showTitle=false&size=74219&status=done&style=none&taskId=u27024c4f-2886-44ea-97c2-358d5b13089&title=&width=474" alt="image.png"><br>点击location那个位置就可以输出内容<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657506953201-8a70b3dc-1d3e-450c-b117-70cb8222e149.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=324&id=u1aff9969&margin=%5Bobject%20Object%5D&name=image.png&originHeight=757&originWidth=1281&originalType=binary&ratio=1&rotation=0&showTitle=false&size=570535&status=done&style=none&taskId=u1b8de171-8e7c-4eb1-9993-66f51c965de&title=&width=549" alt="image.png"></p><h3 id="7-全编译"><a href="#7-全编译" class="headerlink" title="7.全编译"></a>7.全编译</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507010738-ce40765e-8320-48a0-af55-42483cbae2bf.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=285&id=u23c0028c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=425&originWidth=842&originalType=binary&ratio=1&rotation=0&showTitle=false&size=216265&status=done&style=none&taskId=u02601a94-e66d-4824-88f8-b7617e41230&title=&width=564.5238037109375" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507152335-3aa32992-a67e-4477-9ef7-d73399f84c8d.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=317&id=u039b8585&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1024&originWidth=1920&originalType=binary&ratio=1&rotation=0&showTitle=false&size=717977&status=done&style=none&taskId=u642016b4-e704-4f84-aec5-02664436de9&title=&width=594" alt="image.png"></p><h3 id="8-上板验证"><a href="#8-上板验证" class="headerlink" title="8.上板验证"></a>8.上板验证</h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507197334-666d1c6e-92ee-4a4f-bda9-0a3a9a0d7e3b.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=86&id=u042b558b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=113&originWidth=538&originalType=binary&ratio=1&rotation=0&showTitle=false&size=28646&status=done&style=none&taskId=uebb7baf4-cc4f-47c5-a343-3bb5322ee4e&title=&width=409.9047619047619" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507266817-f156f63d-e36c-42b5-b314-d7040df4d5bd.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=318&id=u9ca05da4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=417&originWidth=397&originalType=binary&ratio=1&rotation=0&showTitle=false&size=55730&status=done&style=none&taskId=u69bdcd92-bc1d-4bf0-915c-e89477462c3&title=&width=302.4761904761905" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507271109-426d31b6-1468-4c90-82ec-ec2cd303cad4.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=267&id=ubf623a6f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=351&originWidth=508&originalType=binary&ratio=1&rotation=0&showTitle=false&size=48249&status=done&style=none&taskId=u6f7ae5ec-ef57-4d3c-afb7-74fce9076ce&title=&width=387.04761904761904" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507310693-4c217db5-974b-4168-b151-01aa721775bb.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=430&id=u927652ed&margin=%5Bobject%20Object%5D&name=image.png&originHeight=564&originWidth=563&originalType=binary&ratio=1&rotation=0&showTitle=false&size=122558&status=done&style=none&taskId=ua51e057d-df6b-4acb-a9c7-1f9414b3824&title=&width=428.95238095238096" alt="image.png"><br>点击start后等待下载完成</p><h3 id="9-程序固化"><a href="#9-程序固化" class="headerlink" title="9.程序固化"></a>9.程序固化</h3><p>下载到FPGA中的程序，断电之后就会消失，但是固化之后就不会消失了</p><h4 id="1-先生成jic文件"><a href="#1-先生成jic文件" class="headerlink" title="1.先生成jic文件"></a>1.先生成jic文件</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507516184-7e677284-1b88-4bcb-ad45-9820bffe714f.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=426&id=u00f710f5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=559&originWidth=284&originalType=binary&ratio=1&rotation=0&showTitle=false&size=98360&status=done&style=none&taskId=u12b4ec63-a387-4db0-86ef-bbc3ec3fa7b&title=&width=216.38095238095238" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507523765-5279e823-57c7-44d5-a636-c796c9c48bb7.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=372&id=uc9c39774&margin=%5Bobject%20Object%5D&name=image.png&originHeight=488&originWidth=634&originalType=binary&ratio=1&rotation=0&showTitle=false&size=160170&status=done&style=none&taskId=u4235bb6a-b8d0-4b10-8bb4-d7e5c9cc1c3&title=&width=483.04761904761904" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507527192-a584120a-f9d8-42c5-933a-0bb30f8416de.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=334&id=ud0f31698&margin=%5Bobject%20Object%5D&name=image.png&originHeight=438&originWidth=555&originalType=binary&ratio=1&rotation=0&showTitle=false&size=115199&status=done&style=none&taskId=u291b5e43-6af9-4810-8116-9d0e80d26de&title=&width=422.85714285714283" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507530852-b9efa823-1582-4476-8330-9ec8ae4c23e8.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=340&id=u5cb8527a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=446&originWidth=657&originalType=binary&ratio=1&rotation=0&showTitle=false&size=102625&status=done&style=none&taskId=ud729b6bf-5b89-4234-a653-e20be849af2&title=&width=500.57142857142856" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507561788-d9dd38ae-dca5-4bb2-b964-deac958c6a24.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=411&id=uee30a9db&margin=%5Bobject%20Object%5D&name=image.png&originHeight=630&originWidth=799&originalType=binary&ratio=1&rotation=0&showTitle=false&size=188906&status=done&style=none&taskId=u1aa83b3c-e1b3-46d5-b490-85cf578fe6c&title=&width=520.7619018554688" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507672134-f0456f39-e2ff-4890-929b-11fcd75cbfe7.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=230&id=u94e10a35&margin=%5Bobject%20Object%5D&name=image.png&originHeight=302&originWidth=440&originalType=binary&ratio=1&rotation=0&showTitle=false&size=32081&status=done&style=none&taskId=u7dc2dd43-44bb-48be-9d4d-afc1d8523de&title=&width=335.23809523809524" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507680421-d7e0526a-32f5-4c32-94e6-f9f9613270fc.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=283&id=udae51a8d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=371&originWidth=475&originalType=binary&ratio=1&rotation=0&showTitle=false&size=82002&status=done&style=none&taskId=u173d2516-2ece-46b5-adde-38090656bea&title=&width=361.9047619047619" alt="image.png"></p><h4 id="2-查看jic文件"><a href="#2-查看jic文件" class="headerlink" title="2.查看jic文件"></a>2.查看jic文件</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507688688-57bd29d8-1182-44fc-a29c-517e5ba20736.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=244&id=u647c6103&margin=%5Bobject%20Object%5D&name=image.png&originHeight=320&originWidth=486&originalType=binary&ratio=1&rotation=0&showTitle=false&size=120644&status=done&style=none&taskId=uc76c7d66-1d12-410a-a9ee-098d521fb7d&title=&width=370.2857142857143" alt="image.png"></p><h4 id="3-上传固化文件（把原来的东西删掉，选择生成的jic文件）"><a href="#3-上传固化文件（把原来的东西删掉，选择生成的jic文件）" class="headerlink" title="3.上传固化文件（把原来的东西删掉，选择生成的jic文件）"></a>3.上传固化文件（把原来的东西删掉，选择生成的jic文件）</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507776880-74327cab-c821-44e5-bf05-403fbc267e5b.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=287&id=u576bb776&margin=%5Bobject%20Object%5D&name=image.png&originHeight=377&originWidth=460&originalType=binary&ratio=1&rotation=0&showTitle=false&size=71843&status=done&style=none&taskId=u22602ed4-d8c0-49e0-9761-40b9b39885d&title=&width=350.4761904761905" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507784198-f720d26a-b861-4540-b895-a3a93451f809.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=334&id=u3482ff6b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=439&originWidth=534&originalType=binary&ratio=1&rotation=0&showTitle=false&size=68180&status=done&style=none&taskId=u145ac3c1-76cd-4725-858b-bcf252cb8b9&title=&width=406.85714285714283" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507794060-be1bf8a5-2d22-4bf0-ab6f-e16945998122.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=264&id=u090ce598&margin=%5Bobject%20Object%5D&name=image.png&originHeight=347&originWidth=512&originalType=binary&ratio=1&rotation=0&showTitle=false&size=46163&status=done&style=none&taskId=uf5ba1c29-85be-4138-9c75-e2a187fd100&title=&width=390.0952380952381" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657507788696-4396a742-3341-4ae6-9c83-14d9cb01b545.png#clientId=ue98a0212-a1c8-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=288&id=ue3bf8eb3&margin=%5Bobject%20Object%5D&name=image.png&originHeight=378&originWidth=463&originalType=binary&ratio=1&rotation=0&showTitle=false&size=75801&status=done&style=none&taskId=u438638e2-84cb-4437-91f9-6915b1b5c6b&title=&width=352.76190476190476" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>FPGA学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>FPGA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用Photoshop进行图片标注</title>
    <link href="/2022/07/09/14%E4%BD%BF%E7%94%A8Photoshop%E8%BF%9B%E8%A1%8C%E5%9B%BE%E7%89%87%E6%A0%87%E6%B3%A8/"/>
    <url>/2022/07/09/14%E4%BD%BF%E7%94%A8Photoshop%E8%BF%9B%E8%A1%8C%E5%9B%BE%E7%89%87%E6%A0%87%E6%B3%A8/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><blockquote><p>今天在帮助老师标注图像，需要做成多种颜色的语义分割数据。一般来说可以用labelme进行操作，但是此次的遥感图像很大，用labelme打开后出现软件卡死的现象，因此探索使用ps进行标注，这个方法比较通用，不管是几种类别，或是是选择特定颜色都可以。</p></blockquote><h4 id="1-使用ps打开图片"><a href="#1-使用ps打开图片" class="headerlink" title="1.使用ps打开图片"></a>1.使用ps打开图片</h4><h4 id="2-新建一个图层作为黑色的背景"><a href="#2-新建一个图层作为黑色的背景" class="headerlink" title="2.新建一个图层作为黑色的背景"></a>2.新建一个图层作为黑色的背景</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657355816253-0889a7b0-8d47-4db9-947e-01992e7c8589.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=227&id=u6c6610bd&margin=%5Bobject%20Object%5D&name=image.png&originHeight=298&originWidth=504&originalType=binary&ratio=1&rotation=0&showTitle=false&size=38035&status=done&style=none&taskId=u8a78af9f-5fa3-4ee9-88b0-abe2efab0bd&title=&width=384" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657355829994-3a79fb51-3f1e-452d-bd8b-b7cecdbe01cf.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=364&id=ue01e366f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=812&originWidth=1321&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1447302&status=done&style=none&taskId=u7140929f-9b0f-439d-9d42-cc12edb252e&title=&width=592" alt="image.png"></p><h4 id="3-使用这个矩形框，把整个图都选住"><a href="#3-使用这个矩形框，把整个图都选住" class="headerlink" title="3.使用这个矩形框，把整个图都选住"></a>3.使用这个矩形框，把整个图都选住</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657355765401-64ca69bb-79de-43d6-8d69-2adebcbe2d3c.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=397&id=u1758e206&margin=%5Bobject%20Object%5D&name=image.png&originHeight=883&originWidth=1318&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1461404&status=done&style=none&taskId=u1c36c9ae-8a1f-4f22-ba9e-35c092c92e4&title=&width=592" alt="image.png"></p><h4 id="4-右键填充黑色"><a href="#4-右键填充黑色" class="headerlink" title="4.右键填充黑色"></a>4.右键填充黑色</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657355861948-4ee9401d-2c15-4045-9514-3500040d280c.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=493&id=u7adca2a4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=768&originWidth=871&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1151084&status=done&style=none&taskId=ub868150e-4aed-449e-bcfb-eab72e914a8&title=&width=558.6190795898438" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657355880400-7f885d1e-a102-4909-9ca2-b0df61bc650b.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=376&id=uea4604e5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=494&originWidth=658&originalType=binary&ratio=1&rotation=0&showTitle=false&size=24270&status=done&style=none&taskId=u26d4101e-7f5d-4c79-a42d-7db7aee67ac&title=&width=501.3333333333333" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657355903340-9de93669-2d09-4eb6-a28e-1d751ee600f3.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=347&id=u0b7b0740&margin=%5Bobject%20Object%5D&name=image.png&originHeight=783&originWidth=1315&originalType=binary&ratio=1&rotation=0&showTitle=false&size=30039&status=done&style=none&taskId=u5e5ae41b-2d7a-4e0b-8acc-2c0259722de&title=&width=583" alt="image.png"></p><h4 id="5-背景图层隐藏掉，再新建一个图层，用来标注山"><a href="#5-背景图层隐藏掉，再新建一个图层，用来标注山" class="headerlink" title="5.背景图层隐藏掉，再新建一个图层，用来标注山"></a>5.背景图层隐藏掉，再新建一个图层，用来标注山</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657355939752-fe1ffea6-4123-42e8-b369-be340fc67238.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=315&id=uaec00eb3&margin=%5Bobject%20Object%5D&name=image.png&originHeight=773&originWidth=1301&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1443310&status=done&style=none&taskId=uaeb8a5af-5853-4e76-baf4-8e1f09b9c31&title=&width=531" alt="image.png"></p><h4 id="6-使用多边形套索工具，像labelme一样进行标注"><a href="#6-使用多边形套索工具，像labelme一样进行标注" class="headerlink" title="6.使用多边形套索工具，像labelme一样进行标注"></a>6.使用多边形套索工具，像labelme一样进行标注</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657355959370-63d4138c-ea7e-49a2-9724-3763bf62a1fd.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=363&id=u44ee97c5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=477&originWidth=633&originalType=binary&ratio=1&rotation=0&showTitle=false&size=175122&status=done&style=none&taskId=ufe386f0b-4347-4aaf-9696-374a55e0986&title=&width=482.2857142857143" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657356567472-2a0e5b6d-0ca4-4cc7-beac-b9b4b6e6b4ae.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=482&id=u2d5acb12&margin=%5Bobject%20Object%5D&name=image.png&originHeight=858&originWidth=991&originalType=binary&ratio=1&rotation=0&showTitle=false&size=1934178&status=done&style=none&taskId=u60d86cfd-30ae-4f11-89f9-d98ebdf4cae&title=&width=557" alt="image.png"></p><h4 id="7-闭合后填充颜色"><a href="#7-闭合后填充颜色" class="headerlink" title="7.闭合后填充颜色"></a>7.闭合后填充颜色</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657356586517-f74fc4d7-d693-4399-a1fd-f25134dbef2a.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=370&id=uf43f50e1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=485&originWidth=445&originalType=binary&ratio=1&rotation=0&showTitle=false&size=297795&status=done&style=none&taskId=ud2c084d5-b426-4f8a-b581-767f572240d&title=&width=339.04761904761904" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657356618196-b66f3d44-d502-438c-87ed-e4d7f91831b3.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=462&id=u9a2d1369&margin=%5Bobject%20Object%5D&name=image.png&originHeight=857&originWidth=974&originalType=binary&ratio=1&rotation=0&showTitle=false&size=767675&status=done&style=none&taskId=u681daf33-22a7-4761-a932-309c62c4bb0&title=&width=525.0952758789062" alt="image.png"></p><h4 id="8-将黑色背景的隐藏打开"><a href="#8-将黑色背景的隐藏打开" class="headerlink" title="8.将黑色背景的隐藏打开"></a>8.将黑色背景的隐藏打开</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657356635469-76626eec-d6fe-429b-bc96-ec0280a217c4.png#clientId=u71dc077b-241d-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=455&id=u636d9d01&margin=%5Bobject%20Object%5D&name=image.png&originHeight=834&originWidth=963&originalType=binary&ratio=1&rotation=0&showTitle=false&size=17403&status=done&style=none&taskId=ue75fe9f9-c2bb-43e2-9bdf-73212c3e0be&title=&width=525.7142944335938" alt="image.png"></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>在使用那个多边形套索工具时，双击会自动闭合，就无法进行更改，只能删除重做。所以点适当的慢一些。也不要误触其他快捷键。</p>]]></content>
    
    
    <categories>
      
      <category>各类教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PS</tag>
      
      <tag>图像标注</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>脉冲神经网络的简单介绍</title>
    <link href="/2022/07/06/13%E8%84%89%E5%86%B2%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
    <url>/2022/07/06/13%E8%84%89%E5%86%B2%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><blockquote><p>脉冲神经网络（SNN）归属于人工神经网络（ANN），被称作第三代神经网络，拥有更接近生物神经元的机制，也就是说它的工作方式更加类似人脑。</p></blockquote><h3 id="脉冲神经网络诞生的原因"><a href="#脉冲神经网络诞生的原因" class="headerlink" title="脉冲神经网络诞生的原因"></a>脉冲神经网络诞生的原因</h3><ol><li>人工神经网络需要更加高性能的计算平台</li><li>人工神经网络不能实现强人工智能，因为它的工作方式与生物大脑仍存在着巨大的差距，脉冲神经网络的出现就是弥合神经科学与机器学习之间的巨大差距。</li></ol><h3 id="脉冲神经网络传统神经网络的对比"><a href="#脉冲神经网络传统神经网络的对比" class="headerlink" title="脉冲神经网络传统神经网络的对比"></a>脉冲神经网络传统神经网络的对比</h3><p>第一代神经网络是只能输出0、1的二值感知机<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657093960799-9f3cb8f1-621d-4e66-b91f-b5bb144a572c.png#clientId=u2c6e05e1-6522-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=243&id=u97afd13c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=319&originWidth=464&originalType=binary&ratio=1&rotation=0&showTitle=false&size=39412&status=done&style=none&taskId=u7df0e7a9-6c38-4b0c-96eb-e33a0d6421d&title=&width=353.5238095238095" alt="image.png"></p><p>第二代神经网络就是现在流行的、利用非线性激活函数实现连续数只输出的加深的深度学习<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657093979593-98db6ce9-469d-48de-9187-7ba9798faa90.png#clientId=u2c6e05e1-6522-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=266&id=uac0f23be&margin=%5Bobject%20Object%5D&name=image.png&originHeight=349&originWidth=671&originalType=binary&ratio=1&rotation=0&showTitle=false&size=112913&status=done&style=none&taskId=uad30adc1-a156-46f7-832a-86e42177462&title=&width=511.23809523809524" alt="image.png"><br>第三代神经网络就是本文的脉冲神经网络，在脉冲神经网络中，都是<strong>0、1组成的脉冲序列</strong>的传输<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657094010750-c692e127-be26-480e-9f5b-ed5afc5c9c4f.png#clientId=u2c6e05e1-6522-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=266&id=u2288cb48&margin=%5Bobject%20Object%5D&name=image.png&originHeight=349&originWidth=636&originalType=binary&ratio=1&rotation=0&showTitle=false&size=259850&status=done&style=none&taskId=u720266e7-6476-412f-ab23-45e7143e695&title=&width=484.57142857142856" alt="image.png"></p><h3 id="脉冲神经网络工作的一般过程"><a href="#脉冲神经网络工作的一般过程" class="headerlink" title="脉冲神经网络工作的一般过程"></a>脉冲神经网络工作的一般过程</h3><ol><li>确定编码方式，将样本数据编码为脉冲序列</li><li>将脉冲序列输入脉冲神经网络得到输出脉冲序列</li><li>将期望脉冲序列和实际输出脉冲序列作对比得到误差，并根据误差调整相应的权值<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1657093932639-0df14001-0aa5-4394-a7ef-d1962186018f.png#clientId=u2c6e05e1-6522-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=478&id=rL1kv&margin=%5Bobject%20Object%5D&name=image.png&originHeight=627&originWidth=668&originalType=binary&ratio=1&rotation=0&showTitle=false&size=263190&status=done&style=none&taskId=u440d5ea5-c916-4ffd-89d0-7d7be471618&title=&width=508.95238095238096" alt="image.png"></li></ol><p>这样看来，脉冲神经网络的工作思路与传统神经网络有很大的相似性，上面这个是一个简易的对比图，可以看出，SNN就是将输入输出、还有激活函数这些换为了脉冲。但在实现细节上具有很大不同。从这个过程来看，实现脉冲神经网络会有几个难点</p><h3 id="脉冲神经网络实现难点"><a href="#脉冲神经网络实现难点" class="headerlink" title="脉冲神经网络实现难点"></a>脉冲神经网络实现难点</h3><ol><li>如何确定编码的方式，即如何将样本信息合理地转换为脉冲序列进行训练</li><li>如何设计脉冲神经元的模型，如何模拟脉冲神经网络</li><li>如何度量实际输出脉冲序列和期望输出脉冲序列误差，即误差函数的合理定义</li></ol><h3 id="针对上述难点的解决方案"><a href="#针对上述难点的解决方案" class="headerlink" title="针对上述难点的解决方案"></a>针对上述难点的解决方案</h3><ol><li><p>对于编码方式，主要有两种：时间编码和速率编码</p><ol><li>速率编码理解：在运动细胞中，支配肌肉的力量完全取决于“脉冲发射率”，可以简单理解为脉冲发放的数量</li><li>时间编码理解：细胞时刻关注着外部的刺激，例如听觉系统。采用基于时间编码，可以更高效的信息进行表示，同时速度更快</li></ol><p> ​使用哪种编码是神经科学界争论的话题，甚至这些属于也没有明确的定义</p></li><li><p>神经元模型有LIF、IF、IM、HH等</p></li></ol><p>在我的理解中，神经元负责在一定情况下激活相关操作，就有些类似于传统意义上的激活函数，只不过神经元模型是通过硬件实现的激活。其中LIF神经元模型是最常用的，这里简单介绍一下。LIF的全程是leaky Integrat时e-And-Fire。leaky表示泄露，由于细胞膜是不断进行膜内外例子交换，所以当只有一次输入时，电压会自动发生泄露逐渐回落到静息状态，对于LIF模型一般是认为先下降低于Vrest,再上升到静息电位处。</p><ol start="3"><li>误差定义，根据任务进行合适定义</li></ol><h3 id="SNN的学习算法"><a href="#SNN的学习算法" class="headerlink" title="SNN的学习算法"></a>SNN的学习算法</h3><p>在了解了脉冲神经网络的结构之后，我还关注其如何进行学习。首先要了解，脉冲神经网络由于用到离散的脉冲信号，不能利用反向传播、梯度更新的方式进行网络训练。主要有三种学习的方式。</p><ol><li>利用一定方法，将现有的ANN模型映射到SNN中</li><li>对生物神经元模型进行处理，换成一个能够求导的模型，或者对传递的脉冲信息进行转换。</li><li>STDP算法<br>STDP的基本原理简单概括为：如果两个神经元发射脉冲的时间非常接近，那么这两个神经元的联系就越紧密，利用这一原理，就可以根据前后神经元的脉冲发放关系进行权重的调整。这里方法一般是无监督的。</li></ol><h3 id="SNN特点总结"><a href="#SNN特点总结" class="headerlink" title="SNN特点总结"></a>SNN特点总结</h3><ol><li>采用了生物神经元模型如LIF，比之前ANN的神经元更加接近生物。</li><li>信息的传递是基于脉冲进行的所以网络的输入要进行额外编码</li><li>SNN网络的能耗更低，每个神经元单独工作，部分神经元在没接收到输入时，将不会工作。</li><li>SNN是一个动态的系统，因此他在动态过程的表现出色，如语音与动态图片识别</li><li>SNN的训练比较困难，目前还有没专门为这项任务建立的学习算法。</li></ol>]]></content>
    
    
    <categories>
      
      <category>脉冲神经网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SNN</tag>
      
      <tag>脉冲神经网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FPGA学习3：初识Verilog语法</title>
    <link href="/2022/07/04/12FPGA%E5%AD%A6%E4%B9%A03%EF%BC%9A%E5%88%9D%E8%AF%86Verilog%E8%AF%AD%E6%B3%95/"/>
    <url>/2022/07/04/12FPGA%E5%AD%A6%E4%B9%A03%EF%BC%9A%E5%88%9D%E8%AF%86Verilog%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="一、Verilog-HDL简介"><a href="#一、Verilog-HDL简介" class="headerlink" title="一、Verilog HDL简介"></a>一、Verilog HDL简介</h2><ol><li>Verilog HDL是一种硬件描述语言，以文本的形式描述硬件结构和行为。可以表示逻辑电路图、逻辑表达式。</li><li>Verilog HDL语言与VHDL相比，代码简介、易学易用，发展较快。</li><li>由C语言发展而来，有一定相似性，但编程思想不同。</li></ol><h2 id="二、基础语法"><a href="#二、基础语法" class="headerlink" title="二、基础语法"></a>二、基础语法</h2><h3 id="1-逻辑值"><a href="#1-逻辑值" class="headerlink" title="1.逻辑值"></a>1.逻辑值</h3><p>0：逻辑低电平，条件为假<br>1：逻辑高电平，条件为真<br>Z：高阻态，无驱动<br>X：未知逻辑电平</p><h3 id="2-关键字"><a href="#2-关键字" class="headerlink" title="2.关键字"></a>2.关键字</h3><h4 id="1-模块的开始与结束"><a href="#1-模块的开始与结束" class="headerlink" title="1.模块的开始与结束"></a>1.模块的开始与结束</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656899401789-6e978b98-a038-45fb-8119-394b99cbea73.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=12&id=ufd61ee01&margin=%5Bobject%20Object%5D&name=image.png&originHeight=16&originWidth=353&originalType=binary&ratio=1&rotation=0&showTitle=false&size=10116&status=done&style=none&taskId=ued05168e-7e1c-495a-bcdf-a8d82a43b49&title=&width=268.95238095238096" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656899412529-52002758-f9e3-4be9-ab6b-0c55d845a84b.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=12&id=u4a30140d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=16&originWidth=98&originalType=binary&ratio=1&rotation=0&showTitle=false&size=2441&status=done&style=none&taskId=u754731fb-9f1a-40a3-b11d-081c809b582&title=&width=74.66666666666667" alt="image.png"></p><p>模块名与.v文件的文件名应该保持一致</p><h4 id="2-输入输出信号"><a href="#2-输入输出信号" class="headerlink" title="2.输入输出信号"></a>2.输入输出信号</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656899488111-944dfeec-e457-4de6-a8da-743c1b041f24.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=69&id=u488dee3d&margin=%5Bobject%20Object%5D&name=image.png&originHeight=91&originWidth=528&originalType=binary&ratio=1&rotation=0&showTitle=false&size=34576&status=done&style=none&taskId=u6002af11-f1e4-4d4a-a487-2234f36fdf3&title=&width=402.2857142857143" alt="image.png"></p><h4 id="3-变量"><a href="#3-变量" class="headerlink" title="3.变量"></a>3.变量</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656899521244-0feb2cdd-a7eb-4724-b1e9-b3208b49a9a6.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=68&id=uacd1fd13&margin=%5Bobject%20Object%5D&name=image.png&originHeight=96&originWidth=256&originalType=binary&ratio=1&rotation=0&showTitle=false&size=17420&status=done&style=none&taskId=ua711e73e-4cfc-42af-8bfe-f0b51c5d836&title=&width=181.04762268066406" alt="image.png"></p><p>wire映射为一跳物理练习<br>reg映射为一个物理寄存器</p><h4 id="4-参数"><a href="#4-参数" class="headerlink" title="4.参数"></a>4.参数</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656899576451-4f00073c-afcc-4613-ae27-2733729d0a1d.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=46&id=ue5693a04&margin=%5Bobject%20Object%5D&name=image.png&originHeight=61&originWidth=250&originalType=binary&ratio=1&rotation=0&showTitle=false&size=13590&status=done&style=none&taskId=u5ff89d25-7fa9-4797-92cf-503329c8158&title=&width=190.47619047619048" alt="image.png"></p><p>localparam只能在模块内部使用，不用用于实例化</p><h4 id="5-常量"><a href="#5-常量" class="headerlink" title="5.常量"></a>5.常量</h4><p><strong>使用的是基数表示法</strong><br><strong>格式：</strong><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656899665926-713687cb-089e-4dbb-bdee-4b9806bb52cd.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=0.9907&crop=1&from=paste&height=16&id=uc60067c5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=21&originWidth=709&originalType=binary&ratio=1&rotation=0&showTitle=false&size=25039&status=done&style=none&taskId=ucffa71a6-2f51-40d6-b49a-5a044c85273&title=&width=535" alt="image.png"><br><strong>举例：</strong><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656899739616-715e656b-12b0-420d-95c1-f7778f460411.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=38&id=u47133525&margin=%5Bobject%20Object%5D&name=image.png&originHeight=50&originWidth=538&originalType=binary&ratio=1&rotation=0&showTitle=false&size=32271&status=done&style=none&taskId=u88502ba5-5643-4e45-86d7-9532fd3b92b&title=&width=409.9047619047619" alt="image.png"><br><strong>注意：</strong> 二进制比较特殊<img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656899875579-1f429f03-2bbe-4604-a662-28a33f736c23.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=66&id=u7eaea8c7&margin=%5Bobject%20Object%5D&name=image.png&originHeight=87&originWidth=772&originalType=binary&ratio=1&rotation=0&showTitle=false&size=103152&status=done&style=none&taskId=uce4002b4-41d4-4228-9d0f-93cb5dd4b3c&title=&width=588.1904761904761" alt="image.png"></p><h4 id="6-赋值方式"><a href="#6-赋值方式" class="headerlink" title="6.赋值方式"></a>6.赋值方式</h4><p>阻塞赋值顺序执行</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656900003668-de9b2d22-b10e-4feb-af77-c82efb8afbda.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=143&id=uc2597d20&margin=%5Bobject%20Object%5D&name=image.png&originHeight=188&originWidth=150&originalType=binary&ratio=1&rotation=0&showTitle=false&size=17968&status=done&style=none&taskId=u0895a8f8-02f0-41fa-bc1b-bb35303016b&title=&width=114.28571428571429" alt="image.png"></p><p>非阻塞赋值语句并行执行</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656900066575-1448cb43-4c7f-4647-8b5b-1c0e6554df34.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=144&id=u40428626&margin=%5Bobject%20Object%5D&name=image.png&originHeight=189&originWidth=184&originalType=binary&ratio=1&rotation=0&showTitle=false&size=19613&status=done&style=none&taskId=uae1045e2-80dd-432b-86f0-f59de0bb810&title=&width=140.1904761904762" alt="image.png"></p><h4 id="7-always语句"><a href="#7-always语句" class="headerlink" title="7.always语句"></a>7.always语句</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656900176178-bcc4514d-cc8e-4088-835d-22091d57935d.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=104&id=u14443f1f&margin=%5Bobject%20Object%5D&name=image.png&originHeight=137&originWidth=406&originalType=binary&ratio=1&rotation=0&showTitle=false&size=36287&status=done&style=none&taskId=u3400e95a-5ad7-4494-bdaf-e1cbea6891d&title=&width=309.3333333333333" alt="image.png"></p><h4 id="8-assign语句"><a href="#8-assign语句" class="headerlink" title="8.assign语句"></a>8.assign语句</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656900232767-ac838b71-ac50-4e64-9bbb-e4a50e7d7068.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=33&id=u4d94ea35&margin=%5Bobject%20Object%5D&name=image.png&originHeight=43&originWidth=445&originalType=binary&ratio=1&rotation=0&showTitle=false&size=13235&status=done&style=none&taskId=u81c9bcec-3630-45c9-a69d-85f1b93bba8&title=&width=339.04761904761904" alt="image.png"></p><h3 id="3-算数运算符"><a href="#3-算数运算符" class="headerlink" title="3.算数运算符"></a>3.算数运算符</h3><p>+（加法，如assignc＝a＋b；即把a与b的和赋值给c） </p><p>-（减法，如assignc＝a-b；即把a减b的差赋值给c）</p><p>*（乘法，如assignc＝a＊3；即让a和3相乘，结果赋值给c，但是一般不用乘号）</p><p>&#x2F;（除法，如assignc＝a／2；即让a和2相除，结果赋值给c，一般也不用除号）</p><p>%（求模，或称为求余，要求％两侧均为整型数据，5％3的值为2，用在测试文件）</p><h3 id="3-规约运算符、按位运算符"><a href="#3-规约运算符、按位运算符" class="headerlink" title="3.规约运算符、按位运算符"></a>3.规约运算符、按位运算符</h3><p>以“＆”操作符为例，“＆”操作符有两种用途，既可以作为<strong>一元运算符</strong>（仅有一个参与运算的量），也可以作为<strong>二元运算符</strong>（有两个参与运算的量）。</p><ul><li>作为一维运算符</li></ul><p>当“＆”作为一元运算符时表示归约与，＆m是将m中所有比特相与，最后的结果为1bit。</p><p>例如：<br>&amp;4’b1111&#x3D;1&amp;1&amp;1&amp;1&#x3D;1’b1<br>&amp;4’b1101&#x3D;1&amp;1&amp;0&amp;1&#x3D;1’b0</p><ul><li>作为二维运算符</li></ul><p>当“＆”作为二元运算符时表示按位与，m＆n是将m的每个比特与n的相应比特相与，在运算的时候要保证m和n的比特数相等，最后的结果和m（n）的比特数相同。</p><p>例如：   4’b1010&amp;4’b0101&#x3D;4’b0000 4’b1101&amp;4’b1111&#x3D;4’b1101<br>“～＆”、“A”、“～A”、“｜”、“～｜”同理。</p><h3 id="4-逻辑运算符"><a href="#4-逻辑运算符" class="headerlink" title="4.逻辑运算符"></a>4.逻辑运算符</h3><p>以“&amp;&amp;”操作符为例，“&amp;&amp;”表示逻辑与，运算规则：逻辑与运算符号两边只有真或者假，非零表示真，零表示假，逻辑运算符两边都不为零则结果为1，否则为0。</p><p>例如： a＝4’ha，b＝4’d0，c＝a&amp;&amp;b，则c的值为0，<br>“||（逻辑或）”、“&#x3D;&#x3D;（逻辑相等）”、“!&#x3D;（逻辑不等）” 同理。</p><h3 id="5-关系运算符"><a href="#5-关系运算符" class="headerlink" title="5.关系运算符"></a>5.关系运算符</h3><p>a&lt;ba小于b </p><p>a&gt;ba大于b</p><p>a&lt;&#x3D;ba小于或等于b </p><p>a&gt;&#x3D;ba大于或等于b</p><p>注：关系运算符一般在条件判断时用到，例如if的判断语句，如果 if后面接的判断语句为真，则返回1，否则返回0</p><h3 id="6-移位运算符"><a href="#6-移位运算符" class="headerlink" title="6.移位运算符"></a>6.移位运算符</h3><p>移位运算符是二元运算符，左移符号为“&lt;&lt;”，右移符号为“&gt;&gt;”，将运算符左边的操作数左移或右移指定的位数，用0来补充空闲位。</p><p>b &lt;&#x3D;a&lt;&lt;1；即让a的每一位都往左移动1位，结果赋值给b；   (&lt;&#x3D;这是赋值的符号)</p><p>b &lt;&#x3D;a&gt;&gt;2；即让a的每一位都往右移动2位，结果赋值给b；<br>在应用移位运算符的时候一定要注意它的这个特性，那就是空闲位用0来填充，也就是说，一个二进制数不管原数值是多少，只要一直移位，最终全部会变为0。</p><p>例如：4＇b1000&gt;&gt;3后的结果为4＇b0001，4＇b1000 &gt;&gt;4的结果为4＇b0000。</p><p>移位运算符在使用时，可代替乘法和除法，左移一位可以看成是乘以2，右移一位可以看成是除以2，但要注意位宽的拓展。</p><h3 id="7-位拼接运算符"><a href="#7-位拼接运算符" class="headerlink" title="7.位拼接运算符"></a>7.位拼接运算符</h3><p>位拼接运算符由一对花括号加逗号组成“｛ , }”，拼接的不同数据之问用“，”隔开。</p><p>例如：<br>将8bit的a、3bit的b、5bit的按顺序拼接成一个16位的d，表示方法为：d＝｛a，b，c｝；</p><h3 id="8-条件运算符"><a href="#8-条件运算符" class="headerlink" title="8.条件运算符"></a>8.条件运算符</h3><p>条件运算符，“？：”，是一个三元运算符，即有三个参与运算的量，条件表达式的一 般形式为：表达式1？表达式2：表达式3<br>执行过程是：当表达式1为真，则表达式2作为条件表达式的值，否则以表达式3作为条件表达式的值。</p><p>例如：当a＝6，b＝7，c＝（a＞b）？a：b的结果为7。</p><p><strong>注意：</strong> 使用条件表达式时“？”和“：”是一对，不可以只是用一个； </p><h3 id="9-优先级"><a href="#9-优先级" class="headerlink" title="9.优先级"></a>9.优先级</h3><p>总的优先级关系为：归约运算符＞算数运算符＞移位运算符＞关系运算符＞“&#x3D;&#x3D;”和“！&#x3D;”＞按位运算符＞“＆＆”和“Il”＞条件运算符，总的来说是一元运算符＞一元运算符＞三元运算符。</p><p>如果在编写代码的时候对这些关系容易混淆，最好的方式就是使用“（）”增加优先级。</p><h3 id="10-if-else语句"><a href="#10-if-else语句" class="headerlink" title="10.if-else语句"></a>10.if-else语句</h3><p>if—else 条件分支语句的作用是根据指定的判断条件是否满足来确定下一步要执行的操作。它在使用时可以采用如下三种形式：</p><h4 id="1"><a href="#1" class="headerlink" title="(1)"></a>(1)</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">if</span>（＜条件表达式＞）<br>      语句或语句块;<br></code></pre></td></tr></table></figure><p>在if—else 条件语句的这种使用形式中没有出现 else项，这种情况下条件分支语句的执行过程是：如果指定的＜条件表达式＞成立（也就是这个条件表达式的逻辑值为“1”），则执行条件分支语句内给出的“语句或语句块”，然后退出条件分支语句的执行；如果＜条件表达式＞不成立（也就是条件的表达式的逻辑值为“0”、“x”、“z”），则不执行条件分支语句内给出的“语句或语句块”，而是直接退出条件语句的执行。这种写法如果在always块中表达级合逻辑时会产生latch，所以不推荐这种写法。</p><h4 id="2"><a href="#2" class="headerlink" title="(2)"></a>(2)</h4><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">if</span>（＜条件表达式<span class="hljs-number">1</span>＞）<br>    语句或语句块<span class="hljs-number">1</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>（＜条件表达式<span class="hljs-number">2</span>＞） <br>    语句或语句块<span class="hljs-number">2</span>：<br>......<br><span class="hljs-keyword">else</span><br></code></pre></td></tr></table></figure><p>在执行这种形式的 if—else条件分支语句时，将按照各分支项的排列顺序对各个条件表达式是否成立做出判断，当遇到某一项的条件表达式成立时，就执行这一项所指定的语句或语句块：如果所有的条件表达式都不成立，则执行最后的 else项。这种形式的 if—else 条件分支语句实现了一种多路分支选择控制。这种写法是我们在使用根据波形写代码的方法中最常用的一种写法。</p><h4 id="3"><a href="#3" class="headerlink" title="(3)"></a>(3)</h4><p>（3）Verilog HDL 允许 if—else 条件分支语句的嵌套使用，但是不要嵌套太多层，也不推荐这<br>种嵌套的写法，因为嵌套会有优先级的问题，最后导致逻辑混乱，if和else的结合混乱，代码也不清晰，如果写代码时遇到这种情况往往是可以将其合并的，最终写成（2）的形式。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">if</span>（＜条件表达式<span class="hljs-number">1</span>＞）  <span class="hljs-comment">//外层1L语句 </span><br>  <span class="hljs-keyword">if</span>（＜条件表达式<span class="hljs-number">2</span>＞） <span class="hljs-comment">//内层if语句1 </span><br>    语句或语句块<span class="hljs-number">1</span>；<br><span class="hljs-keyword">else</span>        <span class="hljs-comment">//内层else语句2</span><br>     语句或语句块<span class="hljs-number">2</span>；<br><span class="hljs-keyword">else</span>        <span class="hljs-comment">//外层else语句1</span><br>     语句或语句块<span class="hljs-number">3</span>；<br></code></pre></td></tr></table></figure><h3 id="11-case分支语句"><a href="#11-case分支语句" class="headerlink" title="11.case分支语句"></a>11.case分支语句</h3><p>case 分支语句是另一种用来实现多路分支控制的分支语句。与使用 if—else条件分支语句相比，采用case分支语句来实现多路控制将显得更为方便与直观。case 分支语句通常用于对微处理器指令译码功能的描述以及对<strong>有限状态机</strong>的描述。case 分支语句有“case”、“casez”、“casex”三种形式。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-keyword">case</span>（＜控制表达式＞）<br>    ＜分支语句<span class="hljs-number">1</span>＞:语句块<span class="hljs-number">1</span>;<br>    ＜分支语句<span class="hljs-number">2</span>＞:语句块<span class="hljs-number">2</span>;<br>    ＜分支语句<span class="hljs-number">3</span>＞:语句块<span class="hljs-number">3</span>;<br>    ＜分支语句n＞:语句块n;<br>    <span class="hljs-keyword">default</span>:语句块n+<span class="hljs-number">1</span>;<br><span class="hljs-keyword">endcase</span><br></code></pre></td></tr></table></figure><p>＜控制表达式＞代表着对程序流向进行控制的控制信号：各个＜分支表达式＞则是控制表达式的某些具体状态取值，在实际使用中这些分支项表达式通常是一些常量表达式：各个“语句”则指定了在各个分支下所要执行的操作，它们也可以是由单条语句构成，处于最后的、以关键词 default 开头的那个分支项称为“default”分支项，它是可以缺省的。</p><p>case 语句的执行过程：</p><p>(1)当“控制表达式”的取值等于“分支项表达式1”时，执行第一个分支项所包含的语句块1；</p><p>(2)当“控制表达式”的取值等于“分支项表达式2”时，执行第二个分支项所包含的语句块2;</p><p>(3)当“控制表达式”的取值等于“分支项表达式n”时，执行第N个分支项所包含的语句块n；</p><p>(4)在执行了某一分支项内的语句后，跳出 case 语句结构，终止 case 语句的执行。case 语句中各个“分支项表达式”的取值必须是互不相同的，否则就会出现矛盾现象。</p><h3 id="12-系统函数"><a href="#12-系统函数" class="headerlink" title="12.系统函数"></a>12.系统函数</h3><p>Verilog 语言中预先定义了一些任务和函数，用于完成一些特殊的功能，它们被称为系统任务和系统函数，这些函数大多数都是只能在Testbench 仿真中使用的，使我们更方便的进行验证。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-meta">`<span class="hljs-keyword">timescale</span> 1ns/1ns </span><span class="hljs-comment">//时间尺度预编译指令 时间单位／时间精度</span><br></code></pre></td></tr></table></figure><p>时间单位和时间精度由值1、10、和100以及单位s、ms、us、ns、ps和fs组成。</p><p>时间单位：定义仿真过程所有与时间相关量的单位。</p><p>仿真中使用“＃数字”表示延时相应时间单位的时间，例＃10表示延时10个单位的时间，即10ns。</p><p>时间精度：决定时间相关量的精度及仿真显示的最小刻度。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">`timescalo <span class="hljs-number">1</span>ns/<span class="hljs-number">10</span>ps 精度<span class="hljs-number">0</span><span class="hljs-variable">.01</span>，＃<span class="hljs-number">10</span><span class="hljs-variable">.11</span> 表示延时<span class="hljs-number">10110</span>ps 下面这种写法就是错误的，因为时间单位不能比时间精度小。<br><span class="hljs-meta">`<span class="hljs-keyword">timescale</span> 100ps/1ns</span><br></code></pre></td></tr></table></figure><p>主要的函数有如下这些，在支持 Verilog 语法的编辑器中都会显示为高亮关键字</p><table><thead><tr><th>$display</th><th>&#x2F;&#x2F;打印信息,自动换行</th></tr></thead><tbody><tr><td>$write</td><td>&#x2F;&#x2F;打印信息</td></tr><tr><td>$strobe</td><td>&#x2F;&#x2F;打印信息,自动换行,最后执行</td></tr><tr><td>$monitor</td><td>&#x2F;&#x2F;监测变量</td></tr><tr><td>$stop</td><td>&#x2F;&#x2F;暂停仿真</td></tr><tr><td>$finish</td><td>&#x2F;&#x2F;结束仿真</td></tr><tr><td>$time</td><td>&#x2F;&#x2F;时间函数</td></tr><tr><td>$random</td><td>&#x2F;&#x2F;随机函数</td></tr><tr><td>$readmemb</td><td>&#x2F;&#x2F;读文件函数</td></tr></tbody></table><h4 id="1-display用于输出、打印信息"><a href="#1-display用于输出、打印信息" class="headerlink" title="1.$display用于输出、打印信息"></a>1.$display用于输出、打印信息</h4><p>使用格式为：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-built_in">$display</span>(<span class="hljs-string">&quot;%b＋%b＝%d&quot;</span>,a,b,c); <span class="hljs-comment">//格式“％b＋％b＝％d”格式控制，未指定时默认十进制 </span><br>%h或%H<span class="hljs-comment">//以十六进制的形式输出</span><br>%d或%D<span class="hljs-comment">//以十进制的形式输出</span><br>%o或%O<span class="hljs-comment">//以八进制的形式输出</span><br>%b或%B<span class="hljs-comment">//以二进制的形式输出</span><br></code></pre></td></tr></table></figure><p>实例展示：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656902444944-ee4367e3-82a6-4250-bb5b-05043ad6d992.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=238&id=uac9fe979&margin=%5Bobject%20Object%5D&name=image.png&originHeight=313&originWidth=320&originalType=binary&ratio=1&rotation=0&showTitle=false&size=52481&status=done&style=none&taskId=uccb90862-3345-46f4-926d-d795682aeba&title=&width=243.8095238095238" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656903331436-912eaa21-f409-40a2-81de-980a9aab8dba.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=169&id=u156951df&margin=%5Bobject%20Object%5D&name=image.png&originHeight=222&originWidth=454&originalType=binary&ratio=1&rotation=0&showTitle=false&size=43639&status=done&style=none&taskId=ue80e9a50-056b-4e66-9abb-6a5a4f03ac5&title=&width=345.9047619047619" alt="image.png"></p><h4 id="2-write-用于输出、打印信息（不会自动换行）"><a href="#2-write-用于输出、打印信息（不会自动换行）" class="headerlink" title="2.$write 用于输出、打印信息（不会自动换行）"></a>2.$write 用于输出、打印信息（不会自动换行）</h4><p>使用格式为：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-built_in">$write</span>(<span class="hljs-string">&quot;%b＋%b＝%d\n&quot;</span>,a, b,c);  <span class="hljs-comment">//“％b＋％b＝％d”格式控制，未指定时默认十进制 </span><br>\n   <span class="hljs-comment">//表示换行</span><br></code></pre></td></tr></table></figure><h4 id="3-strobe用于输出、打印信息"><a href="#3-strobe用于输出、打印信息" class="headerlink" title="3.$strobe用于输出、打印信息"></a>3.$strobe用于输出、打印信息</h4><p>与前面两个的区别是只在最后执行</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656903343174-a93ded6c-a0df-4f7b-b23a-963b41e8742e.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=115&id=ufe573d16&margin=%5Bobject%20Object%5D&name=image.png&originHeight=151&originWidth=446&originalType=binary&ratio=1&rotation=0&showTitle=false&size=39337&status=done&style=none&taskId=u78cc79e5-6290-4740-b574-b98d051df36&title=&width=339.8095238095238" alt="image.png"></p><p>输出结果：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656903347947-e369935f-adf5-472a-a07e-7ec1f4d12664.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=146&id=u7d9d9dc9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=191&originWidth=450&originalType=binary&ratio=1&rotation=0&showTitle=false&size=45044&status=done&style=none&taskId=ud9c5c552-7f96-47bc-9e8f-af2e3b820d1&title=&width=342.85714285714283" alt="image.png"></p><h4 id="4-monitor用于持续监测变量"><a href="#4-monitor用于持续监测变量" class="headerlink" title="4.$monitor用于持续监测变量"></a>4.$monitor用于持续监测变量</h4><p>变量每被赋值一次都进行一次打印<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656903064684-5cf8dbe9-236b-4f32-8cf9-f6ce5abd924c.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=121&id=u6818a385&margin=%5Bobject%20Object%5D&name=image.png&originHeight=159&originWidth=372&originalType=binary&ratio=1&rotation=0&showTitle=false&size=23798&status=done&style=none&taskId=ud96ffe22-d38a-431f-bdd8-de9090335e9&title=&width=283.42857142857144" alt="image.png"></p><p>输出结果：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656903056130-50ed0a2c-743e-4109-9fa1-538c418abdc5.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=147&id=u6d8c88d0&margin=%5Bobject%20Object%5D&name=image.png&originHeight=248&originWidth=486&originalType=binary&ratio=1&rotation=0&showTitle=false&size=48017&status=done&style=none&taskId=uf2346dc0-4b9a-4413-947a-ea082f47968&title=&width=288.28570556640625" alt="image.png"></p><h4 id="5-stop用于暂停仿真，-finish用于结束仿真"><a href="#5-stop用于暂停仿真，-finish用于结束仿真" class="headerlink" title="5.$stop用于暂停仿真，$finish用于结束仿真"></a>5.$stop用于暂停仿真，$finish用于结束仿真</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656902993652-b1b2e169-9fda-4f72-b6e2-e38a57fdbc1a.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=211&id=ua8040f35&margin=%5Bobject%20Object%5D&name=image.png&originHeight=277&originWidth=385&originalType=binary&ratio=1&rotation=0&showTitle=false&size=69178&status=done&style=none&taskId=u197b7300-bc15-491b-bba5-0f14073935d&title=&width=293.3333333333333" alt="image.png"></p><p>代码中的#100 是等待100个时间单位</p><p>输出结果：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656903168154-3d98624d-2c90-4546-8ed7-ddffa4f0a4c0.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=204&id=ub93055cf&margin=%5Bobject%20Object%5D&name=image.png&originHeight=268&originWidth=460&originalType=binary&ratio=1&rotation=0&showTitle=false&size=84133&status=done&style=none&taskId=uc57be408-0903-4744-ba82-4e7b23e96db&title=&width=350.4761904761905" alt="image.png"></p><h4 id="6-time为时间函数，返回64位当前仿真时间；-random用于产生随机函数，返回随机数"><a href="#6-time为时间函数，返回64位当前仿真时间；-random用于产生随机函数，返回随机数" class="headerlink" title="6. $time为时间函数，返回64位当前仿真时间；$random用于产生随机函数，返回随机数"></a>6. $time为时间函数，返回64位当前仿真时间；$random用于产生随机函数，返回随机数</h4><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656903141222-52606dc4-3687-48cf-a608-821a58a590a4.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=123&id=uf7d80974&margin=%5Bobject%20Object%5D&name=image.png&originHeight=161&originWidth=407&originalType=binary&ratio=1&rotation=0&showTitle=false&size=30175&status=done&style=none&taskId=ud713c80b-ee8e-431d-bf6e-d8292616dee&title=&width=310.0952380952381" alt="image.png"></p><p>输出结果：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656903158607-6d76f4f1-d51d-4cd2-a3f2-b3565085af54.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=226&id=uf885032a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=296&originWidth=449&originalType=binary&ratio=1&rotation=0&showTitle=false&size=61585&status=done&style=none&taskId=ua4a3eafc-c0db-4946-b292-c35f77dffc0&title=&width=342.0952380952381" alt="image.png"></p><h4 id="7-readmemb用于读二进制文件函数，-readmemh-用于读十六进制文件函数"><a href="#7-readmemb用于读二进制文件函数，-readmemh-用于读十六进制文件函数" class="headerlink" title="7.$readmemb用于读二进制文件函数，$readmemh 用于读十六进制文件函数"></a>7.$readmemb用于读二进制文件函数，$readmemh 用于读十六进制文件函数</h4><p>使用格式：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog"><span class="hljs-built_in">$readmemb</span>（<span class="hljs-string">&quot;＜数据文件名＞&quot;</span>，＜存贮器名＞）;<br><span class="hljs-built_in">$readmemh</span>（<span class="hljs-string">&quot;＜数据文件名＞&quot;</span>，＜存贮器名＞）;<br></code></pre></td></tr></table></figure><p>实例：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656903458563-7a985253-3eaf-48f1-883a-423047a2828d.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=211&id=u150c2480&margin=%5Bobject%20Object%5D&name=image.png&originHeight=277&originWidth=325&originalType=binary&ratio=1&rotation=0&showTitle=false&size=47907&status=done&style=none&taskId=u0a92128a-3b7f-4754-9873-b256b19e661&title=&width=247.61904761904762" alt="image.png"></p><p>输出结果：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656903553160-672f5033-9636-4e87-a1df-ff3346264dfd.png#clientId=u93596d75-2520-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=165&id=u17346dcf&margin=%5Bobject%20Object%5D&name=image.png&originHeight=217&originWidth=451&originalType=binary&ratio=1&rotation=0&showTitle=false&size=46511&status=done&style=none&taskId=u0a140422-34ce-4a89-ab66-43cf9479dd5&title=&width=343.6190476190476" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>FPGA学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Verilog</tag>
      
      <tag>语法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面试准备第三天-数据库复习2</title>
    <link href="/2022/07/03/11%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%E7%AC%AC%E4%B8%89%E5%A4%A9-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A02/"/>
    <url>/2022/07/03/11%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%E7%AC%AC%E4%B8%89%E5%A4%A9-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A02/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><blockquote><p>今天是面试准备的第三天，复习一下数据库概念性问题，参考资料来自up主：<a href="https://space.bilibili.com/949043">https://space.bilibili.com/949043</a></p></blockquote><h2 id="第一章：绪论"><a href="#第一章：绪论" class="headerlink" title="第一章：绪论"></a>第一章：绪论</h2><h3 id="1、数据库的4个基本概念"><a href="#1、数据库的4个基本概念" class="headerlink" title="1、数据库的4个基本概念"></a>1、数据库的4个基本概念</h3><p>①数据data：描述事物的符号，数据库中存储的基本对象</p><p>②数据库DataBase, DB：长期存储在计算机内的、有组织的、可共享的大量数据的集合</p><p>③数据库管理系统DataBase Management System, DBMS：位于用户与操作系统之间的一层数据管理软件</p><p>④数据库系统DataBase System,DBS：由数据库、数据库管理系统、应用程序和数据库管理员（DBA）组成</p><h3 id="2、数据库系统的特点"><a href="#2、数据库系统的特点" class="headerlink" title="2、数据库系统的特点"></a>2、数据库系统的特点</h3><p>①数据结构化</p><p>②数据的共享性高，冗余度低而且容易扩充</p><p>③数据独立性高：物理独立性（应用程序与物理存储相互独立，数据的物理存储改变，应用程序不改变），逻辑独立性（应用程序与逻辑结构相互独立，数据的逻辑结构改变，应用程序不改变）</p><p>④数据由数据库管理系统统一管理和控制</p><h3 id="3、数据模型"><a href="#3、数据模型" class="headerlink" title="3、数据模型"></a>3、数据模型</h3><p>数据模型包括概念模型（信息模型）和逻辑模型模型</p><p>概念模型按用户的观点建模，用于数据库设计，表示方法有E—R模型</p><p>逻辑模型按计算机的观点建模，用于DBMS实现，包括网状模型、层次模型、关系模型等等物理模型是对数据最底层的抽象</p><h3 id="4、数据模型的组成要素：数据结构、数据操作、数据的完整性约束条件"><a href="#4、数据模型的组成要素：数据结构、数据操作、数据的完整性约束条件" class="headerlink" title="4、数据模型的组成要素：数据结构、数据操作、数据的完整性约束条件"></a><font color='red'>4、数据模型的组成要素：数据结构、数据操作、数据的完整性约束条件</font></h3><p>数据模型是严格定义的一组概念的集合，需要精确描述系统的静态特性、动态特性和完整性约束条件因此数据模型由以下三个部分组成：</p><p>①数据结构：描述系统的静态特性→描述数据库的组成对象以及对象之间的联系</p><p>②数据操作：描述系统的动态特性→是对数据库中各种对象的实例所允许的操作的集合，其类型有查询和更新（增删改）</p><p>③数据的完整性约束条件：用以限定符合数据模型的数据库状态以及状态的变化，以保证数据的正确、有效与相容，完整性约束条件是一组完整性规则的集合</p><h3 id="5、数据库系统的三级模式结构：外模式、模式（逻辑模式）、内模式应用"><a href="#5、数据库系统的三级模式结构：外模式、模式（逻辑模式）、内模式应用" class="headerlink" title="5、数据库系统的三级模式结构：外模式、模式（逻辑模式）、内模式应用"></a><font color='red'>5、数据库系统的三级模式结构：外模式、模式（逻辑模式）、内模式应用</font></h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656856502643-47817fc7-fcb9-4814-a5c6-9e33cbe86eaa.png" alt="img"></p><p>①外模式（子模式&#x2F;用户模式）：数据库用户能够看见和使用的局部数据的逻辑结构和特征的描述，数据库用户的数据视图，是与某应用有关的数据的逻辑表示</p><p>②模式（逻辑模式）：数据库中全体数据的逻辑结构和特征的描述，是所有用户的公共数据视图③内模式（存储模式）：数据物理结构和存储方法的描述，是数据在数据库内部的组织方式</p><h3 id="6、数据库的二级映像功能与数据独立性"><a href="#6、数据库的二级映像功能与数据独立性" class="headerlink" title="6、数据库的二级映像功能与数据独立性"></a>6、数据库的二级映像功能与数据独立性</h3><p>①外模式&#x2F;模式映像：保证了数据的逻辑独立性</p><p>当模式改变时，对外模式&#x2F;模式的映像做出改变，保证外模式不变，应用程序由外模式编写，从而应用程序不变</p><p>②模式&#x2F;内模式映像：保证了数据的物理独立性</p><p>当数据库的存储结构改变时，对模式&#x2F;内模式映像做出改变，使模式不变，进而应用程序不变</p><h2 id="第四章：数据库安全性"><a href="#第四章：数据库安全性" class="headerlink" title="第四章：数据库安全性"></a>第四章：数据库安全性</h2><h3 id="1、不安全因素"><a href="#1、不安全因素" class="headerlink" title="1、不安全因素"></a>1、不安全因素</h3><p>①非授权用户对数据库的恶意存取和破坏②数据库中重要数据的泄露</p><p>③安全环境的脆弱性</p><h3 id="2、数据库安全性控制"><a href="#2、数据库安全性控制" class="headerlink" title="2、数据库安全性控制"></a>2、数据库安全性控制</h3><p>①用户身份鉴别：静态口令鉴别、动态口令鉴别、生物特征鉴别、智能卡鉴别②存取控制</p><p>③自主存取控制方法</p><h3 id="3、为什么要授权"><a href="#3、为什么要授权" class="headerlink" title="3、为什么要授权"></a><font color='red'>3、为什么要授权</font></h3><p>授权是指授予（GRANT）和收回（REVOKE），是数据库安全性控制中的自主存取控制方法。是为了保护数据库，防止不合法使用所造成的数据泄露、更改或破坏</p><h3 id="4、如何授权：授予GRANT"><a href="#4、如何授权：授予GRANT" class="headerlink" title="4、如何授权：授予GRANT"></a>4、如何授权：授予GRANT</h3><p>发出如下语句的可以是数据库管理员、也可以是数据库对象创建者、也可以是已经拥有该权限的用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">GRANT</span> 权限 <span class="hljs-keyword">ON</span> 对象类型 对象名 <span class="hljs-keyword">TO</span> 用户名 [<span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> OPTION]；<br></code></pre></td></tr></table></figure><p><strong>权限：</strong>查询权限 SELECT，全部操作权限 ALL PRIVILEGES</p><p><strong>对象类型&amp;对象名：</strong>对象类型可以是TABLE也可以是VIEW，对象名为对应的表名或者视图名</p><p><strong>用户名：</strong>可以是指定用户，也可以是全体用户PUBLIC</p><p>如果没有指定WITH GRANT OPTION 子句，则获得某种权限的用户只能使用该权限，不能传播该权限</p><p><strong>注意：</strong> SQL不允许循环授权，即被授权者不能把权限再授回给授权者或其祖先</p><p>eg.把查询权限授给用户U1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">ON</span> <span class="hljs-keyword">TABLE</span> Student <span class="hljs-keyword">TO</span> U1;<br></code></pre></td></tr></table></figure><h3 id="5、收回授权：收回REVOKE"><a href="#5、收回授权：收回REVOKE" class="headerlink" title="5、收回授权：收回REVOKE"></a><font color='red'>5、收回授权：收回REVOKE</font></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">REVOKE</span> 权限 <span class="hljs-keyword">ON</span> 对象类型 对象名<span class="hljs-keyword">FROM</span> 用户名 [CASCADEJRESTRICT];<br></code></pre></td></tr></table></figure><p>CASCADE：级联回收。将用户传播出去的权限一并收回</p><p>RESTRICT：受限回收。若用户传播过该权限，回收将会失败</p><p>eg.把用户U4修改学生学号的权限收回</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">REVOKE</span> <span class="hljs-keyword">UPDATE</span>(Sno) <span class="hljs-keyword">ON</span> <span class="hljs-keyword">TABLE</span> Student <span class="hljs-keyword">FROM</span> U4;<br></code></pre></td></tr></table></figure><h3 id="6、创建数据库模式的权限"><a href="#6、创建数据库模式的权限" class="headerlink" title="6、创建数据库模式的权限"></a>6、创建数据库模式的权限</h3><p>对创建数据库模式一类的数据库对象的授权再数据库管理员创建用户时实现：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> username [<span class="hljs-keyword">WITH</span> DBAJRESOURCEICONNECT];<br></code></pre></td></tr></table></figure><p>只有系统的超级用户才有权创建一个新的数据库用户，新创建的数据库用户有三种权限：DBA、RESOURCE、CONNECT （此为默认）</p><p>DBA：可以创建新用户、创建模式、创建基本表和视图等，拥有对所有数据库对象的存取权限，还可以把这些权限授予一般用户</p><p>RESOURCE：可以创建基本表和视图，但不能创建模式和新用户。数据库对象的属主可以用GRANT 语句把该对象上的存取权限授予其他用户</p><p>CONNECT：只能登陆数据库，根据其他用户或者数据库管理员授予的权限的情况对数据库对象进行权限范围内的操作</p><h3 id="7、数据库角色"><a href="#7、数据库角色" class="headerlink" title="7、数据库角色"></a>7、数据库角色</h3><p>角色是权限的集合。可以为一组具有相同权限的用户创建一个角色，使用角色来管理数据库权限可以简化授权的过程</p><p><strong>创建角色：</strong>CREATE ROLE 角色名；</p><p><strong>在一个角色中添加角色或者用户：</strong> GRANT 角色TO 某角色&#x2F;某用户[WITH ADMIN OPTION]；</p><p>指定WITH ADMIN OPTION 子句，则获得某种权限的角色或者用户还可以把这种权限再授予其他角色</p><p><strong>给角色授权：</strong> GRANT 权限 ON 对象类型 对象名TO角色；</p><p><strong>角色权限收回：</strong>REVOKE 权限ON 对象类型 对象名FROM 角色；</p><h3 id="8、视图机制"><a href="#8、视图机制" class="headerlink" title="8、视图机制"></a>8、视图机制</h3><p>为不同的用户定义不同的视图，把不需要的数据隐藏，这样用户就不会误操作</p><h3 id="9、审计"><a href="#9、审计" class="headerlink" title="9、审计"></a>9、审计</h3><p>把对数据库的所有操作都记录到审计日志中，然后就可以通过日志审查这个里面是否有一些非法的行为</p><h3 id="10、数据加密"><a href="#10、数据加密" class="headerlink" title="10、数据加密"></a>10、数据加密</h3><p>通过一些加密算法，把明文变成密文。这样别人就无法查看</p><h2 id="第五章：数据库完整性"><a href="#第五章：数据库完整性" class="headerlink" title="第五章：数据库完整性"></a>第五章：数据库完整性</h2><h3 id="1、数据库的完整性是指数据的正确性和相容性"><a href="#1、数据库的完整性是指数据的正确性和相容性" class="headerlink" title="1、数据库的完整性是指数据的正确性和相容性"></a>1、数据库的完整性是指数据的正确性和相容性</h3><p>正确性：符合现实世界语义</p><p>相容性：同一对象在不同表中的数据符合逻辑</p><h3 id="2、维护完整性需要实现的功能"><a href="#2、维护完整性需要实现的功能" class="headerlink" title="2、维护完整性需要实现的功能"></a>2、维护完整性需要实现的功能</h3><p>①提供定义完整性约束条件的机制</p><p>②提供完整性检查的方法</p><p>③进行违约处理</p><h3 id="3、三大完整性"><a href="#3、三大完整性" class="headerlink" title="3、三大完整性"></a>3、三大完整性</h3><p>①实体完整性：主码唯一且非空</p><p>检查与违约处理：检查主码是否唯一，如果不唯一则拒绝插入或修改；检查主码各个属性是否为空，只要有一个为空就拒绝插入或修改</p><p>②参照完整性：外码的约束</p><p>检查：对被参照表和参照表进行增删改操作时可能会破坏参照完整性，必须检查以保证两个表的相容性</p><p>违约处理：外码约束可以在创建参照表时说明不同的违约策略</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656857058711-29c7572c-4aae-4196-95f3-befe70c77074.png" alt="img"></p><p>③用户定义完整性：属性上约束条件的定义</p><p>1.属性上的约束条件</p><p>非空NOT NULL列值唯—UNIQUE</p><p>检查列值是否满足一个表达式CHECK</p><p>检查和违约处理：当向表中插入元组或者修改属性值时，关系数据库管理系统将检查属性上的约束条件是否被满足，如果不满足则操作被拒绝</p><p>2.元组上的约束条件</p><p>在CREATE TABLE 语句中可以用 CHECK短语定义元组上的约束条件，元组级的限制可以设置不同属性之间的取值的相互约束条件</p><p>检查和违约处理：当向表中插入元组或者修改属性值时，关系数据库管理系统将检查元组上的约束条件是否被满足，如果不满足则操作被拒绝</p><h2 id="第七章：数据库设计的步骤"><a href="#第七章：数据库设计的步骤" class="headerlink" title="第七章：数据库设计的步骤"></a>第七章：数据库设计的步骤</h2><h3 id="1、需求分析"><a href="#1、需求分析" class="headerlink" title="1、需求分析"></a>1、需求分析</h3><p>调查机构情况与熟悉业务活动，明确用户的需求，确定系统的边界，生成数据字典和用户需求规格说明书</p><h3 id="2、概念结构设计"><a href="#2、概念结构设计" class="headerlink" title="2、概念结构设计"></a>2、概念结构设计</h3><p>将需求分析得到的用户需求抽象为概念模型，绘制E—R图</p><h3 id="3、逻辑结构设计"><a href="#3、逻辑结构设计" class="headerlink" title="3、逻辑结构设计"></a>3、逻辑结构设计</h3><p>将E—R图转换为与DBMS相符合的逻辑结构（包括数据库模式和外模式），例如E—R图向关系模型转换，再根据规范化理论对数据模型进行优化，设计用户子模式</p><h3 id="4、物理结构设计"><a href="#4、物理结构设计" class="headerlink" title="4、物理结构设计"></a>4、物理结构设计</h3><p>通常关系数据库物理设计的内容包括关系模式选择存取方法、以及设计关系、索引等数据库文件的物理存储结构</p><h3 id="5、数据库实施"><a href="#5、数据库实施" class="headerlink" title="5、数据库实施"></a>5、数据库实施</h3><p>建立实际数据库结构、试运行、装入数据</p><h3 id="6、数据库运行和维护"><a href="#6、数据库运行和维护" class="headerlink" title="6、数据库运行和维护"></a>6、数据库运行和维护</h3><p>维护数据库的安全性、完整性控制以及系统的转储和恢复；性能的监督、分析和改进；增加新功能；发现错误和修改错误</p><h2 id="第八章：数据库编程"><a href="#第八章：数据库编程" class="headerlink" title="第八章：数据库编程"></a>第八章：数据库编程</h2><h3 id="1、嵌入式-SQL与主语言之间的通信"><a href="#1、嵌入式-SQL与主语言之间的通信" class="headerlink" title="1、嵌入式 SQL与主语言之间的通信"></a><font color='red'>1、嵌入式 SQL与主语言之间的通信</font></h3><p>SQL是描述性的面向集合的语句，负责操纵数据库；高级语言语句是过程性的面向记录的语句，负责控制程序流程通信。</p><p>在嵌入式SQL中，当主语言为C语言时，语法格式为EXEC SQL &lt;SQL语句&gt;；当主语言为Java，语法格式为 #SQL （&lt;SQL语句&gt;；</p><p>嵌入式SQL与主语言之间的通信包括：</p><p>① SQL向主语言传递执行状态信息，主要用SQL通信区实现</p><p>②主语言向SQL提供参数，主要用主变量实现</p><p>③将SQL语句查询数据库的结果交给主语言处理，主要用主变量和游标实现</p><ul><li><strong>SQL通信区:</strong></li></ul><p>SQL语句执行后的执行状态信息将送到SQL通信区中，应用程序从中取出这些信息，据此决定接下来执行的语句SQL通信区在应用程序中用EXEC SQL INCLUDE SQLCA 加以定义</p><ul><li><strong>主变量：</strong></li></ul><p>SQL语句中使用的主语言程序变量简称为主变量（即SQL使用主语言的变量）</p><p>输入主变量由应用程序赋值，SQL引用；输出主变量由SQL赋值或设置状态信息，返回应用程序</p><p>一个主变量可以附带一个任选的指示变量（整型），用来指示所指主变量的值或条件</p><p>主变量名和指示变量名前面要加冒号（:）作为标志</p><p>所有主变量和指示变量必须在SQL语句 BEGIN DECLARE SECTION 与 END DECLARE SECTION 之间进行说明</p><ul><li><strong>游标：</strong></li></ul><p>SQL是面向集合的，一条SQL 语句可以产生或处理多条记录，而主语言是面向记录的，一组变量一次只能存放一条记录，因此引入游标来协调这两种不同的处理方式</p><p>一个数据缓冲区，用来存放SQL语句的执行结果，每个游标区都有自己的名字</p><ul><li><strong>建立连接：</strong></li></ul><p>嵌入式SQL访问数据库必须先连接数据库</p><p>建立连接的嵌入式SQL 语句为EXEC SQL CONNECT TO target [AS connection-name][USER user-name]; 其中target是要连接的数据库服务器， connection—name是可选的连接名</p><p>运行过程如果要修改当前连接,对应的嵌入式语句为EXEC SQL SET CONNECTION connection-name|DEFAULT; .</p><ul><li><strong>关闭连接:</strong></li></ul><p>对应的嵌入式SQL语句为EXEC SQL DISCONNECT [connection]；</p><h3 id="2、嵌入式SQL与主语言通信的程序实例"><a href="#2、嵌入式SQL与主语言通信的程序实例" class="headerlink" title="2、嵌入式SQL与主语言通信的程序实例"></a><font color='red'>2、嵌入式SQL与主语言通信的程序实例</font></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">EXEC</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">BEGIN</span> <span class="hljs-keyword">DECLARE</span> SECTION; <span class="hljs-comment">/*主变量说明开始*/</span><br><span class="hljs-type">char</span> Deptname[<span class="hljs-number">20</span>]；<br><span class="hljs-type">char</span> Hsno[<span class="hljs-number">9</span>];<br><span class="hljs-type">char</span> Hsname[<span class="hljs-number">20</span>]；<span class="hljs-type">char</span> Hssex[<span class="hljs-number">2</span>]; <span class="hljs-type">int</span> HSage；<br><span class="hljs-type">int</span> NEWAGE；<br><span class="hljs-keyword">EXEC</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">END</span> <span class="hljs-keyword">DECLARE</span> SECTION;   <span class="hljs-comment">/*主变量说明结束*/</span><br>long SQLCODE;<br><span class="hljs-keyword">EXEC</span> <span class="hljs-keyword">SQL</span> INCLUDE SQLCA;         <span class="hljs-comment">/*定义 SQL 通信区*/</span><br><span class="hljs-type">int</span> main(void)                  <span class="hljs-comment">/*C语言主程序开始*/</span><br><span class="hljs-type">int</span> count <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; <span class="hljs-type">char</span> yn;         <span class="hljs-comment">/*变量yn代表yes 或no*/</span><br>printf(&quot;Please choose the department name(CS/MA/IS): &quot;);<br>scanf(&quot;%s&quot;,deptname);           <span class="hljs-comment">/*为主变量deptname 赋值*/</span><br><span class="hljs-keyword">EXEC</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">CONNECT</span> <span class="hljs-keyword">TO</span> TEST<span class="hljs-variable">@localhost</span>：<span class="hljs-number">54321</span> <span class="hljs-keyword">USER</span> “<span class="hljs-keyword">SYSTEM</span>”<span class="hljs-operator">/</span>“MANAGER”； <span class="hljs-comment">/*连接数据库 TEST*/</span><br><span class="hljs-keyword">EXEC</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">DECLARE</span> SX <span class="hljs-keyword">CURSOR</span> <span class="hljs-keyword">FOR</span>  <span class="hljs-comment">/*定义游标SX*/</span><br><span class="hljs-keyword">SELECT</span> Sno，Sname，Ssex，Sage    <span class="hljs-comment">/*SX 对应的语*/</span><br><span class="hljs-keyword">FROM</span> Student<br><span class="hljs-keyword">WHERE</span> SDept <span class="hljs-operator">=</span> :deptname;<br><span class="hljs-keyword">EXEC</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">OPEN</span> SX； <span class="hljs-comment">/*打开游标SX，指向查询结果的第一行*/</span><br><span class="hljs-keyword">for</span> (;;) <span class="hljs-comment">/*用循环结构逐条处理结果集中的记录*/</span><br><span class="hljs-keyword">EXEC</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">FETCH</span> SX <span class="hljs-keyword">INTO</span> :HSno,:Hsname,:HSsex,:HSage; <span class="hljs-comment">/*推进游标,将当前数据放入主变量*/</span> <br>if (SQLCA.SQLCODE<span class="hljs-operator">!=</span> <span class="hljs-number">0</span>)           <span class="hljs-comment">/*SQLCODE！=0，表示操作不成功*/</span><br>break;                           <span class="hljs-comment">/*利用SQLCA中的状态信息决定何时退出循环*/</span><br>if(count<span class="hljs-operator">+</span><span class="hljs-operator">+</span> <span class="hljs-operator">=</span><span class="hljs-operator">=</span> <span class="hljs-number">0</span>)                 <span class="hljs-comment">/*如果是第一行的话，先打出行头*/</span><br>printf(&quot;in%-10s %-20s %-10s %-10sln&quot;, &quot;Sno&quot;,&quot;Sname&quot;,&quot;Ssex&quot;, &quot;Sage&quot;); <br>printf(&quot;%-10s %-20s %-10s %-10din&quot;, HSno,Hsname, Hssex, HSage);<br><span class="hljs-comment">/*打印查询结果*/</span>printf(“<span class="hljs-keyword">UPDATE</span> AGE(y<span class="hljs-operator">/</span>n)?”)； <span class="hljs-comment">/*询问用户是否要更新该学生的年龄*/</span><br>do (scanf(&quot;%c&quot;,<span class="hljs-operator">&amp;</span>yn);)<br>while(yn<span class="hljs-operator">!=</span><span class="hljs-string">&#x27;N&#x27;</span><span class="hljs-operator">&amp;&amp;</span>yn<span class="hljs-operator">!=</span><span class="hljs-string">&#x27;n&#x27;</span><span class="hljs-operator">&amp;&amp;</span>yn<span class="hljs-operator">!=</span><span class="hljs-string">&#x27;Y&#x27;</span> <span class="hljs-operator">&amp;&amp;</span>yn<span class="hljs-operator">!=</span><span class="hljs-string">&#x27;y&#x27;</span>); <br>if (yn<span class="hljs-operator">=</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;y&#x27;</span>llyn<span class="hljs-operator">-</span><span class="hljs-string">&#x27;Y&#x27;</span>)               <span class="hljs-comment">/*如果选择更新操作*/</span><br>printf(&quot;INPUT NEW AGE:&quot;); scanf(&quot;%d&quot;,<span class="hljs-operator">&amp;</span>NEWAGE);  <span class="hljs-comment">/*用户输入新年龄到主变量中*/</span><br><span class="hljs-keyword">EXEC</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">UPDATE</span> Student            <span class="hljs-comment">/*嵌入式SQL 更新语句*/</span><span class="hljs-keyword">SET</span> Sage <span class="hljs-operator">=</span> :NEWAGE<br><span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">CURRENT</span> <span class="hljs-keyword">OF</span> SX；              <span class="hljs-comment">/*对当前游标指向的学生年龄进行更新*/</span><br><span class="hljs-keyword">EXEC</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">CLOSE</span> SX;                 <span class="hljs-comment">/*关闭游标SX，不再和查询结果对应*/</span><br><span class="hljs-keyword">EXEC</span> <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">COMMIT</span> WORK;              <span class="hljs-comment">/*提交更新* /</span><br><span class="hljs-comment">EXEC SQL DISCONNECT TEST；  /*断开数据库连接*/</span><br></code></pre></td></tr></table></figure><h2 id="第十章：数据库恢复技术"><a href="#第十章：数据库恢复技术" class="headerlink" title="第十章：数据库恢复技术"></a>第十章：数据库恢复技术</h2><h3 id="1、事务的概念"><a href="#1、事务的概念" class="headerlink" title="1、事务的概念"></a>1、事务的概念</h3><p>①事务是数据库操作序列，这些操作要么全做，要么全不做，是不可分割的工作单位。一个事务可以是一个sql语句，一组sql语句，或者整个程序。一般来说，一个程序包含多个事务。</p><p>②事务是恢复的基本单位，也是并发控制的基本单位。</p><h3 id="2、定义事务的SQL语句"><a href="#2、定义事务的SQL语句" class="headerlink" title="2、定义事务的SQL语句"></a>2、定义事务的SQL语句</h3><p>开始语句： BEGIN TRANSACTION；</p><p>结束语句： COMMIT； &#x2F;&#x2F;表示提交事务的所有操作</p><p>或者ROLLBACK； &#x2F;&#x2F;表示回滚，即事务运行中发生了某种故障，需要对已完成的操作进行撤销，回滚到事务开始的状态。</p><h3 id="3、事务的4个特性（ACID）：原子性，一致性，隔离性，持续性"><a href="#3、事务的4个特性（ACID）：原子性，一致性，隔离性，持续性" class="headerlink" title="3、事务的4个特性（ACID）：原子性，一致性，隔离性，持续性"></a><font color='red'>3、事务的4个特性（ACID）：原子性，一致性，隔离性，持续性</font></h3><p>①原子性：一个事务要么全做，要么全不做</p><p>②一致性：事务执行的结果必须一致。如果一个事务被迫中断，即事务中的一些操作做了，剩下的还没做，且做了的对数据库造成的修改已经存入物理数据库的话，就会造成数据库处于不一致的状态。因此事务要么全做，要么全不做，一致性和原子性是密切相关的</p><p>③隔离性：一个事务的执行不能被其他事务干扰</p><p>④持续性（也称为永久性）：一个事务一旦提交，它对数据库中数据的改变应该是永久性的</p><h3 id="4、数据库系统的故障种类：事物内部的故障、系统故障、介质故障、计算机病毒"><a href="#4、数据库系统的故障种类：事物内部的故障、系统故障、介质故障、计算机病毒" class="headerlink" title="4、数据库系统的故障种类：事物内部的故障、系统故障、介质故障、计算机病毒"></a>4、数据库系统的故障种类：事物内部的故障、系统故障、介质故障、计算机病毒</h3><p>①事务内部的故障</p><p>事务内部的故障有的是可以通过事务程序本身发现的，有的是非预期的、不能由事务程序处理的</p><p>事务故障的情况下，数据库可能处于不正确的状态。恢复程序要在不影响其他事务运行的情况下，强行回滚该事务，即撤销该事务造成的修改，这类恢复操作称为UNDO （事务撤销）</p><p>②系统故障(软故障)</p><p>系统故障是指造成系统停止运转的任何事件，使得系统要重新启动（例如硬件错误、操作系统故障、DBMS代码错误、系统断电等等）</p><p>系统故障的情况下，在系统重新启动后，恢复子系统除了需要撤销未完成的事务以外，还需要REDO （事务重做）所有已提交的事务</p><p>③介质故障(硬故障)</p><p>外存故障，如磁盘损坏、磁头碰撞、瞬时强磁场干扰等④计算机病毒</p><h3 id="5、数据库恢复技术：数据转储、登记日志文件"><a href="#5、数据库恢复技术：数据转储、登记日志文件" class="headerlink" title="5、数据库恢复技术：数据转储、登记日志文件"></a><font color='red'>5、数据库恢复技术：数据转储、登记日志文件</font></h3><p>恢复机制涉及的两个关键问题：1、如何建立冗余数据；2、如何利用这些冗余数据实施数据库的恢复恢复的基本原理：利用存储在后备副本、日志文件和数据库镜像中的冗余数据来重建数据库</p><p>建立冗余数据的技术包括：</p><p>①数据转储</p><p>数据库管理员定期将整个数据库复制到磁带、磁盘或其他存储介质上保存起来，这些备用数据称为后备副本或后援副本。当数据库遭到破坏后可以将后备副本重新装入，但重装后备副本只能将数据库恢复到存储时的状态，要想恢复到故障发生时的状态，则必须重新运行自转储后的所有更新事务</p><p>数据转储分为：静态转储（在系统中无运行事务时进行）、动态转储（转储期间允许对数据库进行存取或修改）数据转储也可分为：海量转储（每次转储全部数据库）、增量转储（每次只转储上一次转储后更新过的数据）数据转储方法分为：动态海量转储、动态增量转储，静态海量转储、静态增量转储</p><p>②登记日志文件</p><p>日志文件是用来记录事务对数据库的更新操作的文件，有两种格式：以记录为单位、以数据块为单位.</p><ul><li>以记录为单位的日志文件</li></ul><p>需要登记的内容：各个事务的开始（BEGIN TRANSACTION）标记、各个事务的结束（COMMIT&#x2F;ROLLBACK）标记、各个事务的所有更新操作</p><p>日志记录的内容：事务标识（标明哪个是事务）、操作的类型（增删改）、操作对象（记录内部标识）、更新前数据的旧值（对插入而言，此项为空值）、更新后数据的新值（对删除而言，此项为空值）</p><ul><li>以数据块为单位的日志文件</li></ul><p>日志记录的内容：事务标识、被更新的数据块</p><p>日志文件的作用：</p><p>（1）事务故障恢复和系统故障恢复必须用日志文件</p><p>（2）在动态转储方式中必须建立日志文件，后备副本和日志文件结合才能有效恢复数据库</p><p>（3）在静态转储方式中也可以建立日志文件，当数据库毁坏后可以重新装入后备副本把数据库恢复到转储结束时刻的正确状态，然后利用日志文件，把已完成的事务进行重做处理，对故障发生时尚未完成的事务进行撤销处理</p><p>登记日志文件的两条原则：</p><p>（1）登记的次序严格按并发事务执行的时间次序</p><p>（2）必须先写日志文件，后写数据库</p><h3 id="6、不同的数据库系统故障下的恢复策略"><a href="#6、不同的数据库系统故障下的恢复策略" class="headerlink" title="6、不同的数据库系统故障下的恢复策略"></a>6、不同的数据库系统故障下的恢复策略</h3><p>①事务故障的恢复</p><p>由系统自动完成，对用户透明：利用日志文件撤销（UNDO）此事务已对数据库进行的修改</p><p>②系统故障的恢复</p><p>由系统重新启动时自动完成，不需要用户干预：撤销（UNDO）故障发生时未完成的事务，重做（REDO）已完成的事务</p><p>③介质故障的恢复</p><p>最严重的一种故障：重装数据库，重做（REDO）已完成的事务</p><p>*为避免磁盘介质出现故障影响数据库，许多数据库管理系统提供了数据库镜像功能（复制数据实现）</p><h3 id="7、具有检查点的恢复技术"><a href="#7、具有检查点的恢复技术" class="headerlink" title="7、具有检查点的恢复技术"></a>7、具有检查点的恢复技术</h3><p>这种技术在日志文件中增加了检查点记录：检查点之前的事务已经做完了，不需要重做，检查点期间和之后的事务需要重做，可以改善恢复效率</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656857834016-605613ff-a510-4d53-8cf0-28fd98dff622.png" alt="img"></p><h2 id="第十一章：并发控制"><a href="#第十一章：并发控制" class="headerlink" title="第十一章：并发控制"></a>第十一章：并发控制</h2><h3 id="1、并发控制：为了保证事务的隔离性和一致性，数据库管理系统需要对并发操作进行正确调度"><a href="#1、并发控制：为了保证事务的隔离性和一致性，数据库管理系统需要对并发操作进行正确调度" class="headerlink" title="1、并发控制：为了保证事务的隔离性和一致性，数据库管理系统需要对并发操作进行正确调度"></a>1、并发控制：为了保证事务的隔离性和一致性，数据库管理系统需要对并发操作进行正确调度</h3><p>并发控制的主要技术有：封锁、时间截、乐观控制法、多版本并发控制等</p><p>并发操作带来的数据不一致性：</p><p>①丢失修改：两个事务T1和T2 读入同一数据并修改，T2提交的结果破坏了T1提交的结果，导致T1的修改被丢失</p><p>②不可重复读：指事务T1读取数据后，事务T2执行更新操作，使T1无法再现前一次读取结果</p><p>③读脏数据：事务T1修改某一数据后并将其写回磁盘，事务T2读取同一数据后，T1由于某种原因被撤销，这时T1修改过的数据恢复原值，T2读到的数据就与数据库中的数据不一致</p><h3 id="2、并发控制的基本方法：封锁（X锁、S锁）"><a href="#2、并发控制的基本方法：封锁（X锁、S锁）" class="headerlink" title="2、并发控制的基本方法：封锁（X锁、S锁）"></a><font color='red'>2、并发控制的基本方法：封锁（X锁、S锁）</font></h3><p>①排他锁&#x2F;写锁，X锁</p><p>若事务T对数据对象A加上X锁，则只允许事务T读取和修改A</p><p>事务T释放A上的锁之前：其他事务不能读取和修改A，不能再对A加任何类型的锁</p><p>②共享锁&#x2F;读锁,S锁</p><p>若事务T对数据对象A加上S锁，则事务T可以读取A，但不能修改A</p><p>事务T释放A上的S锁之前：其他事务可以读取A，可以对A加S锁，但不能修改A，也不能对A加X锁封锁类型的相容矩阵：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656857882545-dd23ca1e-9513-44fd-9f8e-ec329bda7c43.png" alt="img"></p><h3 id="3、封锁协议：约定何时申请X锁-x2F-S锁、持续时间、何时释放等等"><a href="#3、封锁协议：约定何时申请X锁-x2F-S锁、持续时间、何时释放等等" class="headerlink" title="3、封锁协议：约定何时申请X锁&#x2F;S锁、持续时间、何时释放等等"></a>3、封锁协议：约定何时申请X锁&#x2F;S锁、持续时间、何时释放等等</h3><p>①一级封锁协议</p><p>事务T在修改数据R之前必须先对其加X锁，直到事务结束才释放</p><p>②二级封锁协议</p><p>事务T在修改数据R之前必须先对其加X锁（一级封锁协议），并且其他事务在读取数据之前必须先对其加S锁，读完后即可释放S锁</p><p>③三级封锁协议</p><p>事务T在修改数据R之前必须先对其加X锁（一级封锁协议），并且其他事务在读取数据之前必须先对其加S锁，直到事务结束才释放（二级封锁协议是读完就能释放）</p><p>不同级别的封锁协议和一致性保证：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656857955898-99e19104-0edf-4109-9fd4-6735cc1b59ee.png" alt="img"></p><h3 id="4、活锁和死锁"><a href="#4、活锁和死锁" class="headerlink" title="4、活锁和死锁"></a>4、活锁和死锁</h3><p>①活锁</p><p>事务T1封锁了数据R，事务T2又请求封锁R，于是T2等待；T3也请求封锁R，当T1释放了R上的封锁之后系统首先批准了T3的请求，T2仍然等待； T4 又请求封锁R，当T3释放了R上的封锁之后系统又批准了T4的请求T2有可能永远等待，产生活锁</p><p>避免活锁：采用先来先服务的策略</p><p>②死锁</p><p>事务T1封锁了数据R1， T2封锁了数据R2， T1又请求封锁R2，因T2已封锁了R2，于是T1等待T2释放R2上的锁，接着T2又申请封锁R1，因T1已封锁了R1， T2也只能等待T1，释放R1上的锁，这样T1在等待T2，而T2又在等待T1， T1和T2两个事务永远不能结束，形成死锁</p><p>解决活锁的方法：</p><p>(1)死锁的预防</p><p>1.一次封锁法：每个事务必须一次将所有要使用的数据全部加锁，否则就不能继续执行</p><p>2.顺序封锁法：预先对数据对象规定一个封锁顺序，所有事务按这个顺序实施封锁</p><p>（2）死锁的诊断与解除</p><p>诊断：1.超时法：如果一个事务的等待时间超过了规定的时限，就认为发生了死锁</p><p>​     2.等待图法：构建事务等待图（有向图：节点表示运行的事务，边表示事务等待的情</p><p>​      况），存在回路即死锁</p><p> 解除：选择一个处理死锁代价最小的事务，将其撤销（UNDO），释放此事务持有的所有的锁</p><h3 id="5、可串行化调度：多个事务并发执行的结果-x3D-这些事务按某种次序串行执行的结果"><a href="#5、可串行化调度：多个事务并发执行的结果-x3D-这些事务按某种次序串行执行的结果" class="headerlink" title="5、可串行化调度：多个事务并发执行的结果&#x3D;这些事务按某种次序串行执行的结果"></a><font color='red'>5、可串行化调度：多个事务并发执行的结果&#x3D;这些事务按某种次序串行执行的结果</font></h3><p>一个给定的并发调度，当且仅当它是可串行化的，才认为是正确调度。例如现有事务T1和T2，若T1与T2的并发执行结果与先T1后T2相同，或者与先T2后T1相同，那么这个调度就是正确的，否则就是错误的</p><h3 id="6、冲突可串行化调度"><a href="#6、冲突可串行化调度" class="headerlink" title="6、冲突可串行化调度"></a>6、冲突可串行化调度</h3><p>冲突操作：指不同的事务对用一个数据的读写操作（读和写）和写写操作（写和写）</p><p>不同事务的冲突操作和同一事物的两个操作是不能交换的，如果发生交换，自然会发生错误。基于此，如果调度能保证冲突操作的次序不变，就称为冲突可串行化的调度。冲突可串行化调度一定是可串行化调度。（但是注意，可串行化调度也有可能不满足冲突可串行化）</p><h3 id="7、两段锁协议（2PL）：所有事务必须分两个阶段对数据项加锁和解锁"><a href="#7、两段锁协议（2PL）：所有事务必须分两个阶段对数据项加锁和解锁" class="headerlink" title="7、两段锁协议（2PL）：所有事务必须分两个阶段对数据项加锁和解锁"></a><font color='red'>7、两段锁协议（2PL）：所有事务必须分两个阶段对数据项加锁和解锁</font></h3><p>①获得封锁（扩展阶段）：在对任何数据进行读、写操作之前，事务首先要获得对该数据的封锁</p><p>②释放封锁（收缩阶段）：在释放一个封锁之后，事务不再申请和获得任何其他封锁</p><p>若并发执行的所有事务均遵守两段锁协议，则对这些事物的任何并发调度策略都是可串行化的</p>]]></content>
    
    
    <categories>
      
      <category>经验分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面试准备第二天-数据库复习1</title>
    <link href="/2022/07/02/10%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%E7%AC%AC%E4%BA%8C%E5%A4%A9-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A01/"/>
    <url>/2022/07/02/10%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%E7%AC%AC%E4%BA%8C%E5%A4%A9-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A01/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><blockquote><p>今天是面试准备的第二天，复习一下SQL语句，参考资料来自up主：<a href="https://space.bilibili.com/949043">https://space.bilibili.com/949043</a></p></blockquote><h1 id="CREATE-x2F-DROP-x2F-ALTER-语句"><a href="#CREATE-x2F-DROP-x2F-ALTER-语句" class="headerlink" title="CREATE&#x2F;DROP&#x2F;ALTER 语句"></a><font color=red>CREATE&#x2F;DROP&#x2F;ALTER 语句</font></h1><h2 id="【模式】"><a href="#【模式】" class="headerlink" title="【模式】"></a>【模式】</h2><h3 id="定义模式-CREATE-SCHEMA"><a href="#定义模式-CREATE-SCHEMA" class="headerlink" title="定义模式 CREATE SCHEMA"></a><mark>定义模式 CREATE SCHEMA</mark></h3><p>CREATE SCHEMA 模式名 AUTHORIZATION 用户名;</p><p>eg:为用户WANG定义一个S-T模式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> SCHEMA &quot;S-T&quot; <span class="hljs-keyword">AUTHORIZATION</span> WANG; <br></code></pre></td></tr></table></figure><p>eg.为用户WANG定义一个模式</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> SCHEMA <span class="hljs-keyword">AUTHORIZATION</span> WANG； <span class="hljs-operator">/</span><span class="hljs-operator">/</span>未定义模式名的情况下，默认模式名为用户名<br></code></pre></td></tr></table></figure><h3 id="删除模式-DROP-SCHEMA-gt"><a href="#删除模式-DROP-SCHEMA-gt" class="headerlink" title="删除模式 DROP SCHEMA&gt;"></a><mark>删除模式 DROP SCHEMA</mark>&gt;</h3><p>DROP SCHEMA 模式名 CASCADE； &#x2F;&#x2F;级联：把该模式中所有的表、视图之类的一起删除</p><p>DROP SCHEMA 模式名 RESTRICT； &#x2F;&#x2F;限制：若该模式下已定义了表或者视图等等，则拒绝执行删除语句</p><h2 id="【基本表】"><a href="#【基本表】" class="headerlink" title="【基本表】"></a>【基本表】</h2><h3 id="定义基本表-CREATE-TABLE"><a href="#定义基本表-CREATE-TABLE" class="headerlink" title="定义基本表 CREATE TABLE"></a><mark>定义基本表 CREATE TABLE</mark></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> 表名<br>（列名<span class="hljs-number">1</span> 数据类型 列级完整性约束条件，<span class="hljs-operator">/</span><span class="hljs-operator">/</span>如没有列级完整约束条件，可以不写<br>    列名n数据类型 列级完整性约束条件，<br>    表级完整性约束条件<span class="hljs-number">1</span>，<br>    表级完整性约束条件n<br>    );<br></code></pre></td></tr></table></figure><h4 id="（1）数据类型"><a href="#（1）数据类型" class="headerlink" title="（1）数据类型"></a>（1）数据类型</h4><table><thead><tr><th>CHAR(n)</th><th>长度为n的字符型</th></tr></thead><tbody><tr><td>VARCHAR(n)</td><td>最大长度为n的变长字符型</td></tr><tr><td>NUMBER(n)</td><td>长度为n的数字型</td></tr><tr><td>INT</td><td>长整型（4B）</td></tr><tr><td>SMALLINT</td><td>短整型（2B）</td></tr><tr><td>BIGINT</td><td>大整型（8B）</td></tr><tr><td>FLOAT(n)</td><td>精度至少为n位数字的浮点数</td></tr><tr><td>DATE</td><td>日期，格式为YYYY—MM—DD</td></tr><tr><td>TIME</td><td>时间，格式为HH：MM：SS</td></tr></tbody></table><h4 id="（2）列级完整性约束条件"><a href="#（2）列级完整性约束条件" class="headerlink" title="（2）列级完整性约束条件"></a>（2）列级完整性约束条件</h4><p>​PRIMARY KEY &#x2F;&#x2F;主码：当只有一个主码时，可直接在对应的属性列标注</p><p>​NOT NULL &#x2F;&#x2F;非空：表示该属性列不能取空值</p><p>​UNIQUE &#x2F;&#x2F;唯一值：表示该属性列只能取唯一值</p><p>​CHECK（条件） &#x2F;&#x2F;检查：检查该列是否满足某个条件，如CHECK（某属性&gt;20）</p><h4 id="（3）表级完整性约束条件"><a href="#（3）表级完整性约束条件" class="headerlink" title="（3）表级完整性约束条件"></a>（3）表级完整性约束条件</h4><p>​PRIMARY KEY（列名 1， 列名n） &#x2F;&#x2F;实体完整性：当主码由多个属性构成时，必须作为表级完整性进行定义FOREIGN KEY（列名 1） REFERENCES 被参照表（列名1） &#x2F;&#x2F;参照完整性</p><p>​eg:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> TAB1 <br>(Sno <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">10</span>), Cno NUMBER(<span class="hljs-number">10</span>), <br> Grade <span class="hljs-type">INT</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br> <span class="hljs-keyword">PRIMARY</span> KEY(Sno, Cno),<br> <span class="hljs-keyword">FOREIGN</span> KEY(Sno) <span class="hljs-keyword">REFERENCES</span> TAB2(Sno)<br>);<br></code></pre></td></tr></table></figure><h3 id="在模式中定义表"><a href="#在模式中定义表" class="headerlink" title="在模式中定义表"></a><mark>在模式中定义表</mark></h3><p>一个模式包含多种基本表，有三种方式在模式中定义基本表。</p><h4 id="（1）创建表时指出模式"><a href="#（1）创建表时指出模式" class="headerlink" title="（1）创建表时指出模式"></a>（1）创建表时指出模式</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> 模式名.表名<br>(列定义语句,<br>完整性约束语句<br>);<br></code></pre></td></tr></table></figure><h4 id="（2）创建模式时直接定义表"><a href="#（2）创建模式时直接定义表" class="headerlink" title="（2）创建模式时直接定义表"></a>（2）创建模式时直接定义表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> SCHEMA 模式名 <span class="hljs-keyword">AUTHORIZATION</span> 用户名<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> 表名<br>（列定义语句,<br>完整性约束语句）;<br></code></pre></td></tr></table></figure><h4 id="（3）设置所属的模式"><a href="#（3）设置所属的模式" class="headerlink" title="（3）设置所属的模式"></a>（3）设置所属的模式</h4><p>这样在创建表的时候不用给出模式名</p><h3 id="修改基本表-ALTER-TABLE"><a href="#修改基本表-ALTER-TABLE" class="headerlink" title="修改基本表 ALTER TABLE"></a><mark>修改基本表 ALTER TABLE</mark></h3><h4 id="（1）增加新的属性列"><a href="#（1）增加新的属性列" class="headerlink" title="（1）增加新的属性列"></a>（1）增加新的属性列</h4><p>​ALTER TABLE 表名 ADD新列名 数据类型 完整性约束条件；</p><p>​eg.向SC表中增加时间列，数据类型为日期型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> SC <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">COLUMN</span> <span class="hljs-type">Time</span> <span class="hljs-type">DATE</span>; <br></code></pre></td></tr></table></figure><h4 id="（2）增加列级完整性约束条件"><a href="#（2）增加列级完整性约束条件" class="headerlink" title="（2）增加列级完整性约束条件"></a>（2）增加列级完整性约束条件</h4><p>​ALTER TABLE 表名 ADD 列级完整性约束条件；</p><p>​eg.向SC表中增加Cname列必须取唯一值的约束条件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> SC <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">UNIQUE</span>(Cname);<br></code></pre></td></tr></table></figure><h4 id="（3）增加表级完整性约束条件"><a href="#（3）增加表级完整性约束条件" class="headerlink" title="（3）增加表级完整性约束条件"></a>（3）增加表级完整性约束条件</h4><p>​ALTER TABLE 表名 ADD 表级完整性约束条件；</p><p>​eg.向SC表中增加Cno为外码，参照表是Student表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> SC <span class="hljs-keyword">ADD</span> <span class="hljs-keyword">FOREIGN</span> KEY(Cno) <span class="hljs-keyword">REFERENCES</span> Student(Cno); <br></code></pre></td></tr></table></figure><h4 id="（4）删除列"><a href="#（4）删除列" class="headerlink" title="（4）删除列"></a>（4）删除列</h4><p>​ALTER TABLE 表名DROP 列名CASCADE； &#x2F;&#x2F;级联：引用了该列的其他对象（例如视图）一起删除ALTER TABLE 表名 DROP 列名 RESTRICT； &#x2F;&#x2F;限制：若该列被其他对象引用，则拒绝删除</p><h4 id="（5）删除指定的完整性约束条件"><a href="#（5）删除指定的完整性约束条件" class="headerlink" title="（5）删除指定的完整性约束条件"></a>（5）删除指定的完整性约束条件</h4><p>​ALTER TABLE 表名 DROP CONSTRAINT 完整性约束名 CASCADE； &#x2F;&#x2F;级联</p><p>​ALTER TABLE 表名 DROP CONSTRAINT 完整性约束名 RESTRICT； &#x2F;&#x2F;限制</p><h4 id="（6）修改列"><a href="#（6）修改列" class="headerlink" title="（6）修改列"></a>（6）修改列</h4><p>​ALTER TABLE 表名 ALTER COLUMN 列名 数据类型；</p><p>​eg.将SC表中原有的Sage（假设是字符型）修改为整型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> SC <span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">COLUMN</span> Sage <span class="hljs-type">INT</span>; <br></code></pre></td></tr></table></figure><h3 id="删除基本表DROP-TABLE"><a href="#删除基本表DROP-TABLE" class="headerlink" title="删除基本表DROP TABLE"></a><mark>删除基本表DROP TABLE</mark></h3><p>（1） DROP TABLE 表名 CASCADE； &#x2F;&#x2F;级联：删除该表时，相关的依赖对象，例如视图，都会被删除</p><p>（2） DROP TALBE 表名 RESTRICT； &#x2F;&#x2F;限制：删除该表时，若被其他表的约束所引用（例如其他表的   CHECK、FOREIGN KEY 等等），或者有视图等等，都不能被删除</p><h2 id="【索引】"><a href="#【索引】" class="headerlink" title="【索引】"></a>【索引】</h2><h3 id="建立索引-CREATE-UNIQUE-x2F-CLUSTER-INDEX"><a href="#建立索引-CREATE-UNIQUE-x2F-CLUSTER-INDEX" class="headerlink" title="建立索引 CREATE UNIQUE&#x2F;CLUSTER INDEX "></a><mark>建立索引 CREATE UNIQUE&#x2F;CLUSTER INDEX </mark></h3><h4 id="（1）建立唯一索引"><a href="#（1）建立唯一索引" class="headerlink" title="（1）建立唯一索引"></a>（1）建立唯一索引</h4><p>​CREATE UNIQUE INDEX 索引名 ON 表名（列名1次序，列名n次序）；</p><p>​eg.为SC表按学号升序和课程号降序建立唯一索引</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">UNIQUE</span> INDEX SCno <span class="hljs-keyword">ON</span> SC(Sno <span class="hljs-keyword">ASC</span>, Cno <span class="hljs-keyword">DESC</span>); <br></code></pre></td></tr></table></figure><h4 id="（2）建立聚簇索引"><a href="#（2）建立聚簇索引" class="headerlink" title="（2）建立聚簇索引"></a>（2）建立聚簇索引</h4><p>​CREATE CLUSTER INDEX 索引名 ON 表名（列名1次序，列名n次序）；</p><h3 id="修改索引（重命名）-ALTER-INDEX"><a href="#修改索引（重命名）-ALTER-INDEX" class="headerlink" title="修改索引（重命名） ALTER INDEX"></a><mark>修改索引（重命名） ALTER INDEX</mark></h3><p>​ALTER INDEX 旧索引名 RENAME TO 新索引名;</p><p>​eg.将SC表的SCno索引名改为 SCSno</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> INDEX SCno RENAME <span class="hljs-keyword">TO</span> SCSno;<br></code></pre></td></tr></table></figure><h3 id="删除索引DROP-INDEX"><a href="#删除索引DROP-INDEX" class="headerlink" title="删除索引DROP INDEX"></a><mark>删除索引DROP INDEX</mark></h3><p>​DROP INDEX 索引名:</p><p>​eg.删除SC表的 SCSno索引；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">DROP</span> INDEX SCSno;<br></code></pre></td></tr></table></figure><h1 id="SELECT-语句"><a href="#SELECT-语句" class="headerlink" title="SELECT 语句"></a><font color=red>SELECT 语句</font></h1><h3 id="一般格式"><a href="#一般格式" class="headerlink" title="一般格式"></a><mark>一般格式</mark></h3><p>​SELECT DISTINCT&#x2F;ALL 目标列表达式 &#x2F;&#x2F;要显示的属性列</p><p>​FROM 表名&#x2F;视图名&#x2F;&#x2F;查询的对象</p><p>​WHERE 条件表达式&#x2F;&#x2F;查询条件</p><p>​GROUP BY 列名 </p><p>​HAVING 条件表达式&#x2F;&#x2F;查询结果分组</p><p>​ORDER BY 列名 次序；&#x2F;&#x2F;最终查询结果排序</p><h2 id="【基本查询】"><a href="#【基本查询】" class="headerlink" title="【基本查询】"></a>【基本查询】</h2><h3 id="SELECT-目标列表达式"><a href="#SELECT-目标列表达式" class="headerlink" title="SELECT 目标列表达式"></a><mark>SELECT 目标列表达式</mark></h3><h4 id="（1）查询指定列：SELECT列名1，列名n"><a href="#（1）查询指定列：SELECT列名1，列名n" class="headerlink" title="（1）查询指定列：SELECT列名1，列名n"></a>（1）查询指定列：SELECT列名1，列名n</h4><p>​eg.查询TAB表的X属性列和Y属性列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> X, Y <span class="hljs-keyword">FROM</span> TAB；<br></code></pre></td></tr></table></figure><h4 id="（2）查询全部列：-SELECT"><a href="#（2）查询全部列：-SELECT" class="headerlink" title="（2）查询全部列： SELECT *"></a>（2）查询全部列： SELECT *</h4><p>​eg.查询TAB表的全部记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> TAB；<br></code></pre></td></tr></table></figure><h4 id="（3）查询计算后的值：-SELECT表达式-x2F-x2F-可以是算术表达式、字符串常量、函数等等"><a href="#（3）查询计算后的值：-SELECT表达式-x2F-x2F-可以是算术表达式、字符串常量、函数等等" class="headerlink" title="（3）查询计算后的值： SELECT表达式&#x2F;&#x2F;可以是算术表达式、字符串常量、函数等等"></a>（3）查询计算后的值： SELECT表达式&#x2F;&#x2F;可以是算术表达式、字符串常量、函数等等</h4><p>​eg.查询TAB表（假定有一项属性age 记录人们的年龄）中人们的出生日期</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-number">2022</span><span class="hljs-operator">-</span>age <span class="hljs-keyword">FROM</span> TAB；<br></code></pre></td></tr></table></figure><h4 id="（4）改变查询结果的列标题：SELECT列名-别名"><a href="#（4）改变查询结果的列标题：SELECT列名-别名" class="headerlink" title="（4）改变查询结果的列标题：SELECT列名 别名"></a>（4）改变查询结果的列标题：SELECT列名 别名</h4><p>​eg.查询TAB表中的X和Y属性列，并在结果中用别名x1和y1显示</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Xx1, Y y1<br><span class="hljs-keyword">FROM</span> TAB；<br></code></pre></td></tr></table></figure><h4 id="（5）取消查询结果中的重复行：SELECT-DISTINCT-列名"><a href="#（5）取消查询结果中的重复行：SELECT-DISTINCT-列名" class="headerlink" title="（5）取消查询结果中的重复行：SELECT DISTINCT 列名"></a>（5）取消查询结果中的重复行：SELECT DISTINCT 列名</h4><p>​eg.查询TAB表中的X属性，并去掉结果中的重复列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> X， <span class="hljs-operator">/</span><span class="hljs-operator">/</span>如果没有用 <span class="hljs-keyword">DISTINCT</span>， 则默认为 <span class="hljs-keyword">ALL</span><br><span class="hljs-keyword">FROM</span> TAB；<br></code></pre></td></tr></table></figure><h4 id="（6）聚集函数"><a href="#（6）聚集函数" class="headerlink" title="（6）聚集函数"></a>（6）聚集函数</h4><p>​<strong>注意：</strong>当聚集函数遇到空值时，都跳过空值，只处理非空值</p><p>​    聚集函数只能用于SELECT语句和GROUP BY中的HAVING 子句（见后部分）</p><p><strong>①统计元组的个数</strong></p><p>​COUNT （*） &#x2F;&#x2F;某个元组的一个或部分取空值时，不影响统计结果</p><p>​eg.查询Student 表中学生的总数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">FROM</span> SC；<br></code></pre></td></tr></table></figure><p><strong>②统计某一列值的个数COUNT (DISTINCT&#x2F;ALL 列名)</strong></p><p>​如果指定DISTINCT，则表示计算时要取消重复值。若不指定，则默认为ALL，表示不取消重复值</p><p><strong>③计算某一列值的平均数（该列必须为数值型）</strong></p><p>​AVG （DISTINCT&#x2F;ALL 列名）</p><p>​eg.计算SC表中的平均成绩（Grade）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">AVG</span>(Grade)<br><span class="hljs-keyword">FROM</span> SC；<br></code></pre></td></tr></table></figure><p><strong>④计算某一列值的总和（该列必须为数值型）</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">SUM （<span class="hljs-keyword">DISTINCT</span><span class="hljs-operator">/</span><span class="hljs-keyword">ALL</span> 列名）<br></code></pre></td></tr></table></figure><p><strong>⑤计算某一列值的最大值&#x2F;最小值</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">MAX<span class="hljs-operator">/</span><span class="hljs-built_in">MIN</span> (<span class="hljs-keyword">DISTINCT</span><span class="hljs-operator">/</span><span class="hljs-keyword">ALL</span> 列名) <br></code></pre></td></tr></table></figure><h3 id="WHERE-条件表达式"><a href="#WHERE-条件表达式" class="headerlink" title="WHERE 条件表达式"></a><mark>WHERE 条件表达式</mark></h3><h4 id="（1）比较大小"><a href="#（1）比较大小" class="headerlink" title="（1）比较大小"></a>（1）比较大小</h4><p>常用比较运算符：&#x3D; &gt; &lt; &gt;&#x3D; &lt;&#x3D;   !&#x3D;(或者&lt;&gt;)   !&gt;  !&lt;  </p><p>eg.查询SC表中全体计算机学生的姓名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sname <br><span class="hljs-keyword">FROM</span> SC<br><span class="hljs-keyword">WHERE</span> Sdept<span class="hljs-operator">=</span><span class="hljs-string">&#x27;cs&#x27;</span>;<br></code></pre></td></tr></table></figure><p>eg.查询TAB表中X&gt;20的YSELECT Y</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">FROM</span> TAB<br><span class="hljs-keyword">WHERE</span> X<span class="hljs-operator">&gt;</span><span class="hljs-number">20</span>; <br></code></pre></td></tr></table></figure><h4 id="（2）确定范围"><a href="#（2）确定范围" class="headerlink" title="（2）确定范围"></a>（2）确定范围</h4><p><strong>WHERE 列名 BETWEEN 最小值 AND 最大值；</strong></p><p>eg.查询TAB表上 age在20到30 之间的人的name和 sex</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> name, sex<br><span class="hljs-keyword">FROM</span> TAB<br><span class="hljs-keyword">WHERE</span> age <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">20</span> <span class="hljs-keyword">AND</span> <span class="hljs-number">30</span>;<br></code></pre></td></tr></table></figure><p><strong>WHERE 列名 NOT BETWEEN 最小值 AND 最大值；</strong></p><p>eg.查询TAB表上age不在20到30之间的人的name 和sex</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> name, sex<br><span class="hljs-keyword">FROM</span> TAB<br><span class="hljs-keyword">WHERE</span> age <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">20</span> <span class="hljs-keyword">AND</span> <span class="hljs-number">30</span>; <br></code></pre></td></tr></table></figure><h4 id="（3）-确定集合"><a href="#（3）-确定集合" class="headerlink" title="（3） 确定集合"></a>（3） 确定集合</h4><p><strong>WHERE 列名 IN （’列名1’， ‘列名n’）；</strong></p><p>eg. 在SC表的Sdept列中查找属于计算机专业（CS）、数学专业（MA）、信息专业（IS）的学生姓名（S_name）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> S_name<br><span class="hljs-keyword">FROM</span> SC<br><span class="hljs-keyword">WHERE</span> Sdept <span class="hljs-keyword">IN</span> (<span class="hljs-string">&#x27;CS&#x27;</span>, <span class="hljs-string">&#x27;MA&#x27;</span>, <span class="hljs-string">&#x27;IS&#x27;</span>);<br><span class="hljs-keyword">WHERE</span> 列名 <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> （<span class="hljs-string">&#x27;列名1&#x27;</span>， <span class="hljs-string">&#x27;列名n&#x27;</span>）；<br></code></pre></td></tr></table></figure><p><strong>WHERE 列名 NOT IN （’列名1’， ‘列名n’）；</strong></p><p>eg. 在SC表的Sdept列中查找既不是计算机专业（CS）也不是数学专业（MA）的学生姓名（S_name）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> S_name<br><span class="hljs-keyword">FROM</span> SC<br><span class="hljs-keyword">WHERE</span> Sdept <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">&#x27;CS&#x27;</span>, <span class="hljs-string">&#x27;MA&#x27;</span>); <br></code></pre></td></tr></table></figure><h4 id="4-字符匹配"><a href="#4-字符匹配" class="headerlink" title="(4)字符匹配"></a>(4)字符匹配</h4><p>通配符：写在字符串当中，用来求一些有特殊条件的字符串</p><p><strong>% 表示任意长度（可以为0）的字符串。如a%b，表示以a开头，b结尾的任意长度字符串</strong></p><p><strong>_表示单个字符。如a_b，表示以a开头b结尾的长度为3的字符串</strong></p><p>注意：在ASCII 码表中，一个汉字的长度为2</p><p>转义字符：字符串中紧跟在转义字符后的字符”%或_’不再具有通配符的含义设置转义字符的语句为ESCAPE’符号’，该符号可以自己设置，一般采用’&#39;。例如需要查找的字符串为’50%’，那么应写’50%‘，否则会查找以50开头的不定长字符串</p><p><strong>WHERE 列名 LIKE ‘字符串’ ESCAPE ‘V’；</strong></p><p>eg. 在Student表中查找所有姓刘且全名为3个汉字的学生的Sname，Sno 和Ssex</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sname, Sno, Ssex<br><span class="hljs-keyword">FROM</span> Student<br><span class="hljs-keyword">WHERE</span> Sname <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;_-&#x27;</span>;<br></code></pre></td></tr></table></figure><p>eg. 在SC表中查找课程名（Cname）为DB_Design的课程号（Cno）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Cno<br><span class="hljs-keyword">FROM</span> SC<br><span class="hljs-keyword">WHERE</span> Cname <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;DBY Design&#x27;</span> <span class="hljs-keyword">ESCAPE</span> V<span class="hljs-string">&#x27;; </span><br><span class="hljs-string">WHERE 列名 NOT LIKE &quot;符&#x27;</span> <span class="hljs-keyword">ESCAPE</span> <span class="hljs-string">&#x27;&#x27;</span>；<br></code></pre></td></tr></table></figure><p>eg.在Student表中查找所有不姓刘的学生的Sname</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sname<br><span class="hljs-keyword">FROM</span> Student<br><span class="hljs-keyword">WHERE</span> Sname <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;刘%&#x27;</span>; <br></code></pre></td></tr></table></figure><h4 id="5-空值查询"><a href="#5-空值查询" class="headerlink" title="(5)空值查询"></a>(5)空值查询</h4><p><strong>WHERE 列名 IS NULL；</strong></p><p>eg. 在SC表中查询缺少成绩（Grade）的学生的姓名（Sname）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sname<br><span class="hljs-keyword">FROM</span> SC<br><span class="hljs-keyword">WHERE</span> Grade <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span>;<br><span class="hljs-keyword">WHERE</span> 列名 <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>；<br></code></pre></td></tr></table></figure><p>eg.查询全部有成绩（Grade）的学生的姓名（Sname）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sname<br><span class="hljs-keyword">FROM</span> SC<br><span class="hljs-keyword">WHERE</span> Grade <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>; <br></code></pre></td></tr></table></figure><h4 id="（6）多重条件查询"><a href="#（6）多重条件查询" class="headerlink" title="（6）多重条件查询"></a>（6）多重条件查询</h4><p>WHERE 条件表达式AND 条件表达式；</p><p>WHERE条件表达式 OR 条件表达式；</p><p>可以用AND 或者OR将上述各类条件表达式组合在一起。其中，AND的优先级大于OR</p><h3 id="GROUP-BY-列名-HAVING-条件表达式"><a href="#GROUP-BY-列名-HAVING-条件表达式" class="headerlink" title="GROUP BY 列名 HAVING 条件表达式"></a><mark>GROUP BY 列名 HAVING 条件表达式</mark></h3><p>用于将查询结果按某一列或多列的值分组，值相等的为一组</p><p>目的是细化聚集函数的作用对象，分组后聚集函数将作用于每一个组，每一组都有一个函数值</p><h4 id="（1）-GROUP-BY-列名"><a href="#（1）-GROUP-BY-列名" class="headerlink" title="（1） GROUP BY 列名"></a>（1） GROUP BY 列名</h4><p>eg.求SC表中，各个课程号（Cno）下相应的选课人数（Sno）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Cno, <span class="hljs-built_in">COUNT</span>(Sno)<br><span class="hljs-keyword">FROM</span> SC<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> Cno； <span class="hljs-operator">/</span><span class="hljs-operator">/</span>表示具有相同Cno 值的元组为一组，对每一组用COUNT进行计算，求得该组的人数<br></code></pre></td></tr></table></figure><h4 id="（2）-GROUP-BY-列名-HAVING-选条件"><a href="#（2）-GROUP-BY-列名-HAVING-选条件" class="headerlink" title="（2） GROUP BY 列名 HAVING 选条件"></a>（2） GROUP BY 列名 HAVING 选条件</h4><p>与WHERE 的区别：</p><ul><li>HAVING 用于从组中选择满足条件的组</li><li>WHERE 用于从基本表或视图中选择满足条件的元组（注意： WHERE子句不可以接聚集函数）</li></ul><p>eg. 在SC表中查询平均成绩（Grade）大于等于90的学生学号（Sno）和平均成绩（Grade）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sno, Grade<br><span class="hljs-keyword">FROM</span> SC<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> Sno<br><span class="hljs-keyword">HAVING</span> <span class="hljs-built_in">AVG</span>(Grade)<span class="hljs-operator">&gt;</span> <span class="hljs-operator">=</span><span class="hljs-number">90</span>; <br></code></pre></td></tr></table></figure><h3 id="ORDER-BY-次序"><a href="#ORDER-BY-次序" class="headerlink" title="ORDER BY 次序"></a><mark>ORDER BY 次序</mark></h3><p><strong>ORDER BY 列名1 列名n ASC</strong></p><p>对查询结果按照一个或多个属性列的升序排列（若不表明次序，默认为升序）</p><p><strong>ORDER BY 列名1 列名n DESC</strong></p><p>对查询结果按照一个或多个属性列的降序排列</p><p>eg.查序SC表中Cno为3的学生的Sno和Grade，结果按照Grade的降序排列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sno, Grade<br><span class="hljs-keyword">FROM</span> SCWHERE Cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;3&#x27;</span> <span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> Grade <span class="hljs-keyword">DESC</span>;<br></code></pre></td></tr></table></figure><h2 id="【连接查询】"><a href="#【连接查询】" class="headerlink" title="【连接查询】"></a>【连接查询】</h2><h3 id="两表连接查询"><a href="#两表连接查询" class="headerlink" title="两表连接查询"></a><mark>两表连接查询</mark></h3><p><strong>WHERE 表名1.列名1比较运算符 表名2.列名2；&#x2F;&#x2F;当列名在参与连接的各表中唯一时，可省去表名前缀</strong></p><p>eg.查询Student 表中学生的情况以及SC表中他们对应的选课情况，要求在一个查询结果中展示</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Student.<span class="hljs-operator">*</span>， SC.<span class="hljs-operator">*</span> <span class="hljs-operator">/</span><span class="hljs-operator">/</span>若两个表中有相同名的属性列，自然连接<span class="hljs-keyword">FROM</span> Student, SC<br><span class="hljs-keyword">WHERE</span> Student.Sno <span class="hljs-operator">=</span> SC.Sno； <span class="hljs-operator">/</span><span class="hljs-operator">/</span>用 Sno作为连接字段，将两个表连接在一起<br><span class="hljs-comment">/*若想获得自然连接，则列举全部属性列，并去掉一个相同的属性列即可。可以将上述SELECT语句改写如下*/</span><br><span class="hljs-keyword">SELECT</span> Student.Sno, Sname, Ssex, Sage, Sdept, Cno, Grade<br></code></pre></td></tr></table></figure><p>eg. 在Student表和SC表中，查询选修了2号课程（Cno&#x3D;’2’）且成绩（Grade）在90分以上的学生学号（Sno）和姓名（Sname）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Student.Sno， Sname<br><span class="hljs-keyword">FROM</span> Student, SC<br><span class="hljs-keyword">WHERE</span> Student.Sno<span class="hljs-operator">=</span>SC.Sno <span class="hljs-keyword">AND</span> SC.Cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;2&#x27;</span> <span class="hljs-keyword">AND</span> SC.Grade <span class="hljs-operator">&gt;</span><span class="hljs-number">90</span>； <span class="hljs-operator">/</span><span class="hljs-operator">/</span> <span class="hljs-keyword">AND</span> 用作多重条件<br></code></pre></td></tr></table></figure><h3 id="单表连接查询"><a href="#单表连接查询" class="headerlink" title="单表连接查询"></a><mark>单表连接查询</mark></h3><p>eg.在Course 表中查询先修课的先修课（即间接先修课），其中课程号为Cno，先修课程号为Cpno</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> FIRST.Cno, SECOND.Cpno<br><span class="hljs-operator">/</span><span class="hljs-operator">/</span>利用下述别名进行选择<br><span class="hljs-keyword">FROM</span> Course <span class="hljs-keyword">FIRST</span>， Course <span class="hljs-keyword">SECOND</span> <span class="hljs-operator">/</span><span class="hljs-operator">/</span>为这个表取两个别名<br><span class="hljs-keyword">WHERE</span> FIRST.Cpno<span class="hljs-operator">=</span>SECOND.Cno;<br></code></pre></td></tr></table></figure><h3 id="外连接查询"><a href="#外连接查询" class="headerlink" title="外连接查询"></a><mark>外连接查询</mark></h3><p>将悬浮元组保留在结果关系中，没有属性值的位置填上NULL</p><h4 id="1-左外连接查询"><a href="#1-左外连接查询" class="headerlink" title="(1)左外连接查询"></a>(1)左外连接查询</h4><p><strong>FROM 表名1 LEFT OUTER JOIN 表名2 ON (连接条件); &#x2F;   &#x2F;也可以将ON 换成 USING，去掉结果中的重复值</strong></p><h4 id="2-右外连接查询"><a href="#2-右外连接查询" class="headerlink" title="(2)右外连接查询"></a>(2)右外连接查询</h4><p><strong>FROM 表名1 RIGHT OUTER JOIN 表名 2 ON (连接条件);</strong></p><p>eg. 以Student表为主体列，排出每个学生的基本情况和选课情况（SC表中），没选课的学生依旧保留在结果中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Student.Sno, Sname, Ssex, Sage, Sdept, Cno, Grade<br><span class="hljs-keyword">FROM</span> Student <span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">OUTER</span> <span class="hljs-keyword">JOIN</span> SC <span class="hljs-keyword">ON</span> (Student.Sno<span class="hljs-operator">=</span>SC.Sno); <span class="hljs-operator">/</span><span class="hljs-operator">/</span>左外连接 <br></code></pre></td></tr></table></figure><h3 id="多表连接查询"><a href="#多表连接查询" class="headerlink" title="多表连接查询"></a><mark>多表连接查询</mark></h3><p><strong>WHERE 表名1.列名1&#x3D;表名2.列名2 AND表名2.列名2&#x3D;表名3.列名3</strong></p><p>多表连接一般是先进行两个表的连接操作，再将其连接结果与第三个表执行连接</p><p>eg. A Student 表、SC表、Course表中查询每个学生的学号（Sno）、姓名（Sname）、课程（Cname）和成绩（Grade）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Student.Sno, Sname, Cname, Grade <br><span class="hljs-keyword">FROM</span> Student, SC, Course<br><span class="hljs-keyword">WHERE</span> Student.Sno<span class="hljs-operator">=</span>SC.Sno <span class="hljs-keyword">AND</span> SC.Cno<span class="hljs-operator">=</span>Course.Cno;<br></code></pre></td></tr></table></figure><h2 id="【嵌套查询】"><a href="#【嵌套查询】" class="headerlink" title="【嵌套查询】"></a>【嵌套查询】</h2><p>查询块： SELECT—FROM—WHERE</p><p>嵌套查询：将一个查询块嵌套在另一个查询块的WHERE 子句或者HAVING子句</p><p>​     其中，上层的查询块称为外层查询&#x2F;父查询；下层的查询块称为内层查询&#x2F;子查询</p><p><strong>注意</strong>：子查询的SELECT 语句中不能使用ORDER BY子句，ORDER BY子句只能对最终查询结果排序</p><h2 id="IN-子查询"><a href="#IN-子查询" class="headerlink" title="IN-子查询"></a><mark>IN-子查询</mark></h2><p>父查询与子查询之间用IN连接</p><p><strong>WHERE 列名 IN (子查询)；</strong></p><p>eg.查找与刘晨同一个专业的同学</p><h4 id="①"><a href="#①" class="headerlink" title="①"></a>①</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sdept<br><span class="hljs-keyword">FROM</span> Student<br><span class="hljs-keyword">WHERE</span> Sname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;刘晨;</span><br></code></pre></td></tr></table></figure><p>查找结果为刘晨在CS专业，之后再查找CS专业的学生</p><h4 id="②"><a href="#②" class="headerlink" title="②"></a>②</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sno, Sname, Sdept<br><span class="hljs-keyword">FROM</span> Student <br><span class="hljs-keyword">WHERE</span> Sdept<span class="hljs-operator">=</span><span class="hljs-string">&#x27;CS&#x27;</span>; <br></code></pre></td></tr></table></figure><p>将上述①②构造为嵌套查询 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sno, Sname, Sdept <br><span class="hljs-keyword">FROM</span> Student<br><span class="hljs-keyword">WHERE</span> Sdept <span class="hljs-keyword">IN</span> (<span class="hljs-keyword">SELECT</span> Sdept <br>   <span class="hljs-keyword">FROM</span> Student<br>    <span class="hljs-keyword">WHERE</span> Sname<span class="hljs-operator">=</span><span class="hljs-string">&#x27;刘晨）： //本例的子查询条件不依赖于父查询，这类子查询称为不相关子查询</span><br></code></pre></td></tr></table></figure><h3 id="比较运算符—子查询"><a href="#比较运算符—子查询" class="headerlink" title="比较运算符—子查询"></a><mark>比较运算符—子查询</mark></h3><p>父查询与子查询之间用比较运算符连接</p><p><strong>WHERE 列名 比较运算符(子查询); &#x2F;&#x2F;当用户能确切知道内层查询返回的是单个值时，可用比较运算符连接</strong></p><p>eg.在SC表中，找出每个学生（Sno）超过他自己选修课程平均成绩（Grade）的课程号（Cno）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sno, Cno <br><span class="hljs-keyword">FROM</span> SC x<span class="hljs-operator">/</span><span class="hljs-operator">/</span>x是表SC的别名，又称为元组变量，可以用来表示SC的一个元组<br><span class="hljs-keyword">WHERE</span> Grade <span class="hljs-operator">&gt;</span> <span class="hljs-operator">=</span><br>(<span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">AVG</span>(Grade) <span class="hljs-keyword">FROM</span> SC y<br><span class="hljs-keyword">WHERE</span> y.Sno<span class="hljs-operator">=</span>x.Sno）；<br> <span class="hljs-comment">/*本例的子查询条件依赖于父查询，这类子查询称为相关子查询，整个查询称为相关嵌套查询*/</span><br></code></pre></td></tr></table></figure><h3 id="ANY-x2F-ALL-子查询"><a href="#ANY-x2F-ALL-子查询" class="headerlink" title="ANY&#x2F;ALL-子查询"></a><mark>ANY&#x2F;ALL-子查询</mark></h3><p><strong>WHERE 列名 比较运算符ANY&#x2F;ALL (子查询);&#x2F;&#x2F;有的系统中ANY 用SOME代替</strong></p><table><thead><tr><th>谓词</th><th>语义</th><th>与聚集函数或IN的等价转换</th></tr></thead><tbody><tr><td>&gt;ANY</td><td>大于子查询结果中的某个值</td><td>&gt;MIN</td></tr><tr><td>&gt;ALL</td><td>大于子查询结果中的所有值</td><td>&gt;MAX</td></tr><tr><td>&lt;ANY</td><td>小于子查询结果中的某个值</td><td>&lt;MAX</td></tr><tr><td>&lt;ALL</td><td>小于子查询结果中的所有值</td><td>&lt;MIN</td></tr><tr><td>&gt;&#x3D;ANY</td><td>大于等于子查询结果中的某个值</td><td>&gt;&#x3D;MIN</td></tr><tr><td>&gt;&#x3D;ALL</td><td>大于等于子查询结果中的所有值</td><td>&gt;&#x3D;MAX</td></tr><tr><td>&lt;&#x3D;ANY</td><td>小于等于子查询结果中的某个值</td><td>&lt;&#x3D;MAX</td></tr><tr><td>&lt;&#x3D;ALL</td><td>小于等于子查询结果中的所有值</td><td>&lt;&#x3D;MIN</td></tr><tr><td>&#x3D;ANY</td><td>等于子查询结果中的某个值</td><td>IN</td></tr><tr><td>&#x3D;ALL</td><td>等于子查询结果中的所有值</td><td>&#x2F;- -</td></tr><tr><td>&#x3D;(或&lt;&gt;)ANY</td><td>不等于子查询结果中的某个值</td><td>&#x2F;- -</td></tr><tr><td>!&#x3D;(或&lt;&gt;)ALL</td><td>不等于子查询结果中的任何值</td><td>NOT IN</td></tr></tbody></table><p>eg. 在Student表中，查询不是CS专业的学生中，比CS专业任意一个学生年纪小的学生姓名和年龄</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sname, Sage<br><span class="hljs-keyword">FROM</span> Student <span class="hljs-keyword">WHERE</span> Sage<span class="hljs-operator">&lt;</span><span class="hljs-keyword">ANY</span><br> (<span class="hljs-keyword">SELECT</span> Sage <span class="hljs-keyword">FROM</span> Student<br>  <span class="hljs-keyword">WHERE</span> Sdept<span class="hljs-operator">=</span><span class="hljs-string">&#x27;CS&#x27;</span>)<br>  <span class="hljs-keyword">AND</span> Sdept <span class="hljs-operator">&lt;&gt;</span> <span class="hljs-string">&#x27;CS&#x27;</span>； <span class="hljs-operator">/</span><span class="hljs-operator">/</span>注意这是父查询块中的条件<br></code></pre></td></tr></table></figure><h3 id="EXISTS-子查询"><a href="#EXISTS-子查询" class="headerlink" title="EXISTS-子查询"></a><mark>EXISTS-子查询</mark></h3><p>EXISTS 代表存在量词（与之对应的为NOT EXISTS）</p><p>EXISTS 谓词的子查询不返回任何数据，只产生逻辑真值’true’或逻辑假值’false”逻辑蕴涵表达：</p><h2 id="【集合查询】"><a href="#【集合查询】" class="headerlink" title="【集合查询】"></a>【集合查询】</h2><p>多个SELECT语句的结果可以进行集合的并（UNION）、交（INTERSECT）、差（EXCEPT）操作</p><p><strong>注意：</strong>参加集合操作的各查询结果的列数必须相同；对应项的数据类型也必须相同</p><p><strong>SELECT 语句 1 UNION&#x2F;INTERSECT&#x2F;EXCEPT SELECT 语句 2</strong></p><h3 id="UNION-并操作"><a href="#UNION-并操作" class="headerlink" title="UNION 并操作"></a><mark>UNION 并操作</mark></h3><p>UNION 合并查询结果时，系统会自动去掉重复元组，若需保留，则采用UNION ALL</p><p>eg1. 在Student 表中查询CS专业的学生和年龄不大于19岁的学生</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">FROM</span> <br>Student <br><span class="hljs-keyword">WHERE</span> Sdept<span class="hljs-operator">=</span><span class="hljs-string">&#x27;CS&#x27;</span> <span class="hljs-keyword">UNION</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">FROM</span> Student <br>WEHRE Sage<span class="hljs-operator">&lt;=</span><span class="hljs-number">19</span>;<br></code></pre></td></tr></table></figure><p>eg2. 在SC表中查询选修了课程1或者课程2的学生</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sno<br><span class="hljs-keyword">FROM</span> SC<br><span class="hljs-keyword">WHERE</span> Cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">UNION</span><br><span class="hljs-keyword">SELECT</span> Sno<br><span class="hljs-keyword">FROM</span> SC<br>WEHRE Cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;2&#x27;</span>; <br></code></pre></td></tr></table></figure><h3 id="INTERSECT-交操作"><a href="#INTERSECT-交操作" class="headerlink" title="INTERSECT 交操作"></a><mark>INTERSECT 交操作</mark></h3><p>eg.查询既选修了课程1又选修了课程2的学生</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sno<br><span class="hljs-keyword">FROM</span> SCWHERE Cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span> <br><span class="hljs-keyword">INTERSECT</span><br><span class="hljs-keyword">SELECT</span> Sno<br><span class="hljs-keyword">FROM</span> SC<br>WEHRE Cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;2&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="EXCEPT-差操作"><a href="#EXCEPT-差操作" class="headerlink" title="EXCEPT 差操作"></a><mark>EXCEPT 差操作</mark></h3><p>eg.查询CS专业的学生与年龄不大于19岁的学生的差集</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span><br><span class="hljs-keyword">FROM</span> Student <br><span class="hljs-keyword">WHERE</span> Sdept<span class="hljs-operator">=</span><span class="hljs-string">&#x27;CS&#x27;</span> <span class="hljs-keyword">EXCEPT</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span><span class="hljs-keyword">FROM</span> Student WEHRE Sage<span class="hljs-operator">&lt;=</span><span class="hljs-number">19</span>;<br></code></pre></td></tr></table></figure><h2 id="【基于派生表的查询】"><a href="#【基于派生表的查询】" class="headerlink" title="【基于派生表的查询】"></a>【基于派生表的查询】</h2><p>子查询出现在FROM子句时，子查询将生成临时的派生表，成为主查询的查询对象。</p><p><strong>FROM （子查询） AS别名（属性列名1，属性列名n）；</strong></p><p>&#x2F;&#x2F;如果子查询中没有聚集函数，派生表可以不指定属性列，子查询SELECT 子句后面的列名为其默认属性</p><p>&#x2F;&#x2F;AS 可以省略，但必须为派生表关系指定一个别名；</p><p>eg1.找出每个学生超过他自己选修课程平均成绩的课程号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sno, Cno<br><span class="hljs-keyword">FROM</span> SC, (<span class="hljs-keyword">SELECT</span> Sno, <span class="hljs-built_in">Avg</span>(Grade) <br><span class="hljs-keyword">FROM</span> SC <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> Sno) <span class="hljs-keyword">AS</span> Avg_sc(avg_sno, avg_grade) <br><span class="hljs-keyword">WHERE</span> SC.Sno <span class="hljs-operator">=</span> Avg_sc.avg_sno <span class="hljs-keyword">AND</span> SC.Grade<span class="hljs-operator">&gt;=</span>Avg_sc.avg_grade;<br></code></pre></td></tr></table></figure><p>eg2.查询所有选修了1号课程的学生姓名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Sname<br><span class="hljs-keyword">FROM</span> Student, (SECLECT Sno <span class="hljs-keyword">FROM</span> SC <span class="hljs-keyword">WHERE</span> Cno<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span>) <span class="hljs-keyword">AS</span> SC1 <br><span class="hljs-keyword">WHERE</span> Student.Sno<span class="hljs-operator">=</span>SC1.Sno；<br></code></pre></td></tr></table></figure><h1 id="INSERT-x2F-UPDATE-x2F-DELETE-语句"><a href="#INSERT-x2F-UPDATE-x2F-DELETE-语句" class="headerlink" title="INSERT&#x2F;UPDATE&#x2F;DELETE 语句"></a><font color='red'>INSERT&#x2F;UPDATE&#x2F;DELETE 语句</font></h1><h2 id="插入数据INSERT"><a href="#插入数据INSERT" class="headerlink" title="插入数据INSERT "></a><mark>插入数据INSERT </mark></h2><h3 id="1-插入元组"><a href="#1-插入元组" class="headerlink" title="(1)插入元组"></a>(1)插入元组</h3><p><strong>INSERT</strong> <strong>INTO 表名(列名1,列名n)</strong></p><p><strong>VALUES （常量1，常量n）; &#x2F;&#x2F;字符串常量要用单引号（’）括起来</strong></p><p>假设现有TAB1表，共有C1到C4四列，其中C4列是字符串常量</p><h4 id="situation1-明确给出新增元组要在哪些属性上赋值（插入数据包含全部属性列）"><a href="#situation1-明确给出新增元组要在哪些属性上赋值（插入数据包含全部属性列）" class="headerlink" title="situation1. 明确给出新增元组要在哪些属性上赋值（插入数据包含全部属性列）"></a>situation1. 明确给出新增元组要在哪些属性上赋值（插入数据包含全部属性列）</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span><br><span class="hljs-keyword">INTO</span> TAB1 (C1, C2, C3, C4) <br><span class="hljs-keyword">VALUES</span> （<span class="hljs-number">1</span>， <span class="hljs-number">2</span>， <span class="hljs-number">3</span>， <span class="hljs-string">&#x27;4&#x27;</span>）；<br></code></pre></td></tr></table></figure><h4 id="situation2-仅指出在TAB1-表上插入元组（插入数据包含全部属性列）"><a href="#situation2-仅指出在TAB1-表上插入元组（插入数据包含全部属性列）" class="headerlink" title="situation2.仅指出在TAB1 表上插入元组（插入数据包含全部属性列）"></a>situation2.仅指出在TAB1 表上插入元组（插入数据包含全部属性列）</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span><br><span class="hljs-keyword">INTO</span> TAB1<br><span class="hljs-keyword">VALUES</span> （<span class="hljs-number">1</span>， <span class="hljs-number">2</span>， <span class="hljs-number">3</span>， <span class="hljs-string">&#x27;4&#x27;</span>）； <span class="hljs-operator">/</span><span class="hljs-operator">/</span>这种情况表示要在TAB1 表全部各列赋值，且插入数据的顺序必须和列的顺序对应<br></code></pre></td></tr></table></figure><h4 id="situation3-明确给出新增元组要在哪些属性列上赋值（插入数据不包含全部属性列）"><a href="#situation3-明确给出新增元组要在哪些属性列上赋值（插入数据不包含全部属性列）" class="headerlink" title="situation3. 明确给出新增元组要在哪些属性列上赋值（插入数据不包含全部属性列）"></a>situation3. 明确给出新增元组要在哪些属性列上赋值（插入数据不包含全部属性列）</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span><br><span class="hljs-keyword">INTO</span> TAB1 (C1, C2, C3)<br><span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>); <span class="hljs-operator">/</span><span class="hljs-operator">/</span>这种情况下, C4 列会被赋为<span class="hljs-keyword">NULL</span> 注意：当表定义说明了<span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> 时，不赋值会出错<br></code></pre></td></tr></table></figure><h4 id="situation4-仅指出在TAB1-表上插入元组（插入数据不包含全部属性列）"><a href="#situation4-仅指出在TAB1-表上插入元组（插入数据不包含全部属性列）" class="headerlink" title="situation4. 仅指出在TAB1 表上插入元组（插入数据不包含全部属性列）"></a>situation4. 仅指出在TAB1 表上插入元组（插入数据不包含全部属性列）</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span><br><span class="hljs-keyword">INTO</span> TAB1<br><span class="hljs-keyword">VALUES</span> （<span class="hljs-number">1</span>， <span class="hljs-number">2</span>， <span class="hljs-number">3</span>， <span class="hljs-keyword">NULL</span>）； <span class="hljs-operator">/</span><span class="hljs-operator">/</span>这种情况必须明确给出未赋值的属性列为<span class="hljs-keyword">NULL</span><br></code></pre></td></tr></table></figure><h3 id="（2）插入子查询结果"><a href="#（2）插入子查询结果" class="headerlink" title="（2）插入子查询结果"></a>（2）插入子查询结果</h3><p><strong>INSERT</strong></p><p><strong>INTO 表名(属性列1,属性列n)</strong></p><p><strong>子查询；&#x2F;&#x2F;子查询嵌套在INSERT语句中生成要插入的批量数据</strong></p><p>eg.假设现有TAB1表（如上），并按C1列分组求C2列的平均值，并存入TAB2表（其中TAB2 表的C1列存放C1， avg_C2 列存放 C2 列的均值）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span><br><span class="hljs-keyword">INTO</span> TAB2 (C1, avg_C2)<br> <span class="hljs-keyword">SELECT</span> C1, <span class="hljs-built_in">AVG</span>(C2) <br><span class="hljs-keyword">FROM</span> TAB1<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> C1;<br></code></pre></td></tr></table></figure><h2 id="修改数据-UPDATE"><a href="#修改数据-UPDATE" class="headerlink" title="修改数据 UPDATE"></a><mark>修改数据 UPDATE</mark></h2><p><strong>UPDATE 表名</strong></p><p><strong>SET 列名1&#x3D;表达式1，列名n&#x3D;表达式n</strong></p><p><strong>WHERE 条件；&#x2F;&#x2F;修改指定表中满足WHERE 子句条件的元组；若省略WHERE，表示要修改表中的所有元组</strong></p><h4 id="situation1-修改某一个元组的值"><a href="#situation1-修改某一个元组的值" class="headerlink" title="situation1. 修改某一个元组的值"></a>situation1. 修改某一个元组的值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">UPDATE</span> TAB1 <span class="hljs-keyword">SET</span> C4<span class="hljs-operator">=</span><span class="hljs-string">&#x27;O&#x27;</span><span class="hljs-keyword">WHERE</span> C1<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h4 id="situation2-修改多个元组的值-UPDATE-TAB1"><a href="#situation2-修改多个元组的值-UPDATE-TAB1" class="headerlink" title="situation2. 修改多个元组的值 UPDATE TAB1"></a>situation2. 修改多个元组的值 UPDATE TAB1</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SET</span> C3<span class="hljs-operator">=</span>C3<span class="hljs-operator">+</span><span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h4 id="situation3-带子查询的修改语句-UPDATE-TAB1"><a href="#situation3-带子查询的修改语句-UPDATE-TAB1" class="headerlink" title="situation3. 带子查询的修改语句 UPDATE TAB1"></a>situation3. 带子查询的修改语句 UPDATE TAB1</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SET</span> C4<span class="hljs-operator">=</span><span class="hljs-string">&#x27;O&#x27;</span><span class="hljs-keyword">WHERE</span> C1 <span class="hljs-keyword">IN</span><br>（<span class="hljs-keyword">SELECT</span> C1FROM TAB2<br><span class="hljs-keyword">WHERE</span> avg_C2<span class="hljs-operator">=</span><span class="hljs-number">2</span>; <br></code></pre></td></tr></table></figure><h2 id="删除数据DELETE"><a href="#删除数据DELETE" class="headerlink" title="删除数据DELETE"></a><mark>删除数据DELETE</mark></h2><p>DELETE</p><p>FROM 表名</p><p>WHERE条件;     &#x2F;&#x2F;删除指定表中满足WHERE子句条件的元组；若省略WHERE，表示要删除表中的所有元组注意：DELETE 语句删除的是表中的数据，并不是表的定义，表的定义仍在数据字典当中</p><h4 id="situation1-删除某一个元组的值DELETE"><a href="#situation1-删除某一个元组的值DELETE" class="headerlink" title="situation1. 删除某一个元组的值DELETE"></a>situation1. 删除某一个元组的值DELETE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">FROM</span> TAB1WHERE C1<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h4 id="situation2-删除多个元组的值-DELETE"><a href="#situation2-删除多个元组的值-DELETE" class="headerlink" title="situation2. 删除多个元组的值 DELETE"></a>situation2. 删除多个元组的值 DELETE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">FROM</span> TAB1; <span class="hljs-operator">/</span><span class="hljs-operator">/</span>TAB1 将变成空表<br></code></pre></td></tr></table></figure><h4 id="situation3-带子查询的删除语句"><a href="#situation3-带子查询的删除语句" class="headerlink" title="situation3. 带子查询的删除语句"></a>situation3. 带子查询的删除语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> TAB1 <br><span class="hljs-keyword">WHERE</span> C1 <span class="hljs-keyword">IN</span> <br>(<span class="hljs-keyword">SELECT</span> C1 <br><span class="hljs-keyword">FROM</span> TAB2 <br><span class="hljs-keyword">WHERE</span> avg_C2<span class="hljs-operator">=</span><span class="hljs-number">2</span>);<br></code></pre></td></tr></table></figure><h1 id="VIEW-视图"><a href="#VIEW-视图" class="headerlink" title="VIEW 视图"></a><font color='red'>VIEW 视图</font></h1><h2 id="定义视图CREATE-VIEW"><a href="#定义视图CREATE-VIEW" class="headerlink" title="定义视图CREATE VIEW"></a><mark>定义视图CREATE VIEW</mark></h2><p><strong>CREATE VIEW 视图名（列名1，列名n） &#x2F;&#x2F;若省略列名，则该视图由子查询中SELECT的目标列字段组成</strong></p><p><strong>AS 子查询</strong></p><p><strong>WITH CHECK OPTION； &#x2F;&#x2F;若添加该句，则表示对视图进行增删改时要满足子查询中的条件表达式</strong></p><p>在以下情况中必须明确指定组成视图的列名：</p><p>1.某个目标列不是单纯的列名，而是聚集函数或列表达式</p><p>\2. 多表连接时选出了几个同名列作为视图的字段</p><p>3.需要在视图中为某个列启用新的更合适的名字</p><p>行列子集视图：由单个基本表导出，仅去掉了基本表的某些行和某些列，但保留了主码</p><p>若某些视图是建立在另一个表的全部属性列上的，即视图与基本表的各列是一一对应的。那么当修改基本表的结构时，基本表和视图的映像关系会被破坏。这种情况最好在修改基本表后删除该视图，然后重建该视图</p><p>eg1. 建立TAB1的视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">VIEW</span> V_TAB1 <br><span class="hljs-keyword">AS</span><br><span class="hljs-keyword">SELECT</span> C1, C2, C3, C4<br><span class="hljs-keyword">FROM</span> TAB1<br><span class="hljs-keyword">WHERE</span> C1<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><p>eg2.建立C4为4时TAB1的视图，并保证以后每次增删改时都要满足C4为4的条件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">VIEW</span> V_TAB2<br><span class="hljs-keyword">AS</span><br><span class="hljs-keyword">SELECT</span> C1, C2, C3, C4 <br><span class="hljs-keyword">FROM</span> TAB1<br><span class="hljs-keyword">WHERE</span> C4<span class="hljs-operator">=</span><span class="hljs-string">&#x27;4&#x27;</span> <br><span class="hljs-keyword">WITH</span> <span class="hljs-keyword">CHECK</span> OPTION;<br></code></pre></td></tr></table></figure><p>eg3.建立在一个或多个已定义号的视图上</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">VIEW</span> V_TAB3<br><span class="hljs-keyword">AS</span><br><span class="hljs-keyword">SELECT</span> C1, C2, C3 <br><span class="hljs-keyword">FROM</span> V_TAB1 <br><span class="hljs-keyword">WHERE</span> C2<span class="hljs-operator">=</span><span class="hljs-number">2</span>;<br></code></pre></td></tr></table></figure><p>eg4.为减少冗余数据，定义基本表时一般只存放基本数据。当需要使用计算得出的派生数据时，可以设置在视图中的派生属性列上，也称为虚拟列。带虚拟列的视图也称为带表达式的视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">VIEW</span> V_TAB4(C1, new_C2)<br><span class="hljs-keyword">AS</span><br><span class="hljs-keyword">SELECT</span> C1, <span class="hljs-number">10</span><span class="hljs-operator">+</span>C2 <br><span class="hljs-keyword">FROM</span> TAB1；<br></code></pre></td></tr></table></figure><p>eg5.分组视图:带有聚集函数和GROUP BY子句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">VIEW</span> V_TAB5(C1, avg_C2) <br><span class="hljs-keyword">AS</span><br><span class="hljs-keyword">SELECT</span> C1, <span class="hljs-built_in">AVG</span>(C2)<br><span class="hljs-keyword">FROM</span> TAB1<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> C1; <br></code></pre></td></tr></table></figure><h2 id="删除视图DROP-VIEW"><a href="#删除视图DROP-VIEW" class="headerlink" title="删除视图DROP VIEW"></a><mark>删除视图DROP VIEW</mark></h2><p>DROP VIEW 视图名 CASCADE； &#x2F;&#x2F;若使用 CASCADE级联删除语句，则将把该视图导出的所有视图一并删除eg1.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">VIEW</span> V_TAB2; <br></code></pre></td></tr></table></figure><p>eg2.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">VIEW</span> V_TAB1 CASCADE； <span class="hljs-operator">/</span><span class="hljs-operator">/</span>由 V_TAB1 导出的 V_TAB3 也一并删除<br></code></pre></td></tr></table></figure><h2 id="查询视图和更新视图"><a href="#查询视图和更新视图" class="headerlink" title="查询视图和更新视图"></a><mark>查询视图和更新视图</mark></h2><p>视图定义后，对视图进行查询和更新的语句和语法与基本表相同</p><p>视图的查询与更新最终都会转换为对基本表的查询和更新，这一过程也被称为视图消解一般来说，行列子集视图的查询和更新都可以顺利转换，其他则不一定</p><h1 id="空值"><a href="#空值" class="headerlink" title="空值"></a><font color=red>空值</font></h1><h2 id="判断一个属性是否为空值"><a href="#判断一个属性是否为空值" class="headerlink" title="判断一个属性是否为空值"></a><mark>判断一个属性是否为空值</mark></h2><p>属性 IS NULL</p><p>属性 IS NOT NULL</p><h2 id="空值的运算"><a href="#空值的运算" class="headerlink" title="空值的运算"></a><mark>空值的运算</mark></h2><p>空值与另一个值的算术运算结果为空值</p><p>空值与另一个值的比较运算结果为UNKNOWN</p><p>在查询语句中，只有使WHERE和HAVING 子句的选择条件为TRUE 的元组才会被选出作为输出结果（即不包括UNKNOWN 的情况）</p>]]></content>
    
    
    <categories>
      
      <category>经验分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面试准备第一天-常见问题准备</title>
    <link href="/2022/07/01/09%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%E7%AC%AC%E4%B8%80%E5%A4%A9-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%87%86%E5%A4%87/"/>
    <url>/2022/07/01/09%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87%E7%AC%AC%E4%B8%80%E5%A4%A9-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E5%87%86%E5%A4%87/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="第一部分：无领导面试（这部分是自己写的答案，可能不对，只提供参考）"><a href="#第一部分：无领导面试（这部分是自己写的答案，可能不对，只提供参考）" class="headerlink" title="第一部分：无领导面试（这部分是自己写的答案，可能不对，只提供参考）"></a>第一部分：无领导面试（这部分是自己写的答案，可能不对，只提供参考）</h2><h3 id="1-如何预防金融风险？"><a href="#1-如何预防金融风险？" class="headerlink" title="1.如何预防金融风险？"></a>1.如何预防金融风险？</h3><ul><li>进一步健全金融风险预警体系</li><li>加大金融基础设施的建设力度</li><li>推动金融市场基础制度的建设和完善</li><li>充分发挥监管机制的作用</li><li>做好重点领域的金融风险防控工作</li></ul><h3 id="2-某农产品公司面对资金短缺问题，现只有20万元资金可供使用，需解决以下问题："><a href="#2-某农产品公司面对资金短缺问题，现只有20万元资金可供使用，需解决以下问题：" class="headerlink" title="2.某农产品公司面对资金短缺问题，现只有20万元资金可供使用，需解决以下问题："></a>2.某农产品公司面对资金短缺问题，现只有20万元资金可供使用，需解决以下问题：</h3><ul><li>1.因工作导致工伤员工的医药费</li><li>2.工作大楼及办公室的装修及修缮</li><li>3.员工上个季度的业绩奖励</li><li>4.即将到来的节日员工福利</li><li>5.员工的日常出行交通补贴</li></ul><p>讨论：如果你是相关人员请问如何排列事项优先级，以及如何分配资金。<br>答：员工的生命安全第一位，所以首先是医药费，按照相关法律法规基于赔偿；然后是填补之前的空缺，上个季度的业绩奖励，按照员工业绩成绩进行合理发放，然后是员工入场的雏形交通部图二和即将到来节日的福利，最后剩下的钱评估是都足够装修，如果够了就进行施工，不够继续等待下一笔资金的到来。</p><h3 id="3-对金融风险进行排序，一共9个金融风险：信用风险、监管风险、法律风险、操作风险、技术性风险、市场风险、信息泄露风险、支付风险、结算风险。"><a href="#3-对金融风险进行排序，一共9个金融风险：信用风险、监管风险、法律风险、操作风险、技术性风险、市场风险、信息泄露风险、支付风险、结算风险。" class="headerlink" title="3.对金融风险进行排序，一共9个金融风险：信用风险、监管风险、法律风险、操作风险、技术性风险、市场风险、信息泄露风险、支付风险、结算风险。"></a>3.对金融风险进行排序，一共9个金融风险：信用风险、监管风险、法律风险、操作风险、技术性风险、市场风险、信息泄露风险、支付风险、结算风险。</h3><ul><li>依据风险性规则对上述金融风险进行排序。</li><li>找出最重要的风险，并提出三点降低风险的建议。</li></ul><p>答：九类风险有些多，我感觉可以先进性大致的一个归类，技术性风险、信息泄露风险、支付风险、结算风险这些归为技术类风险，现在就剩下：信用、监管、法律、操作、市场、技术类。再把监管和法律归为一类。现在就有这样一个递进关系，监管法律不严格，操作就会失误，出现技术性风险，出现技术性风险（比如隐私泄露）就会造成信用低下，进而影响市场，所以解决问题的源头在法律和监管，按照这个逻辑顺序进行一次排序就是重要程度，因为我们进行风险排序的目的是解决问题、降低风险，就要从源头出发。<br>对于法律监管风险，建议有：首先完善公司规章制度，培训员工的法律意识；然后健全监管体制，可以设置举报信箱或者举报奖励制度。</p><h2 id="第二部分：半结构化面试（这部分有些在网上找的，自己补充完善）"><a href="#第二部分：半结构化面试（这部分有些在网上找的，自己补充完善）" class="headerlink" title="第二部分：半结构化面试（这部分有些在网上找的，自己补充完善）"></a>第二部分：半结构化面试（这部分有些在网上找的，自己补充完善）</h2><h3 id="1-自我介绍"><a href="#1-自我介绍" class="headerlink" title="1.自我介绍"></a>1.自我介绍</h3><ul><li>各位面试官大家好，很荣幸能参加此次的面试。我叫*<em><strong>，山西</strong></em>人，今年毕业于太原理工大学、数据科学与大数据技术专业，考取到西安电子科技大学的研究生，预计九月份开学。</li><li>我在校期间学习成绩良好，绩点排名在全专业前30%，通过了四六级考试，利用课余时间以及寒暑假参加了一系列科技竞赛与创新创业的竞赛，获得了优秀的成绩，包括挑战杯的全国银奖、互联网+的山西省金奖以及建模竞赛的山西省一等奖，这个竞赛的选题是当年的C题，也是关于银行贷款风险评估的。除了这些竞赛，也获得了一些在校的荣誉，比如校级的优秀共青团员、担任班长获得了优秀班干部的荣誉称号、疫情期间参加志愿活动获得了志愿服务奖学金，由于综合表现优异，毕业时获得了优秀毕业生的荣誉称号。</li><li>在大学期间主要学了C语言、python、数据分析挖掘、数据库、机器学习、深度学习的一些内容。</li><li>我是一个开朗热情的人，喜欢结交朋友、喜欢跑步、打羽毛球，平时也喜欢写一些东西，我大学期间做过微信公众号，然后毕业的这段时间搭建了自己的博客，分享学习到的东西。</li><li>这就是我的主要情况，我的自我介绍完毕，谢谢各位面试官。</li></ul><h3 id="2-你学了那些技术，对本岗位有所帮助"><a href="#2-你学了那些技术，对本岗位有所帮助" class="headerlink" title="2.你学了那些技术，对本岗位有所帮助"></a>2.你学了那些技术，对本岗位有所帮助</h3><ul><li>首先我学过数据库，可以对银行的一些客户数据、金融数据进行保管与相关操作</li><li>然后我学数据挖掘，可以根据用户信息对潜在用户进性挖掘预测，也可以分析用户的贷款风险</li><li>然后我还学过人工智能方面的知识，比如可以尝试着去做客服机器人，智能应答这种。</li><li>最后呢，我还会一些django和前端，可以搭建宣传网站之类的。</li></ul><h3 id="3-对建行的认识与理解"><a href="#3-对建行的认识与理解" class="headerlink" title="3.对建行的认识与理解"></a>3.对建行的认识与理解</h3><ul><li>中国建设银行，前身为成立于1954年10月1日的中国人民建设银行（后于1996年3月26日正式更名为中国建设银行），是中央管理的国有大型商业银行。主要经营领域包括公司银行业务、个人银行业务和资金业务。在境内有38家分行，在境外29个国家和地区设有分支机构及子公司，拥有基金、租赁、信托、人寿、财险、投行、期货、养老金等多个行业的子公司。</li></ul><h3 id="4-为什么想来银行工作"><a href="#4-为什么想来银行工作" class="headerlink" title="4.为什么想来银行工作"></a>4.为什么想来银行工作</h3><ul><li>首先银行这个岗位与自己所学的专业是比较契合的。</li><li>然后我认为银行能够为自己提供一个稳定的职业发展环境，这样就能够一心一意地把全部精力和注意力放在提升个人业务水平上，能够更快地得到持续性地成长，且有机会在一个领域内深耕。</li></ul><h3 id="5-谈谈你的缺点"><a href="#5-谈谈你的缺点" class="headerlink" title="5.谈谈你的缺点"></a>5.谈谈你的缺点</h3><ul><li>我的公开演讲能力比较差，在公共场合讲话的时候我会感到紧张，不过谈论我熟悉的领域我会比较放松。所以当我需要做公开发言的时候， 我必须要准备得很充分。我确实羡慕那些无论什么话题都能够高谈阔论的人。</li><li>还有一点就是自己独立思考的能力还比较弱，有时候会受别人的一些干扰，改变自己的思路，但时候往往发现自己是对的。所以说现在也在读一些书籍，慢慢的去改变这个毛病。</li></ul><h3 id="6-在学校做过什么实践活动"><a href="#6-在学校做过什么实践活动" class="headerlink" title="6.在学校做过什么实践活动"></a>6.在学校做过什么实践活动</h3><ul><li>首先，我在学校是单人的班长，管理班级事务，配合学院组织一些活动</li><li>然后我主要参加了一些竞赛，刚刚自我介绍也说过，这里不再赘述</li><li>我还参加一些志愿服务活动</li><li>有个遗憾的是没有参加学校的三下乡的活动，然后看见建行会组织类似活动，所以挺动心的。</li></ul><h3 id="7-金融科技的理解"><a href="#7-金融科技的理解" class="headerlink" title="7.金融科技的理解"></a>7.金融科技的理解</h3><ul><li>金融科技英译为Fintech， 是 Financial Technology 的缩写，是基于大数据、云计算、人工智能、区块链等一系列技术创新，全面应用于支付清算、借贷融资、财富管理、零售银行、保险、交易结算等六大金融领域，是金融业未来的主流趋势。能够提高效率、降低运营的成本。</li></ul><h3 id="8-印象深刻的事情"><a href="#8-印象深刻的事情" class="headerlink" title="8.印象深刻的事情"></a>8.印象深刻的事情</h3><ul><li>考研这段经历让我印象深刻，他不像在高中一样，有一起努力的伙伴、有监督的老师。真的就是孤军奋战，需要自己给自己做规划、自己监督自己、在这段时间，一直都很自律，也顺利的考上了心仪的学校，所以印象还是很深刻的。</li></ul><h3 id="9-对大数据的看法"><a href="#9-对大数据的看法" class="headerlink" title="9.对大数据的看法"></a>9.对大数据的看法</h3><ul><li>我感觉大数据是人类社会发展的大趋势，最早的提出者麦肯锡，大数据并非是想象上简单的对海量数据进行整理、收集，它的实质是通过收集、整理海量数据，利用布式运算，对个人、群体或行业领域的未来发展进行合理的精准的预测。大数据的四性：大规模性(Volume)、高速性(Velocity)、多样性(Variety)、价值性(Value)</li></ul><h3 id="10-生活中遇到烦恼和压力的时候如何排解？"><a href="#10-生活中遇到烦恼和压力的时候如何排解？" class="headerlink" title="10.生活中遇到烦恼和压力的时候如何排解？"></a>10.生活中遇到烦恼和压力的时候如何排解？</h3><ul><li>首先，我再大学期间结交了几个很要好的朋友，我压力大的时候会找他们倾诉，然后听听他们作为旁观者的意见。</li><li>然后我会去跑步，释放自己的压力</li></ul><h3 id="11-来我们银行可以做什么？"><a href="#11-来我们银行可以做什么？" class="headerlink" title="11.来我们银行可以做什么？"></a>11.来我们银行可以做什么？</h3><ul><li>答：通过我的研究领域可以在银行做金融科技相关工作，例如通过AI技术研发智能投资顾问与聊天机器人、股票价格预测、评估消费者行为和支付意愿、信用评分、保险业的承保与理赔、风险管理与压力测试、金融监管与识别监测等金融领域的问题；第二点还可以通过大数据金融利用互联网技术和信息通信技术，探索资金融通、支付、投资和信息中介的新型金融业务模式的研发。并通过数据分析与可视化来展示相应的分析结果。</li></ul>]]></content>
    
    
    <categories>
      
      <category>经验分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FPGA学习2：相关软件安装</title>
    <link href="/2022/06/30/08FPGA%E5%AD%A6%E4%B9%A02%EF%BC%9A%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    <url>/2022/06/30/08FPGA%E5%AD%A6%E4%B9%A02%EF%BC%9A%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>前前后后耗时三天，终于将用到的quartus、器件库、modelsim软件下载、破解、关联配置做好了。一路上碰到了各种奇奇怪怪的问题，有一点点地查找解决方案，现在把踩过的坑，以及找好的安装包分享到这里，便于自己以后使用，也给大家提供便捷。</p><p>首先要清楚quartus和modelsim分别是干什么的，Quartus是开发软件，可以进行项目开发、Verilog代码的编写等，就像是写Python所使用的pycharm；Modelsim是仿真软件，仿真顾名思义，就是将实际的工作电路模拟出来，可以方便查看输出等结果是否正确。</p><p>主要参考的教程是野火出品的这个视频，它的网址如下，但是其中没有具体说明软件的下载地址与破解方法，会遇到的常见问题也没有进行说明。<a href="https://www.bilibili.com/video/BV17z411i7er?p=3&vd_source=efae70b1a755d9c960b4d6e78ad98612">【野火】FPGA系列教学视频，真正的手把手教学，“波形图”教学法，现场画波形图写代码，硬件基于野火FPGA EP4CE10征途系列开发板，已完结_哔哩哔哩_bilibili</a></p><h2 id="一、quartus下载与破解"><a href="#一、quartus下载与破解" class="headerlink" title="一、quartus下载与破解"></a>一、quartus下载与破解</h2><p>quartus的下载地址为：<a href="https://www.jb51.net/softs/545630.html">quartus ii 13.0破解版下载 quartus ii(PLD&#x2F;FPGA开发软件) 13.0 免费特别版(附注册机) 下载-脚本之家 (jb51.net)</a></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750805365-ed2965b0-85ea-47ad-8d48-85f64d893940.png#clientId=u36f59fbd-45b1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=265&id=u67050f86&name=image.png&originHeight=348&originWidth=924&originalType=binary&ratio=1&rotation=0&showTitle=false&size=236290&status=done&style=none&taskId=ud108ce28-16ee-4e54-9fc1-ebd0a4037d3&title=&width=704" alt="image.png"></p><p>在这个网盘中下载下来之后会带有破解器，该网页也有破解的具体操作，这里不做过多的讲解，这一步遇到的坑:</p><ol><li>一定要将该软件安装在全英文路径，如果有中文路径的话会出现软件打不开的情况。</li><li>破解的原理可能与电脑的网卡有关，在电脑有多个网卡或者有虚拟网卡时会有多个NIC(ID)，这时候复制第一个就可以。</li></ol><p>破解完如何查看是否破解成功：</p><ol><li>在进入软件的时候，没有出现相关提醒</li><li>在license setup中可以看到到期的日期为2035年 ![]<img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750820639-1a16af20-4cae-44d7-89ad-875b971a0ad2.png#clientId=u36f59fbd-45b1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=625&id=ud16718a9&name=image.png&originHeight=820&originWidth=846&originalType=binary&ratio=1&rotation=0&showTitle=false&size=228128&status=done&style=none&taskId=u90bddced-ff94-4a07-87a7-9bdd1062b80&title=&width=644.5714285714286" alt="image.png"></li></ol><h2 id="二、quartus器件库的下载"><a href="#二、quartus器件库的下载" class="headerlink" title="二、quartus器件库的下载"></a>二、quartus器件库的下载</h2><p>器件库的安装可以参考这篇文章：<a href="https://blog.csdn.net/sou_nuo/article/details/117092405">Quartus II 13.0 添加器件库教程(包含下载地址)_阿聍的博客-CSDN博客_quartus器件库下载</a></p><p>但是一定要注意，不能用里面提供下载的器件库，因为器件库的版本必须与quartus完全一致，这里我就踩过坑，虽然版本都是13.0，但在这后面还有几位是不一致的，所以在网上找了很久才下载下来合适的器件库版本，下载地址如下：</p><p>链接：<a href="https://pan.baidu.com/s/1yIKSO0cfoZ0eYESn3lhv-g">https://pan.baidu.com/s/1yIKSO0cfoZ0eYESn3lhv-g</a>   提取码：ucm3</p><p>还有一点可能遇到的问题，就是教程里安装器件库的程序是从这个地方打开的</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750840330-c6d69089-fb41-4e26-8268-fbc5ac19a5ca.png#clientId=u36f59fbd-45b1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=624&id=uc06c5fab&name=image.png&originHeight=819&originWidth=444&originalType=binary&ratio=1&rotation=0&showTitle=false&size=206242&status=done&style=none&taskId=u3975d07d-0c8e-4817-9724-f1fecb190ca&title=&width=338.2857142857143" alt="image.png"></p><h2 id="三、modelsim的下载与破解"><a href="#三、modelsim的下载与破解" class="headerlink" title="三、modelsim的下载与破解"></a>三、modelsim的下载与破解</h2><p>modelsim的下载地址如下：[modelsim se 10.5破解版下载_HDL语言仿真软件 v2020.5<a href="https://www.xiazai99.com/down/soft159256.html">网盘资源] - 99下载站 (xiazai99.com)</a></p><p>同样，在这个文章中也说明了破解的方法，但是如果按其操作，会出现各种错误，这部分错误的解决也是我花费时间最多的地方。</p><ol><li>在安装modelsim的过程中，不要一直选择是或者next，在其中有一步让选择是否安装相关驱动，一定要选择否，不然电脑就会蓝屏。这是血的教训。</li><li>如果按照教程的破解方法处理完毕，还是没有成功，很可能还是网卡有多个原因，这时可以直接将电脑的WiFi关掉，在进行破解</li><li>破解之后首次打开要使用管理员身份。</li></ol><h2 id="四、quartus与modelsim相关联"><a href="#四、quartus与modelsim相关联" class="headerlink" title="四、quartus与modelsim相关联"></a>四、quartus与modelsim相关联</h2><p>这一操作在引言部分的野火教程中有，但是按其操作还是会出现问题（但首先还是得先按着里面的操作一遍）。</p><ol><li><p>这个教程里跳过了新建项目，编写Verilog代码的步骤，直接进行仿真测试，我们没有相关程序的话是没发测试的，所以也要先建项目，写代码，这里看可以参考这个文章:<a href="https://blog.csdn.net/qq_37424623/article/details/123207484">Quartus软件创建第一个工程_驽马同学的博客-CSDN博客_quartus 创建工程</a>。但是这里面的代码又只展示了一半，还是图片，作为新手，完全不懂，无法操作，所以找了一段简单的代码，替换掉这篇文章中的Verilog进行测试，代码如下：  </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs markdown">`timescale  1ns/1ns<br>///////////////////////////////////////////////////////////////////////////<br>// Author        : EmbedFire<br>// Create Date   : 2019/03/12<br>// Module Name   : led<br>// Project Name  : led<br>// Target Devices: Altera EP4CE10F17C8N<br>// Tool Versions : Quartus 13.0<br>// Description   : 按键控制LED灯<br>//<br>// Revision      : V1.0<br>// Additional Comments:<br>// <br>// 实验平台: 野火<span class="hljs-emphasis">_征途Pro_</span>FPGA开发板<br>// 公司    : http://www.embedfire.com<br>// 论坛    : http://www.firebbs.cn<br>// 淘宝    : https://fire-stm32.taobao.com<br>//////////////////////////////////////////////////////////////////////////<br><br><br>module  myled<br>(<br><span class="hljs-code">    input   wire    key_in  ,   //输入按键</span><br><span class="hljs-code"></span><br><br><span class="hljs-code">    output  wire    led_out     //输出控制led灯</span><br><span class="hljs-code">);</span><br><span class="hljs-code"></span><br><br>//<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>//<br>//<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-emphasis">* Main Code <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>//</span><br><span class="hljs-emphasis">//<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>//</span><br><span class="hljs-emphasis">//led_out:led灯输出的结果为key_in按键的输入值</span><br><span class="hljs-emphasis">assign  led_out = key_in;</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">endmodule</span><br></code></pre></td></tr></table></figure></li><li><p>在替换了上面的代码之后，新的问题出现，quartus无法分析成功，因为命名的问题，因为代码中主程序名还有文件名、以及项目名有一定的关系，把它们几个全设置为myled就可以成功。</p></li><li><p>在分析成功之后，点击仿真，按理说就应该打开modelsim软件了，但是可能并没有打开，而是报错，这是有可能是没有把默认的仿真软件设置为modelsim，在这里可以设置  <img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750851597-90d0c89a-e2af-495a-93ed-02395b5b7528.png#clientId=u36f59fbd-45b1-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=595&id=u253d0dbf&name=image.png&originHeight=781&originWidth=951&originalType=binary&ratio=1&rotation=0&showTitle=false&size=300364&status=done&style=none&taskId=ubd8eb30f-26b4-42bb-8632-c91e71bee8f&title=&width=724.5714285714286" alt="image.png"> </p></li><li><p>点击仿真后，modelsim的图标出现，却又再次提醒没有激活，但是单独打开modelsim是已经破解了正常打开的，这时有可能是quartus和modelsim两个破解过程中的使用的NIC(ID)不一样，把二者改为一样应该可以解决这个问题。</p></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>磨刀不误砍柴工，学习FPGA之前，把这些必要的软件设置舒服是很重要的。之前在上学时也安装下载过许多的软件，这几个是遇到过流程最麻烦的，可能也是不熟悉的原因，花了几天时间，还是挺有成就感的，终于可以开始正式的学习了。</p>]]></content>
    
    
    <categories>
      
      <category>FPGA学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>FPGA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>项目申请书-书写经验总结</title>
    <link href="/2022/06/28/07%E9%A1%B9%E7%9B%AE%E7%94%B3%E8%AF%B7%E4%B9%A6-%E4%B9%A6%E5%86%99%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    <url>/2022/06/28/07%E9%A1%B9%E7%9B%AE%E7%94%B3%E8%AF%B7%E4%B9%A6-%E4%B9%A6%E5%86%99%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><blockquote><p>最近段时间在帮老师写项目申请书。第一次写，遇到了不少问题，在这里记录一下，写一点经验与心得，方便之后的再次书写。</p></blockquote><h2 id="一、内容板块"><a href="#一、内容板块" class="headerlink" title="一、内容板块"></a>一、内容板块</h2><p>本次的项目申请书的主题是芯片缺陷检测。按照研究所给出的书写模板，主要分为九个主要版块</p><ol><li><p>项目的基本信息</p></li><li><p>项目负责人及主要成员</p></li><li><p><strong>项目的基本情况</strong></p><p>项目的研究背景、研究目标、研究意义、国内外研究现状、本项目研究成果的重要性和应用前景</p></li><li><p><strong>主要研究内容和目标</strong></p><p>项目的研究内容、研究方案、技术路线、关键技术、创新点</p></li><li><p>项目负责人及团队信息</p></li><li><p>研究基础和团队代表性研究成果</p></li><li><p><strong>项目实施进度计划</strong></p></li><li><p>预期成果</p></li><li><p><strong>社会效益与风险评估</strong></p></li></ol><p>在这九个主要的板块之中加黑的部分，也就是：<strong>3.项目的基本情况、4.主要研究内容和目标、7.项目实施进度计划、9.社会效益与风险评估</strong> 是主要的内容。其他几个部分填的都是一些相关的信息，可能就是填写几个表格。因此主要介绍一下这几块内容一个写法。</p><h2 id="二、书写技巧"><a href="#二、书写技巧" class="headerlink" title="二、书写技巧"></a>二、书写技巧</h2><p>在写项目书之前，通常会得到一个叫做“指南”的东西，这个里面说清楚了对方希望解决的问题还有希望达到的预期效果，比如本项目的指南，就说明了，想要用深度学习算法去完成芯片的缺陷检测，且列举了希望解决芯片缺陷中的哪些基本类型，并指明了要求是准确度达到95%以上。</p><p>所以各个部分都是围绕这些来写，也就是说，指南中的话反复出现在各个版块，且不要害怕重复。</p><h2 id="三、重点部分"><a href="#三、重点部分" class="headerlink" title="三、重点部分"></a>三、重点部分</h2><h3 id="1-项目的基本情况"><a href="#1-项目的基本情况" class="headerlink" title="1.项目的基本情况"></a>1.项目的基本情况</h3><ul><li>研究背景及意义。（研究背景和意义经常放一块去说，所以就可以归为一个小标题）<ul><li>首先芯片是什么，它在哪些方面广泛应用，有什么重要性和必要性。然后说《国家相关战略支持》对该产业的支持；</li><li>然后引到芯片缺陷检测方面，说一下为什么要进行芯片缺陷检测，指明这项任务的意义；</li><li>现有的芯片检测方法有哪些缺陷与不足，如果不改变会有什么后果；</li><li>引出当今机器视觉技术和深度学习技术的当今发展趋势，这项技术有什么优点。一些国外大公司已经开始布局。</li><li>使用深度学习进行芯片检测的意义：对国家、对产业、对落实某项国家政策。</li></ul></li><li>研究目标<ul><li>先用一句话概述：针对什么问题、利用&#x2F;基于什么技术优势、开发什么东西。</li><li>然后围绕着指南中的内容。算法要能解决哪些问题、应该具备什么样的特性（比如鲁棒性、可进化等）、准确度要达到什么程度。</li><li>还要超出指南，提出一些新的东西，比如本文讲算法部署到智能硬件。</li></ul></li><li>国内外研究现状<ul><li>搜集在芯片缺陷检测领域的相关文章，最好对不同的方法进行分类与归纳</li><li>最后要“综上所述”，概括出现有技术的问题，强调本项目研究的先进性与合理性。</li><li>记得要把引用的文献也写上。</li></ul></li></ul><h3 id="2-重要性与应用前景"><a href="#2-重要性与应用前景" class="headerlink" title="2.重要性与应用前景"></a>2.重要性与应用前景</h3><ul><li>“没我不行”。芯片缺陷检测很重要但国内技术落后。如果继续利用传统方法造成什么后果</li><li>“有我更好”。说一下用到的技术，这些技术有什么优势，用了之后可以解决指南中的那些问题。</li><li>应用前景，先简单提及背景：芯片产业很大，芯片缺陷的质检环节比不可少，有很大的应用前景。</li></ul><h3 id="3-研究内容和目标"><a href="#3-研究内容和目标" class="headerlink" title="3.研究内容和目标"></a>3.研究内容和目标</h3><ul><li>研究内容<ul><li>围绕着“指南”，将要解决的问题或者说要做的事，分为几个层级。每一个层级就是一个研究内容，这几个研究内容之间既相互独立又一脉相承，可以通过一个示意图先画出来。需要注意的是，这里每个研究内容要起一个小标题，要专业且完整。</li><li>示意图：<img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750704814-fed50527-2312-444e-beef-d40a15a2f2f0.png#clientId=u241462fe-5d44-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=378&id=u107e2a24&name=image.png&originHeight=496&originWidth=895&originalType=binary&ratio=1&rotation=0&showTitle=false&size=162309&status=done&style=none&taskId=udf3cab9e-d911-455e-af02-4dfd973c2bb&title=&width=681.9047619047619" alt="image.png"></li><li>然后在示意图下面，每一个内容描述一段话，并不涉及到具体技术，就是简单论述研究什么内容，算是对示意图的一个展开。</li></ul></li><li>研究方案<ul><li>研究方案也不是具体的内容，首先也是画一张图，讲清楚研究的步骤，对于每个研究内容，先做什么、后做什么</li><li>示意图：<img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750731174-9e24b0c1-3aff-423b-8947-032d73e8e805.png#clientId=u241462fe-5d44-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=620&id=uba2bab38&name=image.png&originHeight=814&originWidth=627&originalType=binary&ratio=1&rotation=0&showTitle=false&size=188594&status=done&style=none&taskId=u05d96eba-fa3e-47da-b2d5-eb6c34fa515&title=&width=477.7142857142857" alt="image.png"></li><li>然后再用语句详细的描述步骤</li></ul></li><li>技术路线<ul><li>这里就需要写每一部分的详细技术了，比如对于数据集的准备，要对数据集的数量、专家标注、用到的图像处理技术展开写，以及展示具体的芯片缺陷图片。对于用到的算法，就需要将结构、公示等都写上。</li><li>还是可以根据研究内容去分点写。</li></ul></li><li>关键技术和创新点<ul><li>因为纯写创新内容并不好写，所以这里可以分为：拟解决的关键问题、主要创新点。</li><li>这里的主要创新点就不一定非要是创新，就可以对应的写 如何去解决那些关键问题，当然最好还是展示出创新。 比如你既觉得关键问题是：目标检测算法的优化。那么对应的创新点就是：针对微小芯片缺陷检测的检测算法优化。这里面不用写太多具体技术，那些公式、算法的大头还是放在技术路线里面。</li></ul></li></ul><h3 id="3-项目的实施进度"><a href="#3-项目的实施进度" class="headerlink" title="3.项目的实施进度"></a>3.项目的实施进度</h3><p>这一部分根据协商好的时间，将过程按照半年来分，把研究的内容分号，然后对于每一部分，再写一些具体研究的步骤就可以。</p><h3 id="4-社会效益与风险评估"><a href="#4-社会效益与风险评估" class="headerlink" title="4.社会效益与风险评估"></a>4.社会效益与风险评估</h3><ul><li>对于社会效益。主要就是项目实施之后对社会能起到的积极的作用。主要的方面有：促进经济发展、促进社会进步、带动就业、提高企业的产能与质量、提高人民生活水平之类的，就往里面套着写。</li><li>风险评估分为几个版块：技术风险、商业风险、管理风险，还有风险如何规避。对于风险，都要落脚在风险较小之上。<ul><li>技术风险。对于关键技术、本单位进行了深入理论研究、关键技术进行了大量实验、证明可行。本单位致力于研究什么、有资质。得出结论：基本无风险和不确定因素。</li><li>管理风险。本项目承担单位，——机构承担过多项国家级重点项目的管理与实施，具有很好的项目管理措施和经验，在管理上无风险。</li><li>商业风险。国产率上看，中国—–比重不断提升。中国—–国产化率提升，市场规模有较大的发展空间。因此，本项目的市场前景非常广阔。</li><li>规避风险的主要措施。对实验室和学校的情况进行介绍。对该行业之前有所涉及与研究。对关键技术进行了论证之类的。</li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章根据对几天书写项目书的经验进行了总结。主要展示了项目书分为那些版块，每个版块主要写些什么内容。虽然可能并不适用于各类项目申请书的书写，但是也算是有了一个大致了解，不至于上手后不知道要干什么、不知道要查找哪些</p>]]></content>
    
    
    <categories>
      
      <category>经验总结</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FocusNote快捷操作</title>
    <link href="/2022/06/28/06FocusNote%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/06/28/06FocusNote%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><blockquote><p>现在写博客的顺序是：现在FocusNote（专注笔记）上写好，然后复制到typora上，之后再写到博客相应的markdown文档中。</p></blockquote><p>FocusNote是国产的笔记软件，界面很好看，书写也很方便，写一些复盘或者总结资料都在这个上面，在几年前也买下了永久版本。因此在这里简单记录一下常用的快捷方式，之后就不用经常跑官网去找了。</p><p><strong>段落相关：</strong></p><table><thead><tr><th align="center">标题</th><th align="center">Ctrl+alt+1&#x2F;2&#x2F;3</th></tr></thead><tbody><tr><td align="center">清除标题</td><td align="center">Ctrl+alt+0</td></tr><tr><td align="center">有序列表</td><td align="center">Ctrl+shift+i</td></tr><tr><td align="center">无序列表</td><td align="center">Ctrl+shift+u</td></tr><tr><td align="center">待办事宜</td><td align="center">Ctrl+shift+y</td></tr><tr><td align="center">引用</td><td align="center">Ctrl+shift+q</td></tr><tr><td align="center">代码块</td><td align="center">Ctrl+shift+c</td></tr><tr><td align="center">链接</td><td align="center">Ctrl+l</td></tr><tr><td align="center">公式</td><td align="center">Ctrl+alt+c</td></tr><tr><td align="center">附件</td><td align="center">Ctrl+alt+f</td></tr></tbody></table><p><strong>字体相关：</strong></p><table><thead><tr><th align="center">加粗</th><th align="center">Ctrl+b</th></tr></thead><tbody><tr><td align="center">斜体</td><td align="center">Ctrl+i</td></tr><tr><td align="center">下划线</td><td align="center">Ctrl+u</td></tr><tr><td align="center">中划线</td><td align="center">Ctrl+t</td></tr><tr><td align="center">高亮</td><td align="center">Ctrl+1&#x2F;2…&#x2F;9</td></tr><tr><td align="center">清除高亮</td><td align="center">Ctrl+0</td></tr></tbody></table><p><strong>页面相关：</strong></p><table><thead><tr><th align="center">查看页面信息</th><th align="center">alt+ctrl+l</th></tr></thead><tbody><tr><td align="center">打开大纲</td><td align="center">alt+ctrl+o</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>各类教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>专注笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FPGA学习1：初始FPGA</title>
    <link href="/2022/06/20/05FPGA%E5%AD%A6%E4%B9%A01%EF%BC%9A%E5%88%9D%E5%A7%8BFPGA/"/>
    <url>/2022/06/20/05FPGA%E5%AD%A6%E4%B9%A01%EF%BC%9A%E5%88%9D%E5%A7%8BFPGA/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="1-FPGA是什么"><a href="#1-FPGA是什么" class="headerlink" title="1 FPGA是什么"></a>1 FPGA是什么</h2><p>​FPGA(Field Programmable Gate Array,简称FPGA)，<strong>现场可编程</strong>门阵列，一种以数字电路为主的集成芯片，属于可编程逻辑器件PLD（Programmable Logic Device)的一种。</p><h3 id="FPGA的分类"><a href="#FPGA的分类" class="headerlink" title="FPGA的分类"></a><strong>FPGA的分类</strong></h3><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750559990-9a0d9775-2cb6-4823-acf7-1c785e34566d.png#clientId=u194feb0d-a974-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=226&id=u3c63d900&name=image.png&originHeight=296&originWidth=660&originalType=binary&ratio=1&rotation=0&showTitle=false&size=166931&status=done&style=none&taskId=ubdb33b0e-c9c8-4bbb-9ac3-2576512a064&title=&width=502.85714285714283" alt="image.png"></p><h3 id="FPGA工作原理"><a href="#FPGA工作原理" class="headerlink" title="FPGA工作原理"></a><strong>FPGA工作原理</strong></h3><p>​FPGA是可以通过编程<strong>改变芯片内部电路结构</strong>，以此来满足不同硬件产品的应用需求。FPGA可编程跟软件编程有着本质的区别，对于CPU或者单片机的编程，往往是通过改变上面的寄存器的配置来实现的，但是并不会改变这个芯片的逻辑功能，但FPGA是确确实实把芯片内部的电路改变了，比如，上图分类中的第二种叫反熔丝技术，熔丝就是将电路烧断，而反熔丝就是将烧断的电路在连接起来。</p><p>​并不能通过软件编程，让一枚图形处理芯片编程为一枚通信芯片，FPGA则可以。FPGA的可编程性，叫硬件可编程。他让FPGA可以从逻辑门阵列进行编程，从而使FPGA可以在逻辑电路层面上改变。</p><p>​上面是比较直观的理解，接下来给出学术上的原理解释：</p><p>​FPGA采用了逻辑单元阵列LCA（Logic Cell Array）这样一个概念，内部包括可配置逻辑模块CLB（Configurable Logic Block）、输入输出模块IOB（Input Output Block）和内部连线（Interconnect）三个部分。 现场可编程门阵列（FPGA）是可编程器件，与传统逻辑电路和门阵列（如PAL，GAL及CPLD器件）相比，FPGA具有不同的结构。FPGA利用小型查找表（16×1RAM）来实现组合逻辑，每个查找表连接到一个D触发器的输入端，触发器再来驱动其他逻辑电路或驱动I&#x2F;O，由此构成了既可实现组合逻辑功能又可实现时序逻辑功能的基本逻辑单元模块，这些模块间利用金属连线互相连接或连接到I&#x2F;O模块。FPGA的逻辑是通过向内部静态存储单元加载编程数据来实现的，存储在存储器单元中的值决定了逻辑单元的逻辑功能以及各模块之间或模块与I&#x2F;O间的联接方式，并最终决定了FPGA所能实现的功能，FPGA允许无限次的编程。</p><h3 id="“现场可编程”特性"><a href="#“现场可编程”特性" class="headerlink" title="“现场可编程”特性"></a><strong>“现场可编程”特性</strong></h3><p>​FPGA可以在现场完成编程，而不需要把芯片拆下来，或是送回厂商来完成这个编程的操作，可通过远程或本地完成真正意义上的实时编程。</p><h2 id="2-FPGA的优势"><a href="#2-FPGA的优势" class="headerlink" title="2 FPGA的优势"></a><strong>2 FPGA的优势</strong></h2><p>​FPGA可以实现任意电路组合，我们可以把FPGA看成是一堆乐高，根据需要既可以组成非常简单的模型，也可以组合出非常复杂的模型。这就使得FPGA具备高度的灵活性。</p><p>​因为FPGA是通过逻辑电路来实现功能的，所以它的算力非常强，同时功耗非常低。因此很多人称它成为“芯片之王”。目前在很多行业被广泛使用。</p><p>总结，FPGA的优势：</p><p>1、编程灵活，开发周期短（可以替代ASIC）；</p><p>2、并发处理，速度非常快；</p><p>3、功耗低；</p><p>4、FPGA技术趋于成熟，成本已经和ASIC相当。</p><h2 id="3-FPGA的应用方向"><a href="#3-FPGA的应用方向" class="headerlink" title="3 FPGA的应用方向"></a>3 FPGA的应用方向</h2><ol><li>通信领域<ul><li>低延时 高效率</li><li>产品快速开发 各种协议的切换</li></ul></li><li>视频图像处理<ul><li>最高的实时性</li></ul></li><li>人工智能<ul><li>加速深度学习</li></ul></li><li>汽车驾驶<ul><li>低延时</li></ul></li></ol><h2 id="4-产业现状"><a href="#4-产业现状" class="headerlink" title="4 产业现状"></a>4 产业现状</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750535779-1b383c83-cacc-442b-9f2e-72a5980a474e.png#clientId=u194feb0d-a974-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=283&id=ue1421cac&name=image.png&originHeight=371&originWidth=801&originalType=binary&ratio=1&rotation=0&showTitle=false&size=173730&status=done&style=none&taskId=u7bf320cc-af51-421a-bb3f-99c17b18693&title=&width=610.2857142857143" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750543785-19099077-2ce0-4263-a078-aca86ca6cc73.png#clientId=u194feb0d-a974-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=314&id=u6764d9f4&name=image.png&originHeight=412&originWidth=785&originalType=binary&ratio=1&rotation=0&showTitle=false&size=126887&status=done&style=none&taskId=u80e370b6-f687-4f17-9e25-3c632eefe7d&title=&width=598.0952380952381" alt="image.png"></p><p>​国外的赛灵思比较厉害，是巨头</p><p>​国内普遍性能落后一些</p>]]></content>
    
    
    <categories>
      
      <category>FPGA学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>FPGA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图床搭建</title>
    <link href="/2022/06/17/04Markdown%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86--%E5%9B%BE%E5%BA%8A%E4%B8%8E%E8%BD%AC%E7%A0%81/"/>
    <url>/2022/06/17/04Markdown%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86--%E5%9B%BE%E5%BA%8A%E4%B8%8E%E8%BD%AC%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><h2 id="一、图床"><a href="#一、图床" class="headerlink" title="一、图床"></a>一、图床</h2><h3 id="1-图床介绍"><a href="#1-图床介绍" class="headerlink" title="1 图床介绍"></a>1 图床介绍</h3><p>对于不写博客的伙伴，图床可能是一个陌生的词汇。从名字来看，应该和存储图片有关，但为什么要叫做“床”呢？</p><p>图床其实是互联网上进行图片存储的空间。因为博客往往是以markdown的形式发布，而markdown不同于平时编辑的word文档，它其中显示的图片并不是嵌入在文件中，而是引用外部的源。语法如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">!<span class="hljs-selector-attr">[]</span>(这里写图片在本服务器或本计算机的存储地址，或者网上图片的网址)<br></code></pre></td></tr></table></figure><p>这样以来，就会出现两个问题：</p><ol><li>如果是引用存储在本地的图片<ul><li>图片的路径不容易写对</li><li>如果误将本地的图片删除，那么博客中就会报错</li></ul></li><li>如果随便引用一个网上的图片<ul><li>这个图片可能随时会被作者删除或者其他原消失</li></ul></li></ol><p>在这种情况下，自己在网络上开辟一个安全可靠的网络空间就很重要。本文就记录一下图床的搭建与使用。</p><h3 id="2-图床搭建"><a href="#2-图床搭建" class="headerlink" title="2 图床搭建"></a>2 图床搭建</h3><p>github、Gitee、阿里云等都可以开辟空间上传图片，所以本身就具备了作为图床的能力，我们就可以利用这些免费的空间来搭建图床。然而每次手动上传操作时比较困难的，这是出现了一个图床的管理工具叫picgo，这是一个免费开源的工具。界面如下：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750310286-2f68bbb9-2ddf-46fb-a81d-5ba05476ea10.png#clientId=ufcc7160c-3d9f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=322&id=u692e3567&name=image.png&originHeight=423&originWidth=758&originalType=binary&ratio=1&rotation=0&showTitle=false&size=85490&status=done&style=none&taskId=u0c240480-b07e-4e03-8d20-f99edb6f6f5&title=&width=577.5238095238095" alt="image.png"></p><p>配置好连接后，将图片拖到虚线框中就可以方便的上传到图床空间，实现的机制就是token验证。</p><p>建立连接的方法也很简单，在picgo的官方文档就给出了详细的教程（包含github、七牛图库、阿里云OSS都有）：<a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#github%E5%9B%BE%E5%BA%8A">配置手册 | PicGo</a></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750320674-dbb881cc-53e3-4484-9eff-ac8b2f224815.png#clientId=ufcc7160c-3d9f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=293&id=u9a348ddb&name=image.png&originHeight=385&originWidth=776&originalType=binary&ratio=1&rotation=0&showTitle=false&size=95113&status=done&style=none&taskId=udab860cd-e9d6-442f-82e1-c6ba9cb2ef9&title=&width=591.2380952380952" alt="image.png"></p><p>如果在配置过程中有疑问可以观看这个B站视频<a href="https://www.bilibili.com/video/BV1Lt411J7Mp?spm_id_from=333.337.search-card.all.click">PicGo五分钟打造你的私人图床（稳定、快速、免费）_哔哩哔哩_bilibili</a></p><p>这是SMMS图床上传后的界面：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750328084-4f3d129a-518d-4537-8ce4-5ca0da627003.png#clientId=ufcc7160c-3d9f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=195&id=u3042c5f5&name=image.png&originHeight=256&originWidth=760&originalType=binary&ratio=1&rotation=0&showTitle=false&size=39316&status=done&style=none&taskId=u73750f69-6526-4188-ac57-eae3c1d9564&title=&width=579.047619047619" alt="image.png"></p><h2 id="二、转码"><a href="#二、转码" class="headerlink" title="二、转码"></a>二、转码</h2><p>这个方法简单粗暴，就是将图片转换为一段代码，就可以将其以文字的形式嵌入markdown文档</p><h3 id="1-通过在线网站"><a href="#1-通过在线网站" class="headerlink" title="1 通过在线网站"></a>1 通过在线网站</h3><p><a href="http://www.jsons.cn/img2base64">图片在线转换base64编码-在线base64编码转换成图片工具 (jsons.cn)</a><br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750338047-16991d1b-be75-4141-b84d-8c041c929899.png#clientId=ufcc7160c-3d9f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=283&id=u8f82ce94&name=image.png&originHeight=371&originWidth=784&originalType=binary&ratio=1&rotation=0&showTitle=false&size=76946&status=done&style=none&taskId=udeb679af-3d94-405e-80a0-20fd65cc179&title=&width=597.3333333333334" alt="image.png"></p><h3 id="2-通过运行python代码"><a href="#2-通过运行python代码" class="headerlink" title="2 通过运行python代码"></a>2 通过运行python代码</h3><p>参考<a href="https://blog.csdn.net/weixin_35757704/article/details/123466261">python图片转base64编码，与base64编码转图片_呆萌的代Ma的博客-CSDN博客_python 图片base64编码</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> io <span class="hljs-keyword">import</span> BytesIO<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">img_to_base64</span>(<span class="hljs-params">image_path</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;图片转base64，返回byte类型&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(image_path, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> image_file:<br>        data = base64.b64encode(image_file.read())<br>        <span class="hljs-keyword">return</span> data<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">base64_to_img</span>(<span class="hljs-params">base64_data</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;base64转图片&quot;&quot;&quot;</span><br>    source_image = Image.<span class="hljs-built_in">open</span>(BytesIO(base64.b64decode(base64_data)))<br>    source_image.show()  <span class="hljs-comment"># 展示图片</span><br>    <span class="hljs-keyword">return</span> source_image<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    base64_d = img_to_base64(<span class="hljs-string">&quot;this_img.png&quot;</span>)  <span class="hljs-comment"># 路径转base64</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;base64的值：&quot;</span>, base64_d.decode(<span class="hljs-string">&quot;utf-8&quot;</span>)[:<span class="hljs-number">40</span>], <span class="hljs-string">&quot;....&quot;</span>)  <span class="hljs-comment"># 打印base64的前40个字符</span><br>    image = base64_to_img(base64_d)<br>    image.save(<span class="hljs-string">&quot;本地图片.png&quot;</span>)  <span class="hljs-comment"># 保存图片</span><br></code></pre></td></tr></table></figure><h3 id="3-通过typora"><a href="#3-通过typora" class="headerlink" title="3 通过typora"></a>3 通过typora</h3><p>刚刚发现将图片复制进typora后会自动转换。所以就可以实现一种操作：</p><p>先在word的工具上写好文档，然后整个复制到typora中，就生成了最终能上传的文档。</p><h3 id="4-缺点"><a href="#4-缺点" class="headerlink" title="4 缺点"></a>4 缺点</h3><p>图片的信息量很大，转换出来的编码也很长，如下</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750349171-9f14e687-9f4f-4a20-a3a7-40df2b04bb70.png#clientId=ufcc7160c-3d9f-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=376&id=ue7f0251b&name=image.png&originHeight=493&originWidth=764&originalType=binary&ratio=1&rotation=0&showTitle=false&size=604955&status=done&style=none&taskId=u6adf80de-41a4-4bda-91b9-fbd4e2f8cb3&title=&width=582.0952380952381" alt="image.png"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本篇总结了markdown中图片的处理方法，第一种是利用图床，方便快捷，但需要进行相关配置；第二种利用转码，可以将图片嵌入markdown文件，但是编码很长，很不美观。但是两种方法的操作都不困难。</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>最近发现从语雀中导出的markdown格式文件会自动将图片上传服务器并转为正确格式，但是hexo上传之后又显示不出来，有两种解决方法：<br>1.在markdown文件中加一条语句：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">&lt;meta name<span class="hljs-operator">=</span><span class="hljs-string">&quot;referrer&quot;</span> content<span class="hljs-operator">=</span><span class="hljs-string">&quot;no-referrer&quot;</span> /&gt;<br></code></pre></td></tr></table></figure><p>2.将每个图片的连接中从#client开始全部删掉就可以正常显示了<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656760225647-19d20436-ff6c-43fa-9148-a05c0107d6ad.png#clientId=u17069117-dbbb-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=88&id=u0d9f2693&name=image.png&originHeight=115&originWidth=1235&originalType=binary&ratio=1&rotation=0&showTitle=false&size=49941&status=done&style=none&taskId=uf28d6af3-cdd6-4dd9-9710-3f46422516d&title=&width=940.952380952381" alt="image.png"></p>]]></content>
    
    
    <categories>
      
      <category>各类教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>图床</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电脑远程控制</title>
    <link href="/2022/06/16/03%E7%94%B5%E8%84%91%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <url>/2022/06/16/03%E7%94%B5%E8%84%91%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p>最近探索了两种远程控制的方法。</p><blockquote><p><strong>第一种是用向日葵</strong>，使用方法非常简单，只需要在ipad和电脑上都下载向日葵，输入相应的访问号后就能直接实现访问，连接速度、稳定性都很不错，不好的一点就是<strong>交互性很差</strong>，鼠标的邮右键和滚轮无法操作，这对于经常使用电脑已经习惯电脑操作的人几乎无法接受。所以以后可以单用向日葵来传输电脑上的文件。<br><strong>另一款软件是RDcient</strong>，这个软件利用的是windows系统自己的远程访问功能，所以克服了不能使用邮件和滚轮的问题，所有的操作都和电脑一模一样，所以只要有个可以蓝牙连接ipad的键盘还有鼠标可以完美的实现远程办公。但是它的配置过程稍微复杂一些，而且还需要window是专业版（因为远程功能是专业版才会提供的。同时另一个致命问题是rdclient只能实现统一局域网下访问，但是有其他方法能实现外网的访问。</p></blockquote><p>本文就来介绍RDclient的具体步骤（包括windows专业版激活、RDclient的配置以及如何实现外网访问）</p><h3 id="1-window专业版激活"><a href="#1-window专业版激活" class="headerlink" title="1. window专业版激活"></a><strong>1. window专业版激活</strong></h3><p>这个很简单，可以在百度上搜索相应的激活码，但是可能大多失效。可以去淘宝上买激活码，也就几块钱，商家也会给教程，教你一步步操作。</p><h3 id="2-RDclient配置"><a href="#2-RDclient配置" class="headerlink" title="2. RDclient配置"></a><strong>2. RDclient配置</strong></h3><p>在ipad应用中心下载软件。之后会让填写相应的用户信息：</p><ol><li>名称写为IP地址</li><li>用户名和密码是你登录windows时的微软账号密码</li><li>网关写为默认网关，网关界面中的用户还是选择之前设置好的微软账户</li><li>保存后即可实现访问</li></ol><p>ip地址和默认网关可以在电脑运行框中输入ifconfig现实。<br>运行框的唤起方法：：win+r 在小框中输入cmd<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656750133093-f388befe-16be-4562-a6f5-8b6e31e811ff.png#clientId=u7f180abb-9154-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=130&id=u95378e37&margin=%5Bobject%20Object%5D&name=image.png&originHeight=170&originWidth=760&originalType=binary&ratio=1&rotation=0&showTitle=false&size=89834&status=done&style=none&taskId=u08800f33-8f04-47fd-9d89-ebb3253f60d&title=&width=579.047619047619" alt="image.png"></p><h3 id="3-实现外网访问"><a href="#3-实现外网访问" class="headerlink" title="3. 实现外网访问"></a><strong>3. 实现外网访问</strong></h3><p>实现外网访问的原理很简单：让外网伪装成局域网，可以用到一个软件叫蒲公英，在电脑上下载一个，在平板上下载一个，注册账号使其运行，两个地方使用同一账号登录后就会自动组网，变成虚拟的局域网，至于这个虚拟局域网的ip网址可以在蒲公英管理平台这个网页看到。（蒲公英的下载地址不好找，直接贴在这里<a href="https://pgy.oray.com/download/personal/#visitor">蒲公英软件客户端官方下载 - 贝锐蒲公英官网 (oray.com)</a>）<br>当知道虚拟ip后，再用ipconfig指令查看ipv4的地址，找到其中是虚拟ip的那个（两个很相似），然后查看对应的网关，知道这些信息后，就像之前配置RDclient的操作一边，再建立一个连接，这就实现了外网访问。（但要注意，ipad和电脑上的蒲公英必须保持运行的状态）</p>]]></content>
    
    
    <categories>
      
      <category>各类教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>电脑远程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MarkDown语法</title>
    <link href="/2022/06/13/02MarkDown%E8%AF%AD%E6%B3%95/"/>
    <url>/2022/06/13/02MarkDown%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><blockquote><p>本篇文章记录一些Markdown的语法，为以后写博客做好准备。<br>参考学习文章：<a href="https://blog.csdn.net/u014061630/article/details/81359144">https://blog.csdn.net/u014061630/article/details/81359144</a></p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>文章分为四部分内容：快捷键、基本语法、常用技巧、软件推荐。</p><h2 id="一、快捷键"><a href="#一、快捷键" class="headerlink" title="一、快捷键"></a>一、快捷键</h2><table><thead><tr><th>操作</th><th>快捷键</th></tr></thead><tbody><tr><td>加粗</td><td>Ctrl+B</td></tr><tr><td>斜体</td><td>Ctrl+I</td></tr><tr><td>引用</td><td>Ctrl + Q</td></tr><tr><td>插入链接</td><td>Ctrl + L</td></tr><tr><td>插入代码</td><td>Ctrl + K</td></tr><tr><td>插入图片</td><td>Ctrl + G</td></tr><tr><td>提升标题</td><td>Ctrl + H</td></tr><tr><td>有序列表</td><td>Ctrl + O</td></tr><tr><td>无序列表</td><td>Ctrl + U</td></tr><tr><td>横线</td><td>Ctrl + R</td></tr><tr><td>撤销</td><td>Ctrl + Z</td></tr><tr><td>重做</td><td>Ctrl + Y</td></tr></tbody></table><h2 id="二、基本语法"><a href="#二、基本语法" class="headerlink" title="二、基本语法"></a>二、基本语法</h2><h4 id="2-1-标题分级"><a href="#2-1-标题分级" class="headerlink" title="2.1 标题分级"></a>2.1 标题分级</h4><p><strong>共支持六级标题</strong></p><p>一级标题：# 一级</p><p>二级标题：## 二级</p><p>三级标题：### 三级</p><p>效果如下：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656749553072-0659f39d-1e5e-46b4-a3bb-f32da38b1093.png#clientId=ueff216f1-536b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=203&id=ubf2dc60e&name=image.png&originHeight=266&originWidth=240&originalType=binary&ratio=1&rotation=0&showTitle=false&size=14782&status=done&style=none&taskId=udc8a66c0-7b2d-4cd6-a612-6be35f7c949&title=&width=182.85714285714286" alt="image.png"><br>（4-6级依次类推）</p><h4 id="2-2字体的斜体、粗体、删除线"><a href="#2-2字体的斜体、粗体、删除线" class="headerlink" title="2.2字体的斜体、粗体、删除线"></a>2.2字体的斜体、粗体、删除线</h4><p>倾斜1：*演示文字*</p><p>倾斜2：_演示文字_</p><p>加粗1：**演示文字**</p><p>倾斜加粗：***演示文字***</p><p>删除线：~~演示文字~~</p><p>效果如下：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656749561236-b86afdea-6b13-4730-93c0-2e5aa01792fa.png#clientId=ueff216f1-536b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=166&id=uc8c8e2ad&name=image.png&originHeight=218&originWidth=276&originalType=binary&ratio=1&rotation=0&showTitle=false&size=42608&status=done&style=none&taskId=ua64d4457-812f-4886-b3e5-6edcf67dfba&title=&width=210.28571428571428" alt="image.png"></p><h4 id="2-3代码块"><a href="#2-3代码块" class="headerlink" title="2.3代码块"></a>2.3代码块</h4><p>`&#96;&#96;<br>代码内容<br>import numpy as np<br>import pandas as pd<br>`&#96;&#96;</p><p>效果演示：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elm">代码内容：<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br></code></pre></td></tr></table></figure><h4 id="2-4引用"><a href="#2-4引用" class="headerlink" title="2.4引用"></a>2.4引用</h4><p>&gt;引用1</p><p>&gt;&gt;引用2</p><p>&gt;&gt;&gt;引用3</p><p>效果演示：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656749569223-f4a7d832-2c3e-4a45-8c3b-16d01e23bf39.png#clientId=ueff216f1-536b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=240&id=ubbaf4df3&name=image.png&originHeight=315&originWidth=237&originalType=binary&ratio=1&rotation=0&showTitle=false&size=7297&status=done&style=none&taskId=u2efd95b2-6f58-48c0-9802-2ec3eedcc76&title=&width=180.57142857142858" alt="image.png"></p><p>还可进行嵌套：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656749575354-0515b5aa-b6ba-4591-978e-7ce2f663cd4f.png#clientId=ueff216f1-536b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=158&id=u8bdf516f&name=image.png&originHeight=207&originWidth=323&originalType=binary&ratio=1&rotation=0&showTitle=false&size=6889&status=done&style=none&taskId=u12336552-60a7-477d-8e78-9287e4e0175&title=&width=246.0952380952381" alt="image.png"></p><h4 id="2-5有序列表与无需列表"><a href="#2-5有序列表与无需列表" class="headerlink" title="2.5有序列表与无需列表"></a>2.5有序列表与无需列表</h4><blockquote><p>无序列表</p></blockquote><p>- 第一行</p><p>- 第二行</p><p>- 第三行</p><p>（注意-后面必须加一个空格才能生效）</p><p>效果演示：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656749583241-5f3c2e7e-59f4-4cfd-96d7-1ddedfaeb3a9.png#clientId=ueff216f1-536b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=130&id=uee907fe0&name=image.png&originHeight=170&originWidth=167&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9051&status=done&style=none&taskId=u5dde10d2-17f3-46c4-be46-90f7d1b7bae&title=&width=127.23809523809524" alt="image.png"></p><blockquote><p>有序列表</p></blockquote><p>1.(空格)第一行</p><p>2.(空格)第二行</p><p>3.(空格)第三行</p><p>效果演示：</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656749590936-eb6669e7-1b78-4fa2-94a2-e4172cd4cfe9.png#clientId=ueff216f1-536b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=125&id=u1eb580c5&name=image.png&originHeight=164&originWidth=188&originalType=binary&ratio=1&rotation=0&showTitle=false&size=9409&status=done&style=none&taskId=u7ee3e5cb-1dab-4ac1-90dd-2a933d578c6&title=&width=143.23809523809524" alt="image.png"></p><h4 id="2-6表格"><a href="#2-6表格" class="headerlink" title="2.6表格"></a>2.6表格</h4><blockquote><p>使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行</p></blockquote><p>|  表头    | 表头  |<br>|  - - - -  | - - - -  |<br>| 单元格  | 单元格 |<br>| 单元格  | 单元格 |</p><p>效果演示：</p><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><h2 id="三、特殊用法"><a href="#三、特殊用法" class="headerlink" title="三、特殊用法"></a>三、特殊用法</h2><h4 id="3-1-想输出某个符号，不想让它作为语法标记符，使用-，-后面加的字符会显示出来"><a href="#3-1-想输出某个符号，不想让它作为语法标记符，使用-，-后面加的字符会显示出来" class="headerlink" title="3.1 想输出某个符号，不想让它作为语法标记符，使用\，\后面加的字符会显示出来"></a>3.1 想输出某个符号，不想让它作为语法标记符，使用\，\后面加的字符会显示出来</h4><h4 id="3-2-如果想更换字体"><a href="#3-2-如果想更换字体" class="headerlink" title="3.2 如果想更换字体"></a>3.2 如果想更换字体</h4> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"> <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">face</span>=<span class="hljs-string">&quot;黑体&quot;</span>&gt;</span>我是黑体字<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">face</span>=<span class="hljs-string">&quot;微软雅黑&quot;</span>&gt;</span>微软雅黑<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">face</span>=<span class="hljs-string">&quot;楷体&quot;</span>&gt;</span>楷体<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果演示</p><p><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/11/kuangstudybcae9639-a98b-4dcd-86ce-3d2a40e1a51f.png#crop=0&crop=0&crop=1&crop=1&id=Q7UxV&originHeight=137&originWidth=174&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="></p><h4 id="3-3-规定颜色和大小"><a href="#3-3-规定颜色和大小" class="headerlink" title="3.3 规定颜色和大小"></a>3.3 规定颜色和大小</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;font <span class="hljs-attribute">color</span>=#1157ff <span class="hljs-attribute">size</span>=4 <span class="hljs-attribute">face</span>=<span class="hljs-string">&quot;宋体&quot;</span>&gt;颜色为#11577ff，大小为4的宋体&lt;/font&gt;<br></code></pre></td></tr></table></figure><p>演示效果</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656749604581-9f9b94ed-355f-4a34-af29-ba911cfa27ae.png#clientId=ueff216f1-536b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=56&id=u70fb10a5&name=image.png&originHeight=73&originWidth=489&originalType=binary&ratio=1&rotation=0&showTitle=false&size=11890&status=done&style=none&taskId=u5a06b5e7-6438-483a-a010-40a9272a603&title=&width=372.57142857142856" alt="image.png"></p><h2 id="四、软件推荐"><a href="#四、软件推荐" class="headerlink" title="四、软件推荐"></a>四、软件推荐</h2><p>Typora 是一款支持实时预览的 Markdown 文本编辑器。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是完全免费的。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/759833/1656749615115-f012e148-d1b7-444b-8a56-b72cebdc7c10.png#clientId=ueff216f1-536b-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=119&id=ub064df53&name=image.png&originHeight=156&originWidth=751&originalType=binary&ratio=1&rotation=0&showTitle=false&size=17616&status=done&style=none&taskId=u1a1af3be-8d10-42e9-bd67-ab7838d18bc&title=&width=572.1904761904761" alt="image.png"><br>下载地址：<a href="https://www.typora.io/">https://www.typora.io/</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文介绍的是markdown的基础部分，除此之外还有能写出公式的latex语法以及绘制流程图的操作，这些知识以后有时间继续总结</p>]]></content>
    
    
    <categories>
      
      <category>各类教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo的基本使用</title>
    <link href="/2022/06/12/01hexo%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/06/12/01hexo%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer" /><p>这是第一篇文章，简单记录一下hexo发布文章、部署服务器等使用命令。</p><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><h3 id="创建新的文章"><a href="#创建新的文章" class="headerlink" title="创建新的文章"></a>创建新的文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span>   引号中写文章名称<br></code></pre></td></tr></table></figure><p>更多信息访问: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>更多信息访问: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate     这个命令可以简化为 hexo g<br></code></pre></td></tr></table></figure><p>更多信息访问: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署到网站"><a href="#部署到网站" class="headerlink" title="部署到网站"></a>部署到网站</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy    这个命令可以简写为 hexo d<br></code></pre></td></tr></table></figure><p>更多信息访问: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="相关语法"><a href="#相关语法" class="headerlink" title="相关语法"></a>相关语法</h2><h3 id="文章分类"><a href="#文章分类" class="headerlink" title="文章分类"></a>文章分类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 给文章添加一个分类。</span><br>categories: 1<br><span class="hljs-comment"># 这会将文章分类1/2子分类目录下。</span><br>categories: [1, 2]<br><span class="hljs-comment">#多分类，文章被分类到123、456以及123的自分类789这3个分类下面</span><br><span class="hljs-comment">#注意-后面有一个空格</span><br>categories:<br>   - [123]   <br>   - [456]<br>   - [123, 789]<br></code></pre></td></tr></table></figure><h3 id="文章标签"><a href="#文章标签" class="headerlink" title="文章标签"></a>文章标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#两种不同的写法</span><br>tags:<br>  - 123<br>  - 456<br>tags: [123, 456]<br></code></pre></td></tr></table></figure><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">excerpt: 这里写简介内容<br></code></pre></td></tr></table></figure><h2 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a>报错解决</h2><h3 id="有时在”hexo-d”后会出现error的提示"><a href="#有时在”hexo-d”后会出现error的提示" class="headerlink" title="有时在”hexo d”后会出现error的提示"></a>有时在”hexo d”后会出现error的提示</h3><p>可以依次执行下面三条命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br>$ hexo g<br>$ hexo d<br></code></pre></td></tr></table></figure><h3 id="一段时间后突然hexo命令失效"><a href="#一段时间后突然hexo命令失效" class="headerlink" title="一段时间后突然hexo命令失效"></a>一段时间后突然hexo命令失效</h3><p>之前看的教程里环境变量的配置是错误的，也不知道当时是怎么运行的，这里再简单重新记录一下<br>之前的：D:*******\NODE_JS\node_global\node_modules\hexo-cli\node_modules.bin<br>现在的：D:*******\NODE_JS\node_global\node_modules\hexo-cli\bin<br>后者是正确的</p>]]></content>
    
    
    <categories>
      
      <category>各类教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
