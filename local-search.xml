<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>FPGA学习2：相关软件安装</title>
    <link href="/2022/06/30/FPGA%E5%AD%A6%E4%B9%A02%EF%BC%9A%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    <url>/2022/06/30/FPGA%E5%AD%A6%E4%B9%A02%EF%BC%9A%E7%9B%B8%E5%85%B3%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>前前后后耗时三天，终于将用到的quartus、器件库、modelsim软件下载、破解、关联配置做好了。一路上碰到了各种奇奇怪怪的问题，有一点点地查找解决方案，现在把踩过的坑，以及找好的安装包分享到这里，便于自己以后使用，也给大家提供便捷。</p><p>首先要清楚quartus和modelsim分别是干什么的，Quartus是开发软件，可以进行项目开发、Verilog代码的编写等，就像是写Python所使用的pycharm；Modelsim是仿真软件，仿真顾名思义，就是将实际的工作电路模拟出来，可以方便查看输出等结果是否正确。</p><p>主要参考的教程是野火出品的这个视频，它的网址如下，但是其中没有具体说明软件的下载地址与破解方法，会遇到的常见问题也没有进行说明。<a href="https://www.bilibili.com/video/BV17z411i7er?p=3&vd_source=efae70b1a755d9c960b4d6e78ad98612">【野火】FPGA系列教学视频，真正的手把手教学，“波形图”教学法，现场画波形图写代码，硬件基于野火FPGA EP4CE10征途系列开发板，已完结_哔哩哔哩_bilibili</a></p><h2 id="一、quartus下载与破解"><a href="#一、quartus下载与破解" class="headerlink" title="一、quartus下载与破解"></a>一、quartus下载与破解</h2><p>quartus的下载地址为：<a href="https://www.jb51.net/softs/545630.html">quartus ii 13.0破解版下载 quartus ii(PLD&#x2F;FPGA开发软件) 13.0 免费特别版(附注册机) 下载-脚本之家 (jb51.net)</a></p><p><img src="https://s2.loli.net/2022/06/30/fNY8PZ4s1J6RkHT.jpg"></p><p>在这个网盘中下载下来之后会带有破解器，该网页也有破解的具体操作，这里不做过多的讲解，这一步遇到的坑:</p><ol><li>一定要将该软件安装在全英文路径，如果有中文路径的话会出现软件打不开的情况。</li><li>破解的原理可能与电脑的网卡有关，在电脑有多个网卡或者有虚拟网卡时会有多个NIC(ID)，这时候复制第一个就可以。</li></ol><p>破解完如何查看是否破解成功：</p><ol><li>在进入软件的时候，没有出现相关提醒</li><li>在license setup中可以看到到期的日期为2035年 <img src="https://s2.loli.net/2022/06/30/CuFdve7VfPNmU3k.jpg"></li></ol><h2 id="二、quartus器件库的下载"><a href="#二、quartus器件库的下载" class="headerlink" title="二、quartus器件库的下载"></a>二、quartus器件库的下载</h2><p>器件库的安装可以参考这篇文章：<a href="https://blog.csdn.net/sou_nuo/article/details/117092405">Quartus II 13.0 添加器件库教程(包含下载地址)_阿聍的博客-CSDN博客_quartus器件库下载</a></p><p>但是一定要注意，不能用里面提供下载的器件库，因为器件库的版本必须与quartus完全一致，这里我就踩过坑，虽然版本都是13.0，但在这后面还有几位是不一致的，所以在网上找了很久才下载下来合适的器件库版本，下载地址如下：</p><p>链接：<a href="https://pan.baidu.com/s/1yIKSO0cfoZ0eYESn3lhv-g">https://pan.baidu.com/s/1yIKSO0cfoZ0eYESn3lhv-g</a>   提取码：ucm3</p><p>还有一点可能遇到的问题，就是教程里安装器件库的程序是从这个地方打开的</p><p><img src="https://s2.loli.net/2022/06/30/S2kwjEirXPFJ46e.jpg"></p><h2 id="三、modelsim的下载与破解"><a href="#三、modelsim的下载与破解" class="headerlink" title="三、modelsim的下载与破解"></a>三、modelsim的下载与破解</h2><p>modelsim的下载地址如下：[modelsim se 10.5破解版下载_HDL语言仿真软件 v2020.5<a href="https://www.xiazai99.com/down/soft159256.html">网盘资源] - 99下载站 (xiazai99.com)</a></p><p>同样，在这个文章中也说明了破解的方法，但是如果按其操作，会出现各种错误，这部分错误的解决也是我花费时间最多的地方。</p><ol><li>在安装modelsim的过程中，不要一直选择是或者next，在其中有一步让选择是否安装相关驱动，一定要选择否，不然电脑就会蓝屏。这是血的教训。</li><li>如果按照教程的破解方法处理完毕，还是没有成功，很可能还是网卡有多个原因，这时可以直接将电脑的WiFi关掉，在进行破解</li><li>破解之后首次打开要使用管理员身份。</li></ol><h2 id="四、quartus与modelsim相关联"><a href="#四、quartus与modelsim相关联" class="headerlink" title="四、quartus与modelsim相关联"></a>四、quartus与modelsim相关联</h2><p>这一操作在引言部分的野火教程中有，但是按其操作还是会出现问题（但首先还是得先按着里面的操作一遍）。</p><ol><li><p>这个教程里跳过了新建项目，编写Verilog代码的步骤，直接进行仿真测试，我们没有相关程序的话是没发测试的，所以也要先建项目，写代码，这里看可以参考这个文章:<a href="https://blog.csdn.net/qq_37424623/article/details/123207484">Quartus软件创建第一个工程_驽马同学的博客-CSDN博客_quartus 创建工程</a>。但是这里面的代码又只展示了一半，还是图片，作为新手，完全不懂，无法操作，所以找了一段简单的代码，替换掉这篇文章中的Verilog进行测试，代码如下：  </p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs markdown">`timescale  1ns/1ns<br>///////////////////////////////////////////////////////////////////////////<br>// Author        : EmbedFire<br>// Create Date   : 2019/03/12<br>// Module Name   : led<br>// Project Name  : led<br>// Target Devices: Altera EP4CE10F17C8N<br>// Tool Versions : Quartus 13.0<br>// Description   : 按键控制LED灯<br>//<br>// Revision      : V1.0<br>// Additional Comments:<br>// <br>// 实验平台: 野火<span class="hljs-emphasis">_征途Pro_</span>FPGA开发板<br>// 公司    : http://www.embedfire.com<br>// 论坛    : http://www.firebbs.cn<br>// 淘宝    : https://fire-stm32.taobao.com<br>//////////////////////////////////////////////////////////////////////////<br><br><br>module  myled<br>(<br><span class="hljs-code">    input   wire    key_in  ,   //输入按键</span><br><span class="hljs-code"></span><br><br><span class="hljs-code">    output  wire    led_out     //输出控制led灯</span><br><span class="hljs-code">);</span><br><span class="hljs-code"></span><br><br>//<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>//<br>//<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-emphasis">* Main Code <span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>//</span><br><span class="hljs-emphasis">//<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>//</span><br><span class="hljs-emphasis">//led_out:led灯输出的结果为key_in按键的输入值</span><br><span class="hljs-emphasis">assign  led_out = key_in;</span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis"></span><br><span class="hljs-emphasis">endmodule</span><br></code></pre></td></tr></table></figure></li><li><p>在替换了上面的代码之后，新的问题出现，quartus无法分析成功，因为命名的问题，因为代码中主程序名还有文件名、以及项目名有一定的关系，把它们几个全设置为myled就可以成功。</p></li><li><p>在分析成功之后，点击仿真，按理说就应该打开modelsim软件了，但是可能并没有打开，而是报错，这是有可能是没有把默认的仿真软件设置为modelsim，在这里可以设置  <img src="https://s2.loli.net/2022/06/30/LEeQ3Nv6I5kXqzr.jpg"></p></li><li><p>点击仿真后，modelsim的图标出现，却又再次提醒没有激活，但是单独打开modelsim是已经破解了正常打开的，这时有可能是quartus和modelsim两个破解过程中的使用的NIC(ID)不一样，把二者改为一样应该可以解决这个问题。</p></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>磨刀不误砍柴工，学习FPGA之前，把这些必要的软件设置舒服是很重要的。之前在上学时也安装下载过许多的软件，这几个是遇到过流程最麻烦的，可能也是不熟悉的原因，花了几天时间，还是挺有成就感的，终于可以开始正式的学习了。</p>]]></content>
    
    
    <categories>
      
      <category>FPGA学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>FPGA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>项目申请书-书写经验总结</title>
    <link href="/2022/06/28/%E9%A1%B9%E7%9B%AE%E7%94%B3%E8%AF%B7%E4%B9%A6-%E4%B9%A6%E5%86%99%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    <url>/2022/06/28/%E9%A1%B9%E7%9B%AE%E7%94%B3%E8%AF%B7%E4%B9%A6-%E4%B9%A6%E5%86%99%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<blockquote><p>最近段时间在帮老师写项目申请书。第一次写，遇到了不少问题，在这里记录一下，写一点经验与心得，方便之后的再次书写。</p></blockquote><h2 id="一、内容板块"><a href="#一、内容板块" class="headerlink" title="一、内容板块"></a>一、内容板块</h2><p>本次的项目申请书的主题是芯片缺陷检测。按照研究所给出的书写模板，主要分为九个主要版块</p><ol><li><p>项目的基本信息</p></li><li><p>项目负责人及主要成员</p></li><li><p><strong>项目的基本情况</strong></p><p>项目的研究背景、研究目标、研究意义、国内外研究现状、本项目研究成果的重要性和应用前景</p></li><li><p><strong>主要研究内容和目标</strong></p><p>项目的研究内容、研究方案、技术路线、关键技术、创新点</p></li><li><p>项目负责人及团队信息</p></li><li><p>研究基础和团队代表性研究成果</p></li><li><p><strong>项目实施进度计划</strong></p></li><li><p>预期成果</p></li><li><p><strong>社会效益与风险评估</strong></p></li></ol><p>在这九个主要的板块之中加黑的部分，也就是：<strong>3.项目的基本情况、4.主要研究内容和目标、7.项目实施进度计划、9.社会效益与风险评估</strong> 是主要的内容。其他几个部分填的都是一些相关的信息，可能就是填写几个表格。因此主要介绍一下这几块内容一个写法。</p><h2 id="二、书写技巧"><a href="#二、书写技巧" class="headerlink" title="二、书写技巧"></a>二、书写技巧</h2><p>在写项目书之前，通常会得到一个叫做“指南”的东西，这个里面说清楚了对方希望解决的问题还有希望达到的预期效果，比如本项目的指南，就说明了，想要用深度学习算法去完成芯片的缺陷检测，且列举了希望解决芯片缺陷中的哪些基本类型，并指明了要求是准确度达到95%以上。</p><p>所以各个部分都是围绕这些来写，也就是说，指南中的话反复出现在各个版块，且不要害怕重复。</p><h2 id="三、重点部分"><a href="#三、重点部分" class="headerlink" title="三、重点部分"></a>三、重点部分</h2><h3 id="1-项目的基本情况"><a href="#1-项目的基本情况" class="headerlink" title="1.项目的基本情况"></a>1.项目的基本情况</h3><ul><li>研究背景及意义。（研究背景和意义经常放一块去说，所以就可以归为一个小标题）<ul><li>首先芯片是什么，它在哪些方面广泛应用，有什么重要性和必要性。然后说《国家相关战略支持》对该产业的支持；</li><li>然后引到芯片缺陷检测方面，说一下为什么要进行芯片缺陷检测，指明这项任务的意义；</li><li>现有的芯片检测方法有哪些缺陷与不足，如果不改变会有什么后果；</li><li>引出当今机器视觉技术和深度学习技术的当今发展趋势，这项技术有什么优点。一些国外大公司已经开始布局。</li><li>使用深度学习进行芯片检测的意义：对国家、对产业、对落实某项国家政策。</li></ul></li><li>研究目标<ul><li>先用一句话概述：针对什么问题、利用&#x2F;基于什么技术优势、开发什么东西。</li><li>然后围绕着指南中的内容。算法要能解决哪些问题、应该具备什么样的特性（比如鲁棒性、可进化等）、准确度要达到什么程度。</li><li>还要超出指南，提出一些新的东西，比如本文讲算法部署到智能硬件。</li></ul></li><li>国内外研究现状<ul><li>搜集在芯片缺陷检测领域的相关文章，最好对不同的方法进行分类与归纳</li><li>最后要“综上所述”，概括出现有技术的问题，强调本项目研究的先进性与合理性。</li><li>记得要把引用的文献也写上。</li></ul></li></ul><h3 id="2-重要性与应用前景"><a href="#2-重要性与应用前景" class="headerlink" title="2.重要性与应用前景"></a>2.重要性与应用前景</h3><ul><li>“没我不行”。芯片缺陷检测很重要但国内技术落后。如果继续利用传统方法造成什么后果</li><li>“有我更好”。说一下用到的技术，这些技术有什么优势，用了之后可以解决指南中的那些问题。</li><li>应用前景，先简单提及背景：芯片产业很大，芯片缺陷的质检环节比不可少，有很大的应用前景。</li></ul><h3 id="3-研究内容和目标"><a href="#3-研究内容和目标" class="headerlink" title="3.研究内容和目标"></a>3.研究内容和目标</h3><ul><li>研究内容<ul><li>围绕着“指南”，将要解决的问题或者说要做的事，分为几个层级。每一个层级就是一个研究内容，这几个研究内容之间既相互独立又一脉相承，可以通过一个示意图先画出来。需要注意的是，这里每个研究内容要起一个小标题，要专业且完整。</li><li>示意图：<img src="https://s2.loli.net/2022/06/28/2NATOWsG48nkbwl.jpg"></li><li>然后在示意图下面，每一个内容描述一段话，并不涉及到具体技术，就是简单论述研究什么内容，算是对示意图的一个展开。</li></ul></li><li>研究方案<ul><li>研究方案也不是具体的内容，首先也是画一张图，讲清楚研究的步骤，对于每个研究内容，先做什么、后做什么</li><li>示意图：<img src="https://s2.loli.net/2022/06/28/t3XQJh9k5GNzcmO.jpg"></li><li>然后再用语句详细的描述步骤</li></ul></li><li>技术路线<ul><li>这里就需要写每一部分的详细技术了，比如对于数据集的准备，要对数据集的数量、专家标注、用到的图像处理技术展开写，以及展示具体的芯片缺陷图片。对于用到的算法，就需要将结构、公示等都写上。</li><li>还是可以根据研究内容去分点写。</li></ul></li><li>关键技术和创新点<ul><li>因为纯写创新内容并不好写，所以这里可以分为：拟解决的关键问题、主要创新点。</li><li>这里的主要创新点就不一定非要是创新，就可以对应的写 如何去解决那些关键问题，当然最好还是展示出创新。 比如你既觉得关键问题是：目标检测算法的优化。那么对应的创新点就是：针对微小芯片缺陷检测的检测算法优化。这里面不用写太多具体技术，那些公式、算法的大头还是放在技术路线里面。</li></ul></li></ul><h3 id="3-项目的实施进度"><a href="#3-项目的实施进度" class="headerlink" title="3.项目的实施进度"></a>3.项目的实施进度</h3><p>这一部分根据协商好的时间，将过程按照半年来分，把研究的内容分号，然后对于每一部分，再写一些具体研究的步骤就可以。</p><h3 id="4-社会效益与风险评估"><a href="#4-社会效益与风险评估" class="headerlink" title="4.社会效益与风险评估"></a>4.社会效益与风险评估</h3><ul><li>对于社会效益。主要就是项目实施之后对社会能起到的积极的作用。主要的方面有：促进经济发展、促进社会进步、带动就业、提高企业的产能与质量、提高人民生活水平之类的，就往里面套着写。</li><li>风险评估分为几个版块：技术风险、商业风险、管理风险，还有风险如何规避。对于风险，都要落脚在风险较小之上。<ul><li>技术风险。对于关键技术、本单位进行了深入理论研究、关键技术进行了大量实验、证明可行。本单位致力于研究什么、有资质。得出结论：基本无风险和不确定因素。</li><li>管理风险。本项目承担单位，——机构承担过多项国家级重点项目的管理与实施，具有很好的项目管理措施和经验，在管理上无风险。</li><li>商业风险。国产率上看，中国—–比重不断提升。中国—–国产化率提升，市场规模有较大的发展空间。因此，本项目的市场前景非常广阔。</li><li>规避风险的主要措施。对实验室和学校的情况进行介绍。对该行业之前有所涉及与研究。对关键技术进行了论证之类的。</li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章根据对几天书写项目书的经验进行了总结。主要展示了项目书分为那些版块，每个版块主要写些什么内容。虽然可能并不适用于各类项目申请书的书写，但是也算是有了一个大致了解，不至于上手后不知道要干什么、不知道要查找哪些</p>]]></content>
    
    
    <categories>
      
      <category>经验总结</category>
      
    </categories>
    
    
    <tags>
      
      <tag>项目书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FocusNote快捷操作</title>
    <link href="/2022/06/28/FocusNote%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C/"/>
    <url>/2022/06/28/FocusNote%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<blockquote><p>现在写博客的顺序是：现在FocusNote（专注笔记）上写好，然后复制到typora上，之后再写到博客相应的markdown文档中。</p></blockquote><p>FocusNote是国产的笔记软件，界面很好看，书写也很方便，写一些复盘或者总结资料都在这个上面，在几年前也买下了永久版本。因此在这里简单记录一下常用的快捷方式，之后就不用经常跑官网去找了。</p><p><strong>段落相关：</strong></p><table><thead><tr><th align="center">标题</th><th align="center">Ctrl+alt+1&#x2F;2&#x2F;3</th></tr></thead><tbody><tr><td align="center">清除标题</td><td align="center">Ctrl+alt+0</td></tr><tr><td align="center">有序列表</td><td align="center">Ctrl+shift+i</td></tr><tr><td align="center">无序列表</td><td align="center">Ctrl+shift+u</td></tr><tr><td align="center">待办事宜</td><td align="center">Ctrl+shift+y</td></tr><tr><td align="center">引用</td><td align="center">Ctrl+shift+q</td></tr><tr><td align="center">代码块</td><td align="center">Ctrl+shift+c</td></tr><tr><td align="center">链接</td><td align="center">Ctrl+l</td></tr><tr><td align="center">公式</td><td align="center">Ctrl+alt+c</td></tr><tr><td align="center">附件</td><td align="center">Ctrl+alt+f</td></tr></tbody></table><p><strong>字体相关：</strong></p><table><thead><tr><th align="center">加粗</th><th align="center">Ctrl+b</th></tr></thead><tbody><tr><td align="center">斜体</td><td align="center">Ctrl+i</td></tr><tr><td align="center">下划线</td><td align="center">Ctrl+u</td></tr><tr><td align="center">中划线</td><td align="center">Ctrl+t</td></tr><tr><td align="center">高亮</td><td align="center">Ctrl+1&#x2F;2…&#x2F;9</td></tr><tr><td align="center">清除高亮</td><td align="center">Ctrl+0</td></tr></tbody></table><p><strong>页面相关：</strong></p><table><thead><tr><th align="center">查看页面信息</th><th align="center">alt+ctrl+l</th></tr></thead><tbody><tr><td align="center">打开大纲</td><td align="center">alt+ctrl+o</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>各类教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>专注笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FPGA学习1：初始FPGA</title>
    <link href="/2022/06/20/FPGA%E5%AD%A6%E4%B9%A01%EF%BC%9A%E5%88%9D%E5%A7%8BFPGA/"/>
    <url>/2022/06/20/FPGA%E5%AD%A6%E4%B9%A01%EF%BC%9A%E5%88%9D%E5%A7%8BFPGA/</url>
    
    <content type="html"><![CDATA[<h2 id="1-FPGA是什么"><a href="#1-FPGA是什么" class="headerlink" title="1 FPGA是什么"></a>1 FPGA是什么</h2><p>​FPGA(Field Programmable Gate Array,简称FPGA)，<strong>现场可编程</strong>门阵列，一种以数字电路为主的集成芯片，属于可编程逻辑器件PLD（Programmable Logic Device)的一种。</p><h3 id="FPGA的分类"><a href="#FPGA的分类" class="headerlink" title="FPGA的分类"></a><strong>FPGA的分类</strong></h3><p><img src="https://raw.githubusercontent.com/machuanfeng/picture/main/img/2022-06-20.jpg"></p><h3 id="FPGA工作原理"><a href="#FPGA工作原理" class="headerlink" title="FPGA工作原理"></a><strong>FPGA工作原理</strong></h3><p>​FPGA是可以通过编程<strong>改变芯片内部电路结构</strong>，以此来满足不同硬件产品的应用需求。FPGA可编程跟软件编程有着本质的区别，对于CPU或者单片机的编程，往往是通过改变上面的寄存器的配置来实现的，但是并不会改变这个芯片的逻辑功能，但FPGA是确确实实把芯片内部的电路改变了，比如，上图分类中的第二种叫反熔丝技术，熔丝就是将电路烧断，而反熔丝就是将烧断的电路在连接起来。</p><p>​并不能通过软件编程，让一枚图形处理芯片编程为一枚通信芯片，FPGA则可以。FPGA的可编程性，叫硬件可编程。他让FPGA可以从逻辑门阵列进行编程，从而使FPGA可以在逻辑电路层面上改变。</p><p>​上面是比较直观的理解，接下来给出学术上的原理解释：</p><p>​FPGA采用了逻辑单元阵列LCA（Logic Cell Array）这样一个概念，内部包括可配置逻辑模块CLB（Configurable Logic Block）、输入输出模块IOB（Input Output Block）和内部连线（Interconnect）三个部分。 现场可编程门阵列（FPGA）是可编程器件，与传统逻辑电路和门阵列（如PAL，GAL及CPLD器件）相比，FPGA具有不同的结构。FPGA利用小型查找表（16×1RAM）来实现组合逻辑，每个查找表连接到一个D触发器的输入端，触发器再来驱动其他逻辑电路或驱动I&#x2F;O，由此构成了既可实现组合逻辑功能又可实现时序逻辑功能的基本逻辑单元模块，这些模块间利用金属连线互相连接或连接到I&#x2F;O模块。FPGA的逻辑是通过向内部静态存储单元加载编程数据来实现的，存储在存储器单元中的值决定了逻辑单元的逻辑功能以及各模块之间或模块与I&#x2F;O间的联接方式，并最终决定了FPGA所能实现的功能，FPGA允许无限次的编程。</p><h3 id="“现场可编程”特性"><a href="#“现场可编程”特性" class="headerlink" title="“现场可编程”特性"></a><strong>“现场可编程”特性</strong></h3><p>​FPGA可以在现场完成编程，而不需要把芯片拆下来，或是送回厂商来完成这个编程的操作，可通过远程或本地完成真正意义上的实时编程。</p><h2 id="2-FPGA的优势"><a href="#2-FPGA的优势" class="headerlink" title="2 FPGA的优势"></a><strong>2 FPGA的优势</strong></h2><p>​FPGA可以实现任意电路组合，我们可以把FPGA看成是一堆乐高，根据需要既可以组成非常简单的模型，也可以组合出非常复杂的模型。这就使得FPGA具备高度的灵活性。</p><p>​因为FPGA是通过逻辑电路来实现功能的，所以它的算力非常强，同时功耗非常低。因此很多人称它成为“芯片之王”。目前在很多行业被广泛使用。</p><p>总结，FPGA的优势：</p><p>1、编程灵活，开发周期短（可以替代ASIC）；</p><p>2、并发处理，速度非常快；</p><p>3、功耗低；</p><p>4、FPGA技术趋于成熟，成本已经和ASIC相当。</p><h2 id="3-FPGA的应用方向"><a href="#3-FPGA的应用方向" class="headerlink" title="3 FPGA的应用方向"></a>3 FPGA的应用方向</h2><ol><li>通信领域<ul><li>低延时 高效率</li><li>产品快速开发 各种协议的切换</li></ul></li><li>视频图像处理<ul><li>最高的实时性</li></ul></li><li>人工智能<ul><li>加速深度学习</li></ul></li><li>汽车驾驶<ul><li>低延时</li></ul></li></ol><h2 id="4-产业现状"><a href="#4-产业现状" class="headerlink" title="4 产业现状"></a>4 产业现状</h2><p><img src="https://raw.githubusercontent.com/machuanfeng/picture/main/img/2022-06-20_2.jpg"></p><p><img src="https://raw.githubusercontent.com/machuanfeng/picture/main/img/2022-06-20_3.jpg"></p><p>​国外的赛灵思比较厉害，是巨头</p><p>​国内普遍性能落后一些</p>]]></content>
    
    
    <categories>
      
      <category>FPGA学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>FPGA</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图床搭建</title>
    <link href="/2022/06/17/Markdown%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86--%E5%9B%BE%E5%BA%8A%E4%B8%8E%E8%BD%AC%E7%A0%81/"/>
    <url>/2022/06/17/Markdown%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86--%E5%9B%BE%E5%BA%8A%E4%B8%8E%E8%BD%AC%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h2 id="一、图床"><a href="#一、图床" class="headerlink" title="一、图床"></a>一、图床</h2><h3 id="1-图床介绍"><a href="#1-图床介绍" class="headerlink" title="1 图床介绍"></a>1 图床介绍</h3><p>对于不写博客的伙伴，图床可能是一个陌生的词汇。从名字来看，应该和存储图片有关，但为什么要叫做“床”呢？</p><p>图床其实是互联网上进行图片存储的空间。因为博客往往是以markdown的形式发布，而markdown不同于平时编辑的word文档，它其中显示的图片并不是嵌入在文件中，而是引用外部的源。语法如下：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">!<span class="hljs-selector-attr">[]</span>(这里写图片在本服务器或本计算机的存储地址，或者网上图片的网址)<br></code></pre></td></tr></table></figure><p>这样以来，就会出现两个问题：</p><ol><li>如果是引用存储在本地的图片<ul><li>图片的路径不容易写对</li><li>如果误将本地的图片删除，那么博客中就会报错</li></ul></li><li>如果随便引用一个网上的图片<ul><li>这个图片可能随时会被作者删除或者其他原消失</li></ul></li></ol><p>在这种情况下，自己在网络上开辟一个安全可靠的网络空间就很重要。本文就记录一下图床的搭建与使用。</p><h3 id="2-图床搭建"><a href="#2-图床搭建" class="headerlink" title="2 图床搭建"></a>2 图床搭建</h3><p>github、Gitee、阿里云等都可以开辟空间上传图片，所以本身就具备了作为图床的能力，我们就可以利用这些免费的空间来搭建图床。然而每次手动上传操作时比较困难的，这是出现了一个图床的管理工具叫picgo，这是一个免费开源的工具。界面如下：</p><p><img src="https://raw.githubusercontent.com/machuanfeng/picture/main/img/2022-6-17-1.jpg" alt="img"></p><p>配置好连接后，将图片拖到虚线框中就可以方便的上传到图床空间，实现的机制就是token验证。</p><p>建立连接的方法也很简单，在picgo的官方文档就给出了详细的教程（包含github、七牛图库、阿里云OSS都有）：<a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#github%E5%9B%BE%E5%BA%8A">配置手册 | PicGo</a></p><p><img src="https://raw.githubusercontent.com/machuanfeng/picture/main/img/2022-6-17-2.jpg" alt="img"></p><p>如果在配置过程中有疑问可以观看这个B站视频<a href="https://www.bilibili.com/video/BV1Lt411J7Mp?spm_id_from=333.337.search-card.all.click">PicGo五分钟打造你的私人图床（稳定、快速、免费）_哔哩哔哩_bilibili</a></p><p>这是SMMS图床上传后的界面：</p><p><img src="https://raw.githubusercontent.com/machuanfeng/picture/main/img/2022-6-17-3.jpg" alt="img"></p><h2 id="二、转码"><a href="#二、转码" class="headerlink" title="二、转码"></a>二、转码</h2><p>这个方法简单粗暴，就是将图片转换为一段代码，就可以将其以文字的形式嵌入markdown文档</p><h3 id="1-通过在线网站"><a href="#1-通过在线网站" class="headerlink" title="1 通过在线网站"></a>1 通过在线网站</h3><p><a href="http://www.jsons.cn/img2base64">图片在线转换base64编码-在线base64编码转换成图片工具 (jsons.cn)</a></p><p><img src="https://raw.githubusercontent.com/machuanfeng/picture/main/img/2022-6-17-4.jpg" alt="img"></p><h3 id="2-通过运行python代码"><a href="#2-通过运行python代码" class="headerlink" title="2 通过运行python代码"></a>2 通过运行python代码</h3><p>参考<a href="https://blog.csdn.net/weixin_35757704/article/details/123466261">python图片转base64编码，与base64编码转图片_呆萌的代Ma的博客-CSDN博客_python 图片base64编码</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> io <span class="hljs-keyword">import</span> BytesIO<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">img_to_base64</span>(<span class="hljs-params">image_path</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;图片转base64，返回byte类型&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(image_path, <span class="hljs-string">&quot;rb&quot;</span>) <span class="hljs-keyword">as</span> image_file:<br>        data = base64.b64encode(image_file.read())<br>        <span class="hljs-keyword">return</span> data<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">base64_to_img</span>(<span class="hljs-params">base64_data</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;base64转图片&quot;&quot;&quot;</span><br>    source_image = Image.<span class="hljs-built_in">open</span>(BytesIO(base64.b64decode(base64_data)))<br>    source_image.show()  <span class="hljs-comment"># 展示图片</span><br>    <span class="hljs-keyword">return</span> source_image<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    base64_d = img_to_base64(<span class="hljs-string">&quot;this_img.png&quot;</span>)  <span class="hljs-comment"># 路径转base64</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;base64的值：&quot;</span>, base64_d.decode(<span class="hljs-string">&quot;utf-8&quot;</span>)[:<span class="hljs-number">40</span>], <span class="hljs-string">&quot;....&quot;</span>)  <span class="hljs-comment"># 打印base64的前40个字符</span><br>    image = base64_to_img(base64_d)<br>    image.save(<span class="hljs-string">&quot;本地图片.png&quot;</span>)  <span class="hljs-comment"># 保存图片</span><br></code></pre></td></tr></table></figure><h3 id="3-通过typora"><a href="#3-通过typora" class="headerlink" title="3 通过typora"></a>3 通过typora</h3><p>刚刚发现将图片复制进typora后会自动转换。所以就可以实现一种操作：</p><p>先在word的工具上写好文档，然后整个复制到typora中，就生成了最终能上传的文档。</p><h3 id="4-缺点"><a href="#4-缺点" class="headerlink" title="4 缺点"></a>4 缺点</h3><p>图片的信息量很大，转换出来的编码也很长，如下</p><p><img src="https://raw.githubusercontent.com/machuanfeng/picture/main/img/2022-6-17-5.jpg" alt="img"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本篇总结了markdown中图片的处理方法，第一种是利用图床，方便快捷，但需要进行相关配置；第二种利用转码，可以将图片嵌入markdown文件，但是编码很长，很不美观。但是两种方法的操作都不困难。</p>]]></content>
    
    
    <categories>
      
      <category>各类教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>图床</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电脑远程控制</title>
    <link href="/2022/06/16/%E7%94%B5%E8%84%91%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <url>/2022/06/16/%E7%94%B5%E8%84%91%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<p>最近探索了两种远程控制的方法。</p><blockquote><p><strong>第一种是用向日葵</strong>，使用方法非常简单，只需要在ipad和电脑上都下载向日葵，输入相应的访问号后就能直接实现访问，连接速度、稳定性都很不错，不好的一点就是<strong>交互性很差</strong>，鼠标的邮右键和滚轮无法操作，这对于经常使用电脑已经习惯电脑操作的人几乎无法接受。所以以后可以单用向日葵来传输电脑上的文件。<br><strong>另一款软件是RDcient</strong>，这个软件利用的是windows系统自己的远程访问功能，所以克服了不能使用邮件和滚轮的问题，所有的操作都和电脑一模一样，所以只要有个可以蓝牙连接ipad的键盘还有鼠标可以完美的实现远程办公。但是它的配置过程稍微复杂一些，而且还需要window是专业版（因为远程功能是专业版才会提供的。同时另一个致命问题是rdclient只能实现统一局域网下访问，但是有其他方法能实现外网的访问。</p></blockquote><p>本文就来介绍RDclient的具体步骤（包括windows专业版激活、RDclient的配置以及如何实现外网访问）</p><h3 id="1-window专业版激活"><a href="#1-window专业版激活" class="headerlink" title="1. window专业版激活"></a><strong>1. window专业版激活</strong></h3><p>这个很简单，可以在百度上搜索相应的激活码，但是可能大多失效。可以去淘宝上买激活码，也就几块钱，商家也会给教程，教你一步步操作。</p><h3 id="2-RDclient配置"><a href="#2-RDclient配置" class="headerlink" title="2. RDclient配置"></a><strong>2. RDclient配置</strong></h3><p>在ipad应用中心下载软件。之后会让填写相应的用户信息：</p><ol><li>名称写为IP地址</li><li>用户名和密码是你登录windows时的微软账号密码</li><li>网关写为默认网关，网关界面中的用户还是选择之前设置好的微软账户</li><li>保存后即可实现访问</li></ol><p>ip地址和默认网关可以在电脑运行框中输入ifconfig现实。<br>运行框的唤起方法：：win+r 在小框中输入cmd<br><img src="https://raw.githubusercontent.com/machuanfeng/picture/main/img/2022-06-16-1.jpg"></p><h3 id="3-实现外网访问"><a href="#3-实现外网访问" class="headerlink" title="3. 实现外网访问"></a><strong>3. 实现外网访问</strong></h3><p>实现外网访问的原理很简单：让外网伪装成局域网，可以用到一个软件叫蒲公英，在电脑上下载一个，在平板上下载一个，注册账号使其运行，两个地方使用同一账号登录后就会自动组网，变成虚拟的局域网，至于这个虚拟局域网的ip网址可以在蒲公英管理平台这个网页看到。（蒲公英的下载地址不好找，直接贴在这里<a href="https://pgy.oray.com/download/personal/#visitor">蒲公英软件客户端官方下载 - 贝锐蒲公英官网 (oray.com)</a>）<br>当知道虚拟ip后，再用ipconfig指令查看ipv4的地址，找到其中是虚拟ip的那个（两个很相似），然后查看对应的网关，知道这些信息后，就像之前配置RDclient的操作一边，再建立一个连接，这就实现了外网访问。（但要注意，ipad和电脑上的蒲公英必须保持运行的状态）</p>]]></content>
    
    
    <categories>
      
      <category>各类教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>电脑远程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MarkDown语法</title>
    <link href="/2022/06/13/MarkDown%E8%AF%AD%E6%B3%95/"/>
    <url>/2022/06/13/MarkDown%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本篇文章记录一些Markdown的语法，为以后写博客做好准备。<br>参考学习文章：<a href="https://blog.csdn.net/u014061630/article/details/81359144">https://blog.csdn.net/u014061630/article/details/81359144</a></p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>文章分为四部分内容：快捷键、基本语法、常用技巧、软件推荐。</p><h2 id="一、快捷键"><a href="#一、快捷键" class="headerlink" title="一、快捷键"></a>一、快捷键</h2><table><thead><tr><th>操作</th><th>快捷键</th></tr></thead><tbody><tr><td>加粗</td><td>Ctrl+B</td></tr><tr><td>斜体</td><td>Ctrl+I</td></tr><tr><td>引用</td><td>Ctrl + Q</td></tr><tr><td>插入链接</td><td>Ctrl + L</td></tr><tr><td>插入代码</td><td>Ctrl + K</td></tr><tr><td>插入图片</td><td>Ctrl + G</td></tr><tr><td>提升标题</td><td>Ctrl + H</td></tr><tr><td>有序列表</td><td>Ctrl + O</td></tr><tr><td>无序列表</td><td>Ctrl + U</td></tr><tr><td>横线</td><td>Ctrl + R</td></tr><tr><td>撤销</td><td>Ctrl + Z</td></tr><tr><td>重做</td><td>Ctrl + Y</td></tr></tbody></table><h2 id="二、基本语法"><a href="#二、基本语法" class="headerlink" title="二、基本语法"></a>二、基本语法</h2><h4 id="2-1-标题分级"><a href="#2-1-标题分级" class="headerlink" title="2.1 标题分级"></a>2.1 标题分级</h4><p><strong>共支持六级标题</strong></p><p>一级标题：# 一级</p><p>二级标题：## 二级</p><p>三级标题：### 三级</p><p>效果如下：</p><p><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/11/kuangstudyc654ffcf-17b8-4073-83dc-33f39246bcff.png"></p><p>（4-6级依次类推）</p><h4 id="2-2字体的斜体、粗体、删除线"><a href="#2-2字体的斜体、粗体、删除线" class="headerlink" title="2.2字体的斜体、粗体、删除线"></a>2.2字体的斜体、粗体、删除线</h4><p>倾斜1：*演示文字*</p><p>倾斜2：_演示文字_</p><p>加粗1：**演示文字**</p><p>倾斜加粗：***演示文字***</p><p>删除线：~~演示文字~~</p><p>效果如下：</p><p><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/11/kuangstudyeaa128b5-7255-40ad-87a8-5f7e4d8cda06.png"></p><h4 id="2-3代码块"><a href="#2-3代码块" class="headerlink" title="2.3代码块"></a>2.3代码块</h4><p>`&#96;&#96;<br>代码内容<br>import numpy as np<br>import pandas as pd<br>`&#96;&#96;</p><p>效果演示：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elm">代码内容：<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br></code></pre></td></tr></table></figure><h4 id="2-4引用"><a href="#2-4引用" class="headerlink" title="2.4引用"></a>2.4引用</h4><p>&gt;引用1</p><p>&gt;&gt;引用2</p><p>&gt;&gt;&gt;引用3</p><p>效果演示：</p><p><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/11/kuangstudy5a765499-7ba3-4634-bdb2-82d8a309b4b3.png"></p><p>还可进行嵌套：</p><p><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/11/kuangstudy316fd93a-a60d-4626-9069-dab46a2c253f.png"></p><h4 id="2-5有序列表与无需列表"><a href="#2-5有序列表与无需列表" class="headerlink" title="2.5有序列表与无需列表"></a>2.5有序列表与无需列表</h4><blockquote><p>无序列表</p></blockquote><p>- 第一行</p><p>- 第二行</p><p>- 第三行</p><p>（注意-后面必须加一个空格才能生效）</p><p>效果演示：</p><p><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/11/kuangstudy1b4fd874-6289-490e-8848-65ead6440f41.png"></p><blockquote><p>有序列表</p></blockquote><p>1.(空格)第一行</p><p>2.(空格)第二行</p><p>3.(空格)第三行</p><p>效果演示：</p><p><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/11/kuangstudyd087773c-e9b7-4a76-92a6-3f8839ac8dbc.png"></p><h4 id="2-6表格"><a href="#2-6表格" class="headerlink" title="2.6表格"></a>2.6表格</h4><blockquote><p>使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行</p></blockquote><p>|  表头    | 表头  |<br>|  - - - -  | - - - -  |<br>| 单元格  | 单元格 |<br>| 单元格  | 单元格 |</p><p>效果演示：</p><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><h2 id="三、特殊用法"><a href="#三、特殊用法" class="headerlink" title="三、特殊用法"></a>三、特殊用法</h2><h4 id="3-1-想输出某个符号，不想让它作为语法标记符，使用-，-后面加的字符会显示出来"><a href="#3-1-想输出某个符号，不想让它作为语法标记符，使用-，-后面加的字符会显示出来" class="headerlink" title="3.1 想输出某个符号，不想让它作为语法标记符，使用\，\后面加的字符会显示出来"></a>3.1 想输出某个符号，不想让它作为语法标记符，使用\，\后面加的字符会显示出来</h4><h4 id="3-2-如果想更换字体"><a href="#3-2-如果想更换字体" class="headerlink" title="3.2 如果想更换字体"></a>3.2 如果想更换字体</h4> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"> <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">face</span>=<span class="hljs-string">&quot;黑体&quot;</span>&gt;</span>我是黑体字<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">face</span>=<span class="hljs-string">&quot;微软雅黑&quot;</span>&gt;</span>微软雅黑<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">face</span>=<span class="hljs-string">&quot;楷体&quot;</span>&gt;</span>楷体<span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><br></code></pre></td></tr></table></figure><p>效果演示</p><p><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/11/kuangstudybcae9639-a98b-4dcd-86ce-3d2a40e1a51f.png"></p><h4 id="3-3-规定颜色和大小"><a href="#3-3-规定颜色和大小" class="headerlink" title="3.3 规定颜色和大小"></a>3.3 规定颜色和大小</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;font <span class="hljs-attribute">color</span>=#1157ff <span class="hljs-attribute">size</span>=4 <span class="hljs-attribute">face</span>=<span class="hljs-string">&quot;宋体&quot;</span>&gt;颜色为#11577ff，大小为4的宋体&lt;/font&gt;<br></code></pre></td></tr></table></figure><p>演示效果</p><p><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/11/kuangstudyda0f7fe8-dcd5-43d3-9e06-a7a25de1f67b.png"></p><h2 id="四、软件推荐"><a href="#四、软件推荐" class="headerlink" title="四、软件推荐"></a>四、软件推荐</h2><p>Typora 是一款支持实时预览的 Markdown 文本编辑器。它有 OS X、Windows、Linux 三个平台的版本，并且由于仍在测试中，是完全免费的。<br><img src="https://kuangstudy.oss-cn-beijing.aliyuncs.com/bbs/2021/01/11/kuangstudyd05a7712-4d40-46f9-bf6d-8fdb1008cf62.png"><br>下载地址：<a href="https://www.typora.io/">https://www.typora.io/</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本文介绍的是markdown的基础部分，除此之外还有能写出公式的latex语法以及绘制流程图的操作，这些知识以后有时间继续总结</p>]]></content>
    
    
    <categories>
      
      <category>各类教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo的基本使用</title>
    <link href="/2022/06/12/hexo%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/06/12/hexo%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>这是第一篇文章，简单记录一下hexo发布文章、部署服务器等使用命令。</p><h2 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h2><h3 id="创建新的文章"><a href="#创建新的文章" class="headerlink" title="创建新的文章"></a>创建新的文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span>   引号中写文章名称<br></code></pre></td></tr></table></figure><p>更多信息访问: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>更多信息访问: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate     这个命令可以简化为 hexo g<br></code></pre></td></tr></table></figure><p>更多信息访问: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="部署到网站"><a href="#部署到网站" class="headerlink" title="部署到网站"></a>部署到网站</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy    这个命令可以简写为 hexo d<br></code></pre></td></tr></table></figure><p>更多信息访问: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h2 id="相关语法"><a href="#相关语法" class="headerlink" title="相关语法"></a>相关语法</h2><h3 id="文章分类"><a href="#文章分类" class="headerlink" title="文章分类"></a>文章分类</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 给文章添加一个分类。</span><br>categories: 1<br><span class="hljs-comment"># 这会将文章分类1/2子分类目录下。</span><br>categories: [1, 2]<br><span class="hljs-comment">#多分类，文章被分类到123、456以及123的自分类789这3个分类下面</span><br><span class="hljs-comment">#注意-后面有一个空格</span><br>categories:<br>   - [123]   <br>   - [456]<br>   - [123, 789]<br></code></pre></td></tr></table></figure><h3 id="文章标签"><a href="#文章标签" class="headerlink" title="文章标签"></a>文章标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#两种不同的写法</span><br>tags:<br>  - 123<br>  - 456<br>tags: [123, 456]<br></code></pre></td></tr></table></figure><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">excerpt: 这里写简介内容<br></code></pre></td></tr></table></figure><h2 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a>报错解决</h2><h3 id="有时在”hexo-d”后会出现error的提示"><a href="#有时在”hexo-d”后会出现error的提示" class="headerlink" title="有时在”hexo d”后会出现error的提示"></a>有时在”hexo d”后会出现error的提示</h3><p>可以依次执行下面三条命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br>$ hexo g<br>$ hexo d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>各类教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
